{"version":3,"sources":["components/Entity/Entity.module.scss","components/Controls/Controls.module.scss","components/Dialog/Dialog.module.scss","components/Relations/Relations.module.scss","components/Panel/Panel.module.scss","components/Hint/Hint.module.scss","components/Waveform/Waveform.module.scss","components/App/App.module.scss","components/Completions/Completions.module.scss","components/Entities/Entities.module.scss","components/SideColumn/SideColumn.module.scss","interfaces/object/AudioPlus/AudioPlus.module.scss","components/TextHighlight/TextHighlight.module.scss","interfaces/object/TextRegion/TextRegion.module.scss","components/Segment/Segment.module.scss","examples/sentiment_analysis/config.xml","examples/audio_classification/config.xml","examples/audio_regions/config.xml","examples/chatbot_analysis/config.xml","examples/image_bbox/config.xml","examples/named_entity/config.xml","examples/references/config.xml","examples/transcribe_audio/config.xml","core/Registry.js","core/Requests.js","utils/unique.js","core/Helpers.js","core/Tree.js","utils/utilities.js","utils/colors.js","utils/date.js","utils/index.js","utils/debounce.js","utils/styles.js","components/Completions/Completions.js","components/Hint/Hint.js","components/Controls/Controls.js","components/Panel/Panel.js","components/Settings/Settings.js","components/Debug.js","components/Node.js","components/Relations/Relations.js","components/Entities/Entities.js","components/Entity/Entity.js","components/SideColumn/SideColumn.js","core/Types.js","interfaces/visual/View.js","core/Template.js","interfaces/mixins/ProcessAttrs.js","interfaces/visual/Table.js","interfaces/visual/Header.js","interfaces/visual/HyperText.js","components/Dialog/Dialog.js","interfaces/visual/Dialog.js","interfaces/object/Audio.js","components/Waveform/Waveform.js","interfaces/mixins/Regions.js","interfaces/mixins/Normalization.js","interfaces/control/Label.js","interfaces/mixins/SelectedModel.js","interfaces/control/Labels.js","interfaces/control/Rating.js","interfaces/object/AudioRegion.js","interfaces/object/AudioPlus.js","interfaces/control/Rectangle.js","interfaces/control/RectangleLabels.js","interfaces/object/RectRegion.js","interfaces/object/PolygonPoint.js","interfaces/control/Polygon.js","interfaces/control/PolygonLabels.js","interfaces/object/PolygonRegion.js","interfaces/object/Image.js","components/TextHighlight/Range.js","components/TextNode/TextNode.js","components/TextHighlight/Node.js","components/TextHighlight/UrlNode.js","components/TextHighlight/EmojiNode.js","components/TextHighlight/TextHighlight.js","interfaces/object/TextRegion.js","interfaces/object/Text.js","interfaces/control/Choice.js","components/Choice/Choice.js","interfaces/control/Choices.js","interfaces/object/TextAreaRegion.js","interfaces/control/TextArea.js","interfaces/control/List.js","interfaces/control/Ranker.js","components/Segment/Segment.js","components/App/App.js","serviceWorker.js","stores/TaskStore.js","core/TimeTraveller.js","core/Hotkey.js","stores/RelationStore.js","stores/NormalizationStore.js","stores/RegionStore.js","stores/CompletionStore.js","constants/Api.js","stores/AppStore.js","env/production.js","examples/sentiment_analysis/index.js","examples/audio_classification/index.js","examples/audio_regions/index.js","examples/chatbot_analysis/index.js","examples/image_bbox/index.js","examples/named_entity/index.js","examples/references/index.js","env/development.js","examples/transcribe_audio/index.js","index.js"],"names":["module","exports","block","button","labels","tag","pushable","hide-dd-icon","drag-handle","noselect","common-container","functional-buttons","editor-side-column","skip","task","container","wrapper","block_selected","name","date","section","section__blocks","delete","main","progress","wave","menu","editor","content","buttons","item","card","play","state","__webpack_require__","p","Registry","_Registry","Object","classCallCheck","this","tags","models","views","views_models","model","view","push","values","modelName","Error","keys","join","wrapperRequest","url","method","headers","body","window","fetch","credentials","then","response","res","status","json","Requests","fetcher","Accept","poster","Content-Type","remover","patch","guidGenerator","nanoid","cloneNode","node","snapshot","getSnapshot","getType","create","objectSpread","id","restoreNewsnapshot","fromModel","renderItem","el","View","getViewByModel","react_default","a","createElement","key","Tree","cloneReactTree","items","attrs","clone","children","React","Children","forEach","child","props","moreProps","cloneElement","renderChildren","length","map","treeToModel","html","buildData","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","attr","value","err","return","attrsToProps","nodeName","htmlSelfClosingTags","split","newData","i","edsplit","editSelfClosingTags","replace","document","parse5","parseFragment","root","childNodes","addNode","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","chld","findInterface","tree","fn","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","findParentOfType","obj","classes","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","c","getParentOfType","filterChildrenOfType","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","cssConverter","style","firstIndexOfColon","result","attributes","indexOf","substring","x","toUpperCase","isString","String","isStringEmpty","isStringJSON","JSON","parse","e","getUrl","text","stringToTest","slice","match","exec","toTimeString","ms","Date","toUTCString","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexToRGBA","hex","opacity","r","g","b","parseInt","concat","colorToRGBA","alpha","toLowerCase","convertToRGBA","charAt","stringToColor","str","hash","charCodeAt","color","toString","substr","rgbaChangeAlpha","rgba","msToHMS","seconds","hours","Math","floor","prettyDate","time","test","diff","getTime","day_diff","isNaN","ceil","utils","Checkers","Colors","UDate","debounce","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","setTimeout","apply","styleToProp","styles","filter","trim","reduce","styleObj","defineProperty","Completion","observer","_ref","store","List","Item","backgroundColor","selected","padding","onClick","ev","completionStore","selectCompletion","Content","Header","as","pk","Description","createdAgo","Utils","createdDate","createdBy","className","es_button","type","preventDefault","deleteCompletion","honeypot","removeHoneypot","ghost","setHoneypot","Completions","title","bodyStyle","divided","relaxed","savedCompletions","Component","Hint","localClass","data-copy","copy","inject","taskInformation","submitButton","skipButton","settings","enableHotkeys","enableTooltips","Hint_Hint","hasInterface","skipTask","icon","sendTask","submit","history","canUndo","undo","canRedo","redo","reset","setPrelabeling","display","resetPrelabeling","showingDescription","closeDescription","openDescription","toggleSettings","modal","visible","showingSettings","footer","onCancel","es_checkbox","defaultChecked","onChange","toggleHotkeys","toggleTooltips","DebugComponent","_this2","self","completion","Button","basic","setState","stringify","toJSON","serializeCompletion","deserializeCompletion","addInitialCompletion","project","resetState","addTask","addGeneratedCompletion","markLoading","traverseTree","updateValue","Form","TextArea","target","Node","click","getRoot","regionStore","unselectAll","selectRegion","textDecorationLine","textDecorationStyle","href","start","toFixed","end","_value","w","width","scaleX","y","height","scaleY","NodeMinimal","_ref2","react","Relation","rl","isValidReference","node1","node2","onMouseOver","toggleHighlight","onMouseOut","Node_NodeMinimal","deleteRelation","relations","relationStore","Relations_Relation","Entities","regions","paddingLeft","deleteAllRegions","region","toggleHightlight","RenderStates","_render","s","element","pid","getSelectedNames","bgColor","findLabel","background","getSelectedString","states","highlightedNode","normalization","cursor","deleteNormalization","Entity_RenderStates","startRelationMode","setNormalizationMode","unselectRegion","deleteRegion","normalizationMode","marginTop","onSubmit","setNormalization","normInput","Input","setNormInput","placeholder","Entity","Relations","oneOf","arr","types","union","dispatcher","sn","find","val","getModelByTag","Types","unionArray","maybeNull","array","allModelsTypes","modelsArr","results","isType","nt","getParentOfTypeString","parent","getParent","Array","isArray","_loop","v","_ret","TagAttrs","optional","string","backgroundcolor","margin","Model","identifier","ViewModel","compose","HtxView","marginRight","addTag","variableNotation","variable","_index","is","runTemplate","options","re","reExp","code","add","line","js","index","Function","console","error","message","ProcessAttrsMixin","actions","dataObj","size","TableModel","HtxTable","Table","celled","collapsing","Body","k","Row","Cell","Subheader","number","underline","boolean","HeaderModel","HtxHeader","typography","Title","level","fromStateJSON","choices","names","get","from_name","HyperTextActions","HyperTextModel","HtxHyperTextView","dangerouslySetInnerHTML","__html","DialogView","hint","selectedStyle","bg","maxWidth","Replica","DialogActions","DialogModel","HtxDialogView","empty","ind","Dialog_DialogView","flexFlow","maxHeight","overflowY","paddingRight","divider","dashed","AudioModel","HtxAudioView","controls","src","HtxAudio","formatTimeCallback","pxPerSec","Number","minutes","secondsStr","round","timeInterval","primaryLabelInterval","secondaryLabelInterval","Waveform","_this","possibleConstructorReturn","getPrototypeOf","call","onChangeZoom","zoom","wavesurfer","onChangeVolume","volume","setVolume","onChangeSpeed","speed","setPlaybackRate","playing","pos","colors","waveColor","progressColor","$el","ReactDOM","findDOMNode","$waveform","querySelector","RegionsPlugin","dragSelection","slop","WaveSurfer","backend","plugins","TimelinePlugin","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","CursorPlugin","showTime","load","on","reg","_region","onMouseLeave","addRegion","selectedregionbg","onUpdateEnd","slider","oninput","onCreate","handlePlay","onLoad","_this3","row","col","span","input_number","min","max","es_slider","step","range","haszoom","RegionsMixin","highlighted","setHighlightedNode","relationMode","stopRelationMode","onClickRegion","addRelation","deleteNodeRelation","setHighlight","NormalizationMixin","alias","hotkey","showalias","aliasstyle","selectedcolor","toggleSelected","sel","shouldBeUnselected","markSelected","onHotKey","LabelModel","HtxLabelView","SelectedModelMixin","selectedLabels","isSelected","joinstr","toname","choice","enumeration","selectionstyle","getSelectedColor","toStateJSON","to_name","l","label","LabelsModel","HtxLabels","marginBottom","justifyContent","alignItems","maxrating","rating","handleRate","increaseValue","RatingModel","HtxRating","Rating","defaultRating","maxRating","onRate","clearable","fontSize","AudioPlusModel","buildTree","source","_ws_region","update","border","beforeDestroy","remove","AudioRegionModel","rangeValue","hasStates","toNames","activeStates","findRegion","log","m","_ws","setRangeValue","playBackRate","ws_region","clonedStates","find_r","regionbg","ws","wsCreated","Waveform_Waveform","playPause","HtxAudioPlus","fillcolor","strokewidth","strokecolor","canrotate","RectangleModel","rectanglelabels","Composition","RectangleLabelsModel","HtxRectangleLabels","rotation","wp","hp","sw","sh","coordstype","ImageModel","setSelected","coordsInside","rx","ry","rw","rh","setPosition","setScale","addState","setFill","fill","updateImageSize","from","stageWidth","stageHeight","RectRegionModel","HtxRectangle","wwidth","wheight","onChangedPosition","naturalWidth","naturalHeight","h","ReactKonva","assign","onTransformEnd","t","getAttr","onDragEnd","dragBoundFunc","stage","_stageRef","draggable","PolygonPoint","init_x","init_y","afterCreate","movePoint","_movePoint","handleMouseOverStartPoint","closed","points","setX","setY","scale","small","medium","large","setMouseOverStartPoint","handleMouseOutStartPoint","PolygonPointView","stroke","startPointAttr","hitStrokeWidth","dragOpts","mouseOverStartPoint","onDragStart","onDragMove","radius","strokeWidth","dragOnTop","pointsize","pointstyle","PolygonModel","polygonlabels","PolygonLabelsModel","HtxPolygonLabels","fromName","isCW","linePoints","flatten","flat","toFlatten","findPolyOutline","left","acc","loc","right","top","bottom","inside","vs","j","xi","yi","xj","yj","readOnlyError","addPoint","closePoly","_addPoint","insertPoint","insertIdx","splice","canClose","p1","p2","_self$parent","perc_w","perc_h","perc_points","PolygonRegionModel","HtxPolygon","redraw","setDragMode","setActivePolygon","cancelBubble","resize","maxwidth","integer","selectedShape","safeReference","activePolygon","shapes","controlButton","controlButtonType","poly","updateIE","_ev$target","_setStageRef","ref","_deleteSelectedShape","destroy","shape","_addShape","onImageClick","_addRect","_addPoly","rectstrokecolor","wx","evt","offsetX","wy","offsetY","__addRect","rect","parseFloat","dragMode","shapeModel","TransformerComponent","checkNode","transformer","getStage","selectedShapeName","detach","getLayer","batchDraw","selectedNode","findOne","attachTo","resizeEnabled","rotateEnabled","anchorSize","HtxImageView","handleDblClick","handleOnClick","handleStageMouseDown","_this$props","divStyle","onDblClick","onMouseDown","Image_TransformerComponent","HtxImage","Range","TextNode","data-position","position","overlap","keyNode","HtxTextNode","highlightStyle","charIndex","getRangeKey","getKey","getStyle","overlapItem","includes","reduceRight","TextNode_TextNode","UrlNode","wordWrap","EmojiNode","TextHighlight","dismissMouseUp","ranges","onMouseOverHighlightedWord","nl","char","arrOverlap","toConsumableArray","TextHighlight_EmojiNode","TextHighlight_UrlNode","enabled","getSelection","selectionContents","getRangeAt","cloneRange","cloneContents","virtualDiv","appendChild","elementsWithSup","getElementsByTagName","innerText","selection","createRange","startContainer","parentNode","dataset","endContainer","startContainerPosition","endContainerPosition","rangeObj","onTextHighlighted","event","mouseEvent","bind","letterGroup","textCharIndex","rangeRenderer","isEmoji","getUrlNode","getEmojiNode","getLetterNode","lastRange","newText","getRange","emojiRegex","getNode","rangeCharIndex","getRanges","onMouseUp","onMouseEnter","onDoubleClick","TextModel","highlightStates","TextRegionModel","RegionState","localState","selectedString","outline","data-hint","HtxTextRegion","labelColor","markStyle","borderRadius","regionStates","TextRegion_RegionState","hover","selelectwithoutlabel","hidden","adjustselection","selectionenabled","_addRegion","params","HtxTextView","components_TextHighlight_TextHighlight","adjustSelection","renderRegion","HtxText","isCheckbox","ChoicesModel","ChoiceModel","HtxChoice","cStyle","Checkbox","checked","Radio","showinline","HtxChoices","Group","inline","grouped","TextAreaModel","TextAreaRegionModel","HtxTextAreaRegion","Message","allowSubmit","maxsubmissions","submissionsNum","showSubmit","num","setValue","addText","beforeSend","deleteText","HtxTextArea","ListItemModel","idx","setBG","setIdx","axis","lockaxis","elementvalue","elementtag","sortedhighlightcolor","setUpdate","vals","moveItems","oldIndex","newIndex","arrayMove","ranked","sort","weights","item_weight","ListModel","DragHandle","sortableHandle","isMobileDevice","orientation","navigator","userAgent","SortableText","SortableElement","classNames","image","alt","audio","userSelect","SortableList","SortableContainer","_ref3","HtxListView","_ref4","onSortEnd","HtxList","RankerItemModel","sortable","RankerModel","Ranker_DragHandle","Ranker_SortableText","HtxRankerView","Ranker_SortableList","HtxRanker","Segment","App","_Component","inherits","createClass","es_result","spin","isLoading","renderLoader","noTask","renderNothingToLabel","labeledSuccess","renderSuccess","currentCompletion","renderNoCompletion","Settings","index_module","Panel","Segment_Segment","description","Controls","components_Completions_Completions","SideColumn","Boolean","location","hostname","TaskStore","identifierNumber","app","Utilities","TimeTraveller","frozen","undoIdx","targetPath","createdIdx","isFrozen","frozenIdx","targetStore","snapshotDisposer","skipNextUndoState","freeze","addUndoState","ss","resolvePath","getEnv","onSnapshot","applySnapshot","set","_hotkeys_map","Hotkey","addKey","keymaster","unbindAll","_i","_Object$keys","unbind","makeComb","combs","comb","hasOwnProperty","setScope","scope","reference","findRelations","nodesRelated","from_id","to_id","deserializeRelation","Normalization","normalizations","findNormalization","addNormalization","unshift","deleteNodeNormalization","unhighlightAll","toISOString","RelationStore","normalizationStore","NormalizationStore","RegionStore","HtxObjectModel","reinitHistory","_updateServerState","_relationObj","cb","visitNode","toModel","completions","was_generated","_deleteCompletion","flow","regenerator_default","mark","wrap","_context","prev","sent","t0","stop","destroyCompletion","addCompletion","completionModel","config","expert","firstName","lastName","addSavedCompletion","created_ago","created_username","API_URL","MAIN","TASKS","COMPLETIONS","CANCEL","PROJECTS","NEXT","EXPERT_INSRUCTIONS","UserStore","SettingsModel","enablePanelHotkeys","togglePanelHotkeys","Task","taskID","interfaces","CompletionStore","projectID","debug","alert","post","setDescription","loadTask","_loadTask","_callee","_context2","Response","abrupt","was_cancelled","comp","_context3","_context4","loading","initializeStore","generatedCompletions","itemOfCompletion","production","getData","taskData","editorAppConfig","expertData","debugEditor","editorInterfaces","preRender","explore","getState","rootElement","getElementById","innerHTML","AudioRegions","tasks","dataType","search","resp","templateDynamicData","resultCompletions","enviroment","marginLeft","ProductionEnviroment","AppStore","Htx","render","components_App_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fe35264.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Entity_block__1d7yd\",\"button\":\"Entity_button__30xc5\",\"labels\":\"Entity_labels__1-2_n\",\"tag\":\"Entity_tag__1Ygmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"Controls_pushable__3LEt-\",\"hide-dd-icon\":\"Controls_hide-dd-icon__1EBCI\",\"drag-handle\":\"Controls_drag-handle__3CsG-\",\"noselect\":\"Controls_noselect__1bed8\",\"common-container\":\"Controls_common-container__3TiP5\",\"functional-buttons\":\"Controls_functional-buttons__2sH8Q\",\"editor-side-column\":\"Controls_editor-side-column__3BOE0\",\"skip\":\"Controls_skip__28HJA\",\"task\":\"Controls_task__1EdGG\",\"container\":\"Controls_container__3xiqZ\",\"block\":\"Controls_block__B-vxh\",\"wrapper\":\"Controls_wrapper__2e5LB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Dialog_block__1MORK\",\"block_selected\":\"Dialog_block_selected__2tk1D\",\"name\":\"Dialog_name__3JJCF\",\"tag\":\"Dialog_tag__hGnUs\",\"date\":\"Dialog_date__3_40C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Relations_block__3ZU-5\",\"section\":\"Relations_section__2w7Ie\",\"section__blocks\":\"Relations_section__blocks__W5mdz\",\"delete\":\"Relations_delete__3Q3tP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"Panel_pushable__1g9PL\",\"hide-dd-icon\":\"Panel_hide-dd-icon__3hvvj\",\"drag-handle\":\"Panel_drag-handle__37xEi\",\"noselect\":\"Panel_noselect__3eDQM\",\"common-container\":\"Panel_common-container__nyxnG\",\"functional-buttons\":\"Panel_functional-buttons__IK5OX\",\"editor-side-column\":\"Panel_editor-side-column__3THIi\",\"container\":\"Panel_container__1TWgM\",\"block\":\"Panel_block__3_8yL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Hint_main__1xfNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Waveform_progress__gn5qE\",\"wave\":\"Waveform_wave__w00Jm\",\"menu\":\"Waveform_menu__3VD-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"App_pushable__3Iv5t\",\"hide-dd-icon\":\"App_hide-dd-icon__17HAg\",\"drag-handle\":\"App_drag-handle__3J258\",\"noselect\":\"App_noselect__1PxLS\",\"common-container\":\"App_common-container__21nE-\",\"functional-buttons\":\"App_functional-buttons__2IPsS\",\"editor-side-column\":\"App_editor-side-column__2TIRt\",\"editor\":\"App_editor__2c222\",\"menu\":\"App_menu__3na0T\",\"content\":\"App_content__2czyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Completions_buttons__1LvCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Entities_item__2Bh-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SideColumn_card__iRudi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play\":\"AudioPlus_play__1qTNF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"TextHighlight_block__1QDwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"state\":\"TextRegion_state__3IYTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"Segment_pushable__31i6T\",\"hide-dd-icon\":\"Segment_hide-dd-icon__1LBui\",\"drag-handle\":\"Segment_drag-handle__fIuYO\",\"noselect\":\"Segment_noselect__3kS2p\",\"common-container\":\"Segment_common-container__25HlB\",\"functional-buttons\":\"Segment_functional-buttons__28Q4W\",\"editor-side-column\":\"Segment_editor-side-column__1ahJD\",\"block\":\"Segment_block__1iFqR\"};","module.exports = __webpack_public_path__ + \"static/media/config.34f6aa9f.xml\";","module.exports = __webpack_public_path__ + \"static/media/config.c5233796.xml\";","module.exports = __webpack_public_path__ + \"static/media/config.66767299.xml\";","module.exports = __webpack_public_path__ + \"static/media/config.0e2a1e7f.xml\";","module.exports = __webpack_public_path__ + \"static/media/config.2a6054fe.xml\";","module.exports = __webpack_public_path__ + \"static/media/config.bb22cd0c.xml\";","module.exports = __webpack_public_path__ + \"static/media/config.32729adf.xml\";","module.exports = __webpack_public_path__ + \"static/media/config.1890026d.xml\";","/**\n * Class for register View\n */\nclass _Registry {\n  constructor() {\n    this.tags = [];\n    this.models = {};\n    this.views = {};\n    this.views_models = {};\n  }\n\n  addTag(tag, model, view) {\n    this.tags.push(tag);\n    this.models[tag] = model;\n    this.views[tag] = view;\n    this.views_models[model.name] = view;\n  }\n\n  modelsArr() {\n    return Object.values(this.models);\n  }\n\n  getViewByModel(modelName) {\n    const view = this.views_models[modelName];\n\n    if (!view) throw new Error(\"No view for model: \" + modelName);\n\n    return view;\n  }\n\n  getViewByTag(tag) {\n    return this.views[tag];\n  }\n\n  getModelByTag(tag) {\n    const model = this.models[tag];\n\n    if (!model) {\n      const models = Object.keys(this.models);\n      throw new Error(\"No model registered for tag: \" + tag + \"\\nAvailable models:\\n\\t\" + models.join(\"\\n\\t\"));\n    }\n\n    return model;\n  }\n}\n\nconst Registry = new _Registry();\n\nexport default Registry;\n","const handleResponse = res => {\n  if (res.status !== 200 || res.status !== 201) {\n    return res;\n  } else {\n    return res.json();\n  }\n};\n\nconst wrapperRequest = (url, method, headers, body) => {\n  return window\n    .fetch(url, {\n      method: method,\n      headers: headers,\n      credentials: \"include\",\n      body: body,\n    })\n    .then(response => handleResponse(response));\n};\n\nconst fetcher = url => {\n  return wrapperRequest(url, \"GET\", { Accept: \"application/json\" });\n};\n\nconst poster = (url, body) => {\n  return wrapperRequest(url, \"POST\", { Accept: \"application/json\", \"Content-Type\": \"application/json\" }, body);\n};\n\nconst patch = (url, body) => {\n  return wrapperRequest(\n    url,\n    \"PATCH\",\n    {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  );\n};\n\nconst remover = (url, body) => {\n  return wrapperRequest(\n    url,\n    \"DELETE\",\n    {\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  );\n};\n\nexport default { fetcher, poster, remover, patch };\n","import nanoid from \"nanoid\";\n\n/**\n * Unique hash generator\n */\nexport function guidGenerator() {\n  const uniqueID = nanoid(10);\n  return uniqueID;\n}\n","import { getType, getSnapshot } from \"mobx-state-tree\";\nimport { guidGenerator } from \"../utils/unique\";\n\n/**\n * TODO: refactor\n */\nexport { guidGenerator };\n\n/**\n * Helper function to detect HTX Component\n * @param {any} component\n * @param {string} name\n * @returns {boolean}\n */\nexport function isHtx(component, name) {\n  return typeof component.type === \"function\" && component.type.name === \"Htx\" + name;\n}\n\n/**\n * Clone node with new ID\n * @param {*} node\n */\nexport function cloneNode(node) {\n  const snapshot = getSnapshot(node);\n  const snapshotRandomId = getType(node).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n  return snapshotRandomId;\n}\n\n/**\n *\n * @param {*} fromModel\n */\nexport function restoreNewsnapshot(fromModel) {\n  const snapshot = getSnapshot(fromModel);\n\n  /**\n   * Need to modify ID\n   */\n  const modifySnapshot = getType(fromModel).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n\n  /**\n   * Update state\n   */\n  return modifySnapshot;\n}\n","import React from \"react\";\nimport { getType, getParentOfType } from \"mobx-state-tree\";\nimport parse5 from \"parse5\";\n\nimport Registry from \"./Registry\";\nimport { guidGenerator } from \"./Helpers\";\n\n/**\n * Clone React Tree\n * @param {*} items\n * @param {*} attrs\n */\nfunction cloneReactTree(items, attrs) {\n  let clone = null;\n  clone = function(children) {\n    const res = [];\n\n    React.Children.forEach(children, function(child) {\n      let el;\n\n      if (child.props) {\n        let moreProps = {};\n\n        if (typeof attrs === \"function\") {\n          moreProps = attrs(child);\n        } else if (typeof attrs === \"object\") {\n          moreProps = attrs;\n        }\n\n        el = React.cloneElement(child, moreProps, clone(child.props.children));\n      } else {\n        el = child;\n      }\n\n      res.push(el);\n    });\n\n    return res;\n  };\n\n  return clone(items);\n}\n\n/**\n * Function to convert CSS string to object\n * @param {string} style\n * @returns {object}\n */\nfunction cssConverter(style) {\n  let result = {},\n    attributes = style.split(\";\"),\n    firstIndexOfColon,\n    i,\n    key,\n    value;\n\n  for (i = 0; i < attributes.length; i++) {\n    firstIndexOfColon = attributes[i].indexOf(\":\");\n    key = attributes[i].substring(0, firstIndexOfColon);\n    value = attributes[i].substring(firstIndexOfColon + 1);\n\n    key = key.replace(/ /g, \"\");\n    if (key.length < 1) {\n      continue;\n    }\n\n    if (value[0] === \" \") {\n      value = value.substring(1);\n    }\n\n    if (value[value.length - 1] === \" \") {\n      value = value.substring(0, value.length - 1);\n    }\n\n    var ukey = key.replace(/(-.)/g, x => x[1].toUpperCase());\n\n    result[ukey] = value;\n  }\n\n  return result;\n}\n\n/**\n *\n * @param {*} attrs\n */\nfunction attrsToProps(attrs) {\n  const props = {};\n\n  if (!attrs) return props;\n\n  for (let attr of attrs) {\n    props[attr.name] = attr.value;\n  }\n\n  // if (props[\"style\"]) {\n  //     props[\"style\"] = cssConverter(props[\"style\"]);\n  // }\n\n  return props;\n}\n\n/**\n *\n * @param {*} html\n */\nfunction treeToModel(html) {\n  /**\n   * Remove all line breaks from a string\n   * @param {string}\n   * @returns {string}\n   */\n  function removeAllBreaks(data) {\n    return data.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  }\n\n  /**\n   * Edit all self closing tags from XML View\n   * TODO: Fix bug: if the value of <Choice /> or another tag contains \"/>\" function return error\n   * @param {string} data\n   * @returns {string}\n   */\n  function editSelfClosingTags(data) {\n    let split = data.split(\"/>\");\n    let newData = \"\";\n\n    for (let i = 0; i < split.length - 1; i++) {\n      let edsplit = split[i].split(\"<\");\n      newData += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\n    }\n\n    return newData + split[split.length - 1];\n  }\n\n  /**\n   * Generate new node\n   * @param {object} node\n   */\n  function addNode(node) {\n    if (!node) return null;\n\n    const res = [];\n\n    for (let chld of node.childNodes) {\n      if (chld.nodeName !== \"#text\") {\n        const data = buildData(chld);\n        const children = addNode(chld);\n\n        if (children) {\n          if (typeof children === \"string\") data[\"value\"] = children;\n          else data.children = children;\n        }\n\n        res.push(data);\n      }\n    }\n\n    return res.length === 0 ? null : res;\n  }\n\n  /**\n   * Generate obj with main data\n   */\n  function buildData(node) {\n    const data = attrsToProps(node.attrs);\n\n    data[\"id\"] = guidGenerator();\n    data[\"type\"] = node.nodeName;\n\n    if (data[\"type\"] === \"img\") data[\"type\"] = \"image\";\n\n    return data;\n  }\n\n  const htmlWithotBreaks = removeAllBreaks(html);\n  const htmlSelfClosingTags = editSelfClosingTags(htmlWithotBreaks);\n  const document = parse5.parseFragment(htmlSelfClosingTags);\n  const root = buildData(document.childNodes[0]);\n  root.children = addNode(document.childNodes[0]);\n  return root;\n}\n\n/**\n * Render items of tree\n * @param {*} el\n */\nfunction renderItem(el) {\n  const View = Registry.getViewByModel(getType(el).name);\n\n  if (!View) {\n    throw new Error(\"No view for model:\" + getType(el).name);\n  }\n\n  return <View key={guidGenerator()} item={el} />;\n}\n\n/**\n *\n * @param {*} item\n */\nfunction renderChildren(item) {\n  if (item && item.children && item.children.length) {\n    return item.children.map(el => {\n      return renderItem(el);\n    });\n  } else {\n    return null;\n  }\n}\n\n/**\n *\n * @param {*} name\n * @param {*} tree\n */\nfunction findInterface(name, tree) {\n  let fn;\n  fn = function(node) {\n    if (getType(node).name === name) return node;\n\n    if (node.children) {\n      for (let chld of node.children) {\n        const res = fn(chld);\n        if (res) return res;\n      }\n    }\n  };\n\n  return fn(tree);\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction findParentOfType(obj, classes) {\n  for (let c of classes) {\n    try {\n      const p = getParentOfType(obj, c);\n      if (p) return p;\n    } catch (err) {}\n  }\n\n  return null;\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction filterChildrenOfType(obj, classes) {\n  const res = [];\n\n  let fn;\n  fn = function(node) {\n    for (let c of classes) {\n      if (getType(node).name === c) res.push(node);\n    }\n\n    if (node.children) {\n      for (let chld of node.children) {\n        fn(chld);\n      }\n    }\n  };\n\n  fn(obj);\n\n  return res;\n}\n\nexport default {\n  cloneReactTree,\n  renderItem,\n  renderChildren,\n  treeToModel,\n  findInterface,\n  findParentOfType,\n  filterChildrenOfType,\n  cssConverter,\n};\n","/**\n * Internal helper to check if parameter is a string\n * @param {*} value\n * @returns {boolean}\n */\nexport const isString = value => {\n  return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Internal helper to check if string is empty\n * @param {*} value\n * @returns {boolean}\n */\nexport const isStringEmpty = value => {\n  if (!isString(value)) {\n    return false;\n  }\n\n  return value.length === 0;\n};\n\n/**\n * Internal helper to check if string is JSON\n * @param {string} value\n * @returns {boolean}\n */\nexport const isStringJSON = value => {\n  if (isString(value)) {\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Check if text is url\n * @param {*} i\n * @param {*} text\n */\nexport function getUrl(i, text) {\n  const stringToTest = text.slice(i);\n  const myRegexp = /^(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/g;\n  const match = myRegexp.exec(stringToTest);\n\n  return match && match.length ? match[1] : \"\";\n}\n\n/**\n * Convert MS to Time String\n * Example: 2000 -> 00:00:02\n * @param {number} ms\n * @returns {string}\n */\nexport function toTimeString(ms) {\n  if (typeof ms === \"number\") {\n    return new Date(ms).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n  }\n}\n","let colorNames = {\n  aliceblue: \"#f0f8ff\",\n  antiquewhite: \"#faebd7\",\n  aqua: \"#00ffff\",\n  aquamarine: \"#7fffd4\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  bisque: \"#ffe4c4\",\n  black: \"#000000\",\n  blanchedalmond: \"#ffebcd\",\n  blue: \"#0000ff\",\n  blueviolet: \"#8a2be2\",\n  brown: \"#a52a2a\",\n  burlywood: \"#deb887\",\n  cadetblue: \"#5f9ea0\",\n  chartreuse: \"#7fff00\",\n  chocolate: \"#d2691e\",\n  coral: \"#ff7f50\",\n  cornflowerblue: \"#6495ed\",\n  cornsilk: \"#fff8dc\",\n  crimson: \"#dc143c\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgoldenrod: \"#b8860b\",\n  darkgray: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkseagreen: \"#8fbc8f\",\n  darkslateblue: \"#483d8b\",\n  darkslategray: \"#2f4f4f\",\n  darkturquoise: \"#00ced1\",\n  darkviolet: \"#9400d3\",\n  deeppink: \"#ff1493\",\n  deepskyblue: \"#00bfff\",\n  dimgray: \"#696969\",\n  dodgerblue: \"#1e90ff\",\n  firebrick: \"#b22222\",\n  floralwhite: \"#fffaf0\",\n  forestgreen: \"#228b22\",\n  fuchsia: \"#ff00ff\",\n  gainsboro: \"#dcdcdc\",\n  ghostwhite: \"#f8f8ff\",\n  gold: \"#ffd700\",\n  goldenrod: \"#daa520\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#adff2f\",\n  honeydew: \"#f0fff0\",\n  hotpink: \"#ff69b4\",\n  indianred: \"#cd5c5c\",\n  indigo: \"#4b0082\",\n  ivory: \"#fffff0\",\n  khaki: \"#f0e68c\",\n  lavender: \"#e6e6fa\",\n  lavenderblush: \"#fff0f5\",\n  lawngreen: \"#7cfc00\",\n  lemonchiffon: \"#fffacd\",\n  lightblue: \"#add8e6\",\n  lightcoral: \"#f08080\",\n  lightcyan: \"#e0ffff\",\n  lightgoldenrodyellow: \"#fafad2\",\n  lightgrey: \"#d3d3d3\",\n  lightgreen: \"#90ee90\",\n  lightpink: \"#ffb6c1\",\n  lightsalmon: \"#ffa07a\",\n  lightseagreen: \"#20b2aa\",\n  lightskyblue: \"#87cefa\",\n  lightslategray: \"#778899\",\n  lightsteelblue: \"#b0c4de\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  limegreen: \"#32cd32\",\n  linen: \"#faf0e6\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66cdaa\",\n  mediumblue: \"#0000cd\",\n  mediumorchid: \"#ba55d3\",\n  mediumpurple: \"#9370d8\",\n  mediumseagreen: \"#3cb371\",\n  mediumslateblue: \"#7b68ee\",\n  mediumspringgreen: \"#00fa9a\",\n  mediumturquoise: \"#48d1cc\",\n  mediumvioletred: \"#c71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#f5fffa\",\n  mistyrose: \"#ffe4e1\",\n  moccasin: \"#ffe4b5\",\n  navajowhite: \"#ffdead\",\n  navy: \"#000080\",\n  oldlace: \"#fdf5e6\",\n  olive: \"#808000\",\n  olivedrab: \"#6b8e23\",\n  orange: \"#ffa500\",\n  orangered: \"#ff4500\",\n  orchid: \"#da70d6\",\n  palegoldenrod: \"#eee8aa\",\n  palegreen: \"#98fb98\",\n  paleturquoise: \"#afeeee\",\n  palevioletred: \"#d87093\",\n  papayawhip: \"#ffefd5\",\n  peachpuff: \"#ffdab9\",\n  peru: \"#cd853f\",\n  pink: \"#ffc0cb\",\n  plum: \"#dda0dd\",\n  powderblue: \"#b0e0e6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#ff0000\",\n  rosybrown: \"#bc8f8f\",\n  royalblue: \"#4169e1\",\n  saddlebrown: \"#8b4513\",\n  salmon: \"#fa8072\",\n  sandybrown: \"#f4a460\",\n  seagreen: \"#2e8b57\",\n  seashell: \"#fff5ee\",\n  sienna: \"#a0522d\",\n  silver: \"#c0c0c0\",\n  skyblue: \"#87ceeb\",\n  slateblue: \"#6a5acd\",\n  slategray: \"#708090\",\n  snow: \"#fffafa\",\n  springgreen: \"#00ff7f\",\n  steelblue: \"#4682b4\",\n  tan: \"#d2b48c\",\n  teal: \"#008080\",\n  thistle: \"#d8bfd8\",\n  tomato: \"#ff6347\",\n  turquoise: \"#40e0d0\",\n  violet: \"#ee82ee\",\n  wheat: \"#f5deb3\",\n  white: \"#ffffff\",\n  whitesmoke: \"#f5f5f5\",\n  yellow: \"#ffff00\",\n  yellowgreen: \"#9acd32\",\n};\n\n/**\n * Convert HEX to RGBA\n * @param {string} hex 3 digits + # or 6 digits + #\n * @param {number?} opacity From 0 to 1\n */\nexport function hexToRGBA(hex, opacity) {\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  let a = 0.3;\n\n  if (opacity && typeof parseInt(opacity) === \"number\") {\n    a = opacity;\n  }\n\n  /**\n   * If HEX = 3\n   */\n  if (hex && hex.length === 4) {\n    r = \"0x\" + hex[1] + hex[1];\n    g = \"0x\" + hex[2] + hex[2];\n    b = \"0x\" + hex[3] + hex[3];\n\n    /**\n     * If HEX = 6\n     */\n  } else if (hex && hex.length === 7) {\n    r = \"0x\" + hex[1] + hex[2];\n    g = \"0x\" + hex[3] + hex[4];\n    b = \"0x\" + hex[5] + hex[6];\n  }\n\n  const result = `rgba(${+r}, ${+g}, ${+b}, ${a})`;\n\n  return result;\n}\n\n/**\n * Color to RGBA\n * @param {*} value\n */\nexport function colorToRGBA(value, alpha) {\n  if (typeof value === \"string\" && typeof colorNames[value.toLowerCase()] !== undefined) {\n    const hexColor = colorNames[value.toLowerCase()];\n    return hexToRGBA(hexColor, alpha);\n  }\n\n  return value;\n}\n\n/**\n * Convert color to RGB(A)\n * @param {*} value\n * @param {number} alpha\n */\nexport function convertToRGBA(value, alpha) {\n  if (value.charAt(0) === \"#\") {\n    return hexToRGBA(value, alpha);\n  } else {\n    return colorToRGBA(value, alpha);\n  }\n}\n\n/**\n * Convert string to HEX color\n * @param {string} str\n */\nexport function stringToColor(str) {\n  let hash = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xff;\n    color += (\"00\" + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n\n/**\n * Change alpha channel of RGBA\n * @param {string} rgba\n * @param {number} alpha from 0 to 1\n */\nexport function rgbaChangeAlpha(rgba, alpha) {\n  return rgba.replace(/[\\d\\.]+\\)$/g, `${alpha})`);\n}\n","function checkISO(value) {\n  let regExpISO = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/;\n\n  return regExpISO.test(value);\n}\n\n/**\n * Helper function to convert ms -> HHMMSS\n * @param {number} ms\n * @returns {string}\n */\nexport function msToHMS(ms) {\n  // 1- Convert to seconds:\n  var seconds = ms / 1000;\n  // 2- Extract hours:\n  var hours = parseInt(seconds / 3600); // 3,600 seconds in 1 hour\n  seconds = seconds % 3600; // seconds remaining after extracting hours\n  // 3- Extract minutes:\n  var minutes = parseInt(seconds / 60); // 60 seconds in 1 minute\n  // 4- Keep only seconds not extracted to minutes:\n  seconds = Math.floor(seconds); // % 60;\n\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n\n/**\n * Helper function to pretty date\n */\nexport function prettyDate(time) {\n  if (typeof time !== \"string\" && !checkISO(time)) return;\n\n  let date = new Date((time || \"\").replace(/-/g, \"/\").replace(/[TZ]/g, \" \")),\n    diff = (new Date().getTime() - date.getTime()) / 1000,\n    day_diff = Math.floor(diff / 86400);\n\n  if (isNaN(day_diff) || day_diff < 0) return;\n\n  return (\n    (day_diff === 0 &&\n      ((diff < 60 && \"just now\") ||\n        (diff < 120 && \"1 minute ago\") ||\n        (diff < 3600 && Math.floor(diff / 60) + \" minutes ago\") ||\n        (diff < 7200 && \"1 hour ago\") ||\n        (diff < 86400 && Math.floor(diff / 3600) + \" hours ago\"))) ||\n    (day_diff === 1 && \"Yesterday\") ||\n    (day_diff < 7 && day_diff + \" days ago\") ||\n    (day_diff < 31 && Math.ceil(day_diff / 7) + \" weeks ago\") ||\n    day_diff + \" days ago\"\n  );\n}\n","import * as Checkers from \"./utilities\";\nimport * as Colors from \"./colors\";\nimport * as UDate from \"./date\";\nimport { guidGenerator } from \"./unique\";\nimport { debounce } from \"./debounce\";\nimport { styleToProp } from \"./styles\";\n\nexport default { Checkers, Colors, UDate, guidGenerator, debounce, styleToProp };\n","/**\n * Returns a function, that, as long as it continues to be invoked,\n * will not be triggered. The function will be called after it\n * stops being called for N milliseconds. If `immediate` is passed,\n * trigger the function on the leading edge, instead of the trailing.\n *\n * @param {function} func\n * @param {number} wait\n * @param {boolean} immediate\n */\nexport function debounce(func, wait, immediate) {\n  let timeout;\n\n  return function() {\n    const context = this,\n      args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n","/**\n * Parses a string of inline styles into a JavaScript object with casing for React\n *\n * @see TemplateEngine via MIT Licensed https://github.com/NervJS/taro/blob/master/packages/taro-components-rn/src/utils/index.ts\n *\n * @param {string} styles\n * @returns {Object}\n */\nexport function styleToProp(styles) {\n  if (!styles) return null;\n  return styles\n    .split(\";\")\n    .filter(style => style.split(\":\")[0] && style.split(\":\")[1])\n    .map(style => [\n      style\n        .split(\":\")[0]\n        .trim()\n        .replace(/-./g, c => c.substr(1).toUpperCase()),\n      style\n        .split(\":\")\n        .slice(1)\n        .join(\":\")\n        .trim(),\n    ])\n    .reduce(\n      (styleObj, style) => ({\n        ...styleObj,\n        [style[0]]: style[1],\n      }),\n      {},\n    );\n}\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { List } from \"semantic-ui-react\";\nimport { Card, Button } from \"antd\";\n\nimport Utils from \"../../utils\";\nimport styles from \"./Completions.module.scss\";\n\nconst Completion = observer(({ item, store }) => {\n  let removeHoney = () => (\n    <Button\n      type=\"primary\"\n      onClick={ev => {\n        ev.preventDefault();\n        item.removeHoneypot();\n      }}\n    >\n      Honeypot\n    </Button>\n  );\n\n  let setHoney = () => (\n    <Button\n      type=\"primary\"\n      ghost={true}\n      onClick={ev => {\n        ev.preventDefault();\n        item.setHoneypot();\n      }}\n    >\n      Honeypot\n    </Button>\n  );\n\n  return (\n    <List.Item\n      style={{ backgroundColor: item.selected ? \"#f8f8f9\" : \"white\", padding: \"1em\" }}\n      onClick={ev => {\n        !item.selected && store.completionStore.selectCompletion(item.id);\n      }}\n    >\n      <List.Content>\n        <List.Header as=\"a\">ID {item.pk || item.id}</List.Header>\n        <p></p>\n        <List.Description as=\"a\">\n          Created\n          <i>{item.createdAgo ? ` ${item.createdAgo} ago` : ` ${Utils.UDate.prettyDate(item.createdDate)}`}</i>\n          {item.createdBy ? ` by ${item.createdBy}` : null}\n        </List.Description>\n\n        {item.selected && (\n          <div className={styles.buttons}>\n            <Button\n              type=\"danger\"\n              onClick={ev => {\n                ev.preventDefault();\n                item.store.deleteCompletion(item);\n              }}\n            >\n              Delete\n            </Button>\n\n            {item.honeypot ? removeHoney() : setHoney()}\n          </div>\n        )}\n      </List.Content>\n    </List.Item>\n  );\n});\n\nclass Completions extends Component {\n  render() {\n    const { store } = this.props;\n\n    return (\n      <Card title=\"Completions\" bodyStyle={{ padding: 0 }}>\n        <List divided relaxed>\n          {store.completionStore.savedCompletions.map(c => (\n            <Completion key={c.id} item={c} store={store} />\n          ))}\n        </List>\n      </Card>\n    );\n  }\n}\n\nexport default observer(Completions);\n","import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport styles from \"./Hint.module.scss\";\n\n/**\n * Hint Component\n * @param {object} style\n * @param {ant} children\n */\nexport default class Hint extends Component {\n  render() {\n    let style;\n    let localClass = `${styles.main}`;\n\n    if (this.props.style) style = this.props.style;\n\n    if (this.props.className) {\n      localClass = `${styles.main} ${this.props.className}`;\n    }\n\n    return (\n      <sup data-copy={this.props.copy} className={localClass} style={style}>\n        {this.props.children}\n      </sup>\n    );\n  }\n}\n\nHint.propTypes = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  copy: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object]),\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button } from \"antd\";\n\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Controls.module.scss\";\n\nexport default inject(\"store\")(\n  observer(({ store }) => {\n    let taskInformation;\n    let submitButton;\n    let skipButton;\n\n    if (store.task) {\n      taskInformation = <h4 className={styles.task}>Task ID: {store.task.id}</h4>;\n    }\n\n    if (store.settings.enableHotkeys && store.settings.enableTooltips) {\n      submitButton = <Hint> [ Ctrl+Enter ]</Hint>;\n      skipButton = <Hint> [ Ctrl+Space ]</Hint>;\n    }\n\n    return (\n      <div className={styles.block}>\n        <div className={styles.wrapper}>\n          <div className={styles.container}>\n            {store.hasInterface(\"submit:skip\") && (\n              <Button type=\"ghost\" onClick={store.skipTask} className={styles.skip}>\n                Skip {skipButton}\n              </Button>\n            )}\n            <Button type=\"primary\" icon=\"check\" onClick={store.sendTask} className={styles.submit}>\n              Submit {submitButton}\n            </Button>\n          </div>\n          {taskInformation}\n        </div>\n      </div>\n    );\n  }),\n);\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Icon } from \"antd\";\n\nimport styles from \"./Panel.module.scss\";\nimport Hint from \"../Hint/Hint\";\n\n/**\n * Panel component with buttons:\n * Undo\n * Redo\n * Reset\n * Show Instructions\n * Settings\n */\nexport default observer(({ store }) => {\n  const { history } = store.completionStore.selected;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.block}>\n        <Button\n          type=\"ghost\"\n          icon=\"undo\"\n          onClick={ev => {\n            history && history.canUndo && history.undo();\n            ev.preventDefault();\n          }}\n        >\n          Undo\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Ctrl+z ]</Hint>}\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon=\"redo\"\n          onClick={ev => {\n            history && history.canRedo && history.redo();\n            ev.preventDefault();\n          }}\n        >\n          Redo\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon=\"rest\"\n          onClick={ev => {\n            history && history.reset();\n          }}\n        >\n          Reset\n        </Button>\n        {store.setPrelabeling && (\n          <Button\n            style={{ display: \"none\" }}\n            onClick={ev => {\n              store.resetPrelabeling();\n            }}\n          >\n            {\" \"}\n            Reset Prelabeling\n          </Button>\n        )}\n      </div>\n\n      <div className={styles.block}>\n        {store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.closeDescription();\n            }}\n          >\n            Hide Instructions\n          </Button>\n        )}\n        {!store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.openDescription();\n            }}\n          >\n            Show Instructions\n          </Button>\n        )}\n\n        <Button\n          type=\"dashed\"\n          icon=\"setting\"\n          onClick={ev => {\n            store.toggleSettings();\n            ev.preventDefault();\n            return false;\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Modal, Checkbox } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nexport default observer(({ store }) => {\n  return (\n    <Modal visible={store.showingSettings} title=\"Hotkeys\" footer=\"\" onCancel={store.toggleSettings}>\n      <Checkbox\n        value=\"Enable labeling hotkeys\"\n        defaultChecked={store.settings.enableHotkeys}\n        onChange={() => {\n          store.settings.toggleHotkeys();\n        }}\n      >\n        Enable labeling hotkeys\n      </Checkbox>\n      <br />\n      <Checkbox\n        value=\"Show tooltips\"\n        defaultChecked={store.settings.enableTooltips}\n        onChange={() => {\n          store.settings.toggleTooltips();\n        }}\n      >\n        Show tooltips\n      </Checkbox>\n    </Modal>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Form, Button, Header } from \"semantic-ui-react\";\n\nimport { observer } from \"mobx-react\";\n\nclass DebugComponent extends Component {\n  state = { res: null };\n\n  render() {\n    const self = this;\n    const { store } = this.props;\n    const completion = store.completionStore.selected;\n\n    return (\n      <div>\n        <br />\n        <Header>Debug</Header>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.toJSON()) });\n          }}\n        >\n          Serialize whole tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.serializeCompletion()) });\n          }}\n        >\n          Seriealize results tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            if (self.state.res) completion.deserializeCompletion(JSON.parse(self.state.res));\n          }}\n        >\n          Load Serialized Results\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            const c = store.completionStore.addInitialCompletion();\n            store.completionStore.selectCompletion(c.id);\n\n            if (self.state.res) c.deserializeCompletion(JSON.parse(self.state.res));\n            // this.setState.res;\n          }}\n        >\n          Load As New Completion\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: store.task.data });\n          }}\n        >\n          Task data\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            // this.setState.res;\n            const data = JSON.parse(self.state.res);\n            const task = {\n              id: data[\"id\"],\n              project: 2,\n              data: JSON.stringify(data),\n            };\n\n            store.resetState();\n            store.addTask(task);\n            store.addGeneratedCompletion(task);\n            store.markLoading(false);\n\n            if (store.completionStore.selected)\n              store.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n          }}\n        >\n          Simulate Loading Task\n        </Button>\n\n        <br />\n        <br />\n        <Form>\n          <Form.TextArea\n            value={this.state.res}\n            className=\"is-search\"\n            // label={item.label}\n            onChange={ev => {\n              this.setState({ res: ev.target.value });\n            }}\n          />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default observer(DebugComponent);\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { getType, getRoot } from \"mobx-state-tree\";\nimport { Icon } from \"antd\";\n\nconst Node = observer(({ node }) => {\n  const click = ev => {\n    ev.preventDefault();\n    getRoot(node).completionStore.selected.regionStore.unselectAll();\n    node.selectRegion();\n\n    return false;\n  };\n\n  const style = {\n    color: \"black\",\n    textDecorationLine: \"underline\",\n    textDecorationStyle: \"dotted\",\n  };\n\n  if (getType(node).name === \"TextRegionModel\") {\n    return (\n      <div>\n        <Icon type=\"font-colors\" />\n        Text &nbsp;\n        <span style={{ color: \"#5a5a5a\" }}>{node.text}</span>\n      </div>\n    );\n  }\n\n  if (getType(node).name === \"AudioRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"microphone icon\" />\n          Audio &nbsp;{node.start.toFixed(2)} - {node.end.toFixed(2)}\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"TextAreaRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"i cursor icon\" />\n          Input &nbsp;<span style={{ color: \"#5a5a5a\" }}>{node._value}</span>\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"RectRegionModel\") {\n    const w = node.width * node.scaleX;\n    const y = node.height * node.scaleY;\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"expand icon\" />\n          Rectangle &nbsp;{w.toFixed(2)} x {y.toFixed(2)}\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"PolygonRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"i object ungroup outline icon\" />\n          Polygon\n        </a>\n      </p>\n    );\n  }\n});\n\nconst NodeMinimal = ({ node }) => {\n  if (getType(node).name == \"TextRegionModel\") {\n    return (\n      <Fragment>\n        <Icon type=\"font-colors\" /> Text\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"RectRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"expand icon\" />\n        Rectangle\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"AudioRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"microphone icon\" />\n        Audio\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"TextAreaRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"i cursor icon\" />\n        Input\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"PolygonRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"i object ungroup outline icon\" />\n        Polygon\n      </Fragment>\n    );\n  }\n};\n\nexport { Node, NodeMinimal };\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { isValidReference } from \"mobx-state-tree\";\nimport { Icon } from \"antd\";\n\nimport { NodeMinimal } from \"../Node\";\nimport styles from \"./Relations.module.scss\";\n\n/**\n * Relation Component\n *\n * Shows the relationship between two selected items\n */\nconst Relation = ({ store, rl }) => {\n  if (!isValidReference(() => rl.node1) || !isValidReference(() => rl.node2)) {\n    return null;\n  }\n\n  return (\n    <div className={styles.block}>\n      <div\n        className={styles.section}\n        onMouseOver={() => {\n          rl.toggleHighlight();\n        }}\n        onMouseOut={() => {\n          rl.toggleHighlight();\n        }}\n      >\n        <div className={styles.section__blocks}>\n          <div>\n            <NodeMinimal node={rl.node1} />\n          </div>\n          <Icon type=\"arrow-right\" />\n          <div>\n            <NodeMinimal node={rl.node2} />\n          </div>\n        </div>\n      </div>\n      <a\n        href=\"#\"\n        className={styles.delete}\n        onClick={() => {\n          store.deleteRelation(rl);\n          return false;\n        }}\n      >\n        <Icon type=\"delete\" />\n      </a>\n    </div>\n  );\n};\n\nexport default observer(({ store }) => {\n  const completion = store.completionStore.selected;\n  const { relations } = completion.relationStore;\n\n  return (\n    <Fragment>\n      <h4>Relations ({relations.length})</h4>\n\n      {!relations.length && <p>No Relations added yet</p>}\n\n      {completion.relationStore.relations.map(rl => (\n        <Relation store={completion.relationStore} rl={rl} />\n      ))}\n    </Fragment>\n  );\n});\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Typography } from \"antd\";\n\nimport { Node, NodeMinimal } from \"../Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entities.module.scss\";\n\nexport default observer(({ store, regionStore }) => {\n  const { regions } = regionStore;\n\n  let buttonRemove = () => {\n    return (\n      <Button\n        type=\"link\"\n        style={{ paddingLeft: 0 }}\n        onClick={ev => {\n          store.completionStore.selected.deleteAllRegions();\n          ev.preventDefault();\n        }}\n      >\n        Remove all\n        {regions.length > 0 && store.settings.enableHotkeys && store.settings.enableTooltips && (\n          <Hint>[ Ctrl+bksp ]</Hint>\n        )}\n      </Button>\n    );\n  };\n\n  return (\n    <div>\n      <h4>Entities ({regions.length})</h4>\n      {regions.length > 0 && buttonRemove()}\n      {!regions.length && <p>No Entitied added yet</p>}\n      <ul>\n        {regions.map(region => (\n          <li\n            key={region.id}\n            className={styles.item}\n            onMouseOver={() => {\n              region.toggleHightlight();\n            }}\n            onMouseOut={() => {\n              region.toggleHightlight();\n            }}\n          >\n            <Node node={region} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { getType } from \"mobx-state-tree\";\nimport { Input, Form } from \"semantic-ui-react\";\nimport { Icon, Button, Tag } from \"antd\";\n\nimport { Node, NodeMinimal } from \"../Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entity.module.scss\";\n\nconst templateElement = element => {\n  return (\n    <div key={element.pid} className={styles.labels}>\n      Labels:&nbsp;\n      {element.getSelectedNames().map(title => {\n        let bgColor = element.findLabel(title).background ? element.findLabel(title).background : \"#000000\";\n\n        return (\n          <Tag key={element.findLabel(title).id} color={bgColor} className={styles.tag}>\n            {title}\n          </Tag>\n        );\n      })}\n    </div>\n  );\n};\n\nconst RenderStates = ({ node }) => {\n  const _render = s => {\n    if (\n      getType(s).name === \"LabelsModel\" ||\n      getType(s).name === \"RectangleLabelsModel\" ||\n      getType(s).name === \"PolygonLabelsModel\"\n    ) {\n      return templateElement(s);\n    } else if (getType(s).name === \"RatingModel\") {\n      return <p>Rating: {s.getSelectedString()}</p>;\n    }\n\n    return null;\n  };\n\n  return <Fragment>{node.states.map(s => _render(s))}</Fragment>;\n};\n\nexport default observer(({ store, completion }) => {\n  const node = completion.highlightedNode;\n\n  return (\n    <Fragment>\n      <p>\n        <NodeMinimal node={node} /> (id: {node.id})\n      </p>\n\n      {node.normalization && (\n        <p>\n          Normalization: {node.normalization}\n          <Icon\n            name=\"delete\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              node.deleteNormalization();\n            }}\n          />\n        </p>\n      )}\n      {node.states && <RenderStates node={node} />}\n\n      <div className={styles.block}>\n        <Button\n          className={styles.button}\n          onClick={() => {\n            completion.startRelationMode(node);\n          }}\n        >\n          <Icon type=\"link\" />\n          Relation\n        </Button>\n\n        <Button\n          className={styles.button}\n          onClick={() => {\n            completion.setNormalizationMode(true);\n          }}\n        >\n          <Icon type=\"plus\" />\n          Normalization\n        </Button>\n\n        <Button\n          className={styles.button}\n          type=\"dashed\"\n          onClick={() => {\n            completion.highlightedNode.unselectRegion();\n          }}\n        >\n          <Icon type=\"fullscreen-exit\" />\n          Unselect\n        </Button>\n\n        <Button\n          type=\"danger\"\n          className={styles.button}\n          onClick={() => {\n            completion.highlightedNode.deleteRegion();\n          }}\n        >\n          <Icon type=\"delete\" />\n          Delete\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Bksp ]</Hint>}\n        </Button>\n      </div>\n\n      {completion.normalizationMode && (\n        <div>\n          <Form\n            style={{ marginTop: \"0.5em\" }}\n            onSubmit={ev => {\n              const { value } = ev.target;\n              node.setNormalization(node.normInput);\n              completion.setNormalizationMode(false);\n\n              ev.preventDefault();\n              return false;\n            }}\n          >\n            <Form.Input\n              onChange={ev => {\n                const { value } = ev.target;\n                node.setNormInput(value);\n              }}\n              placeholder=\"Add Normalization\"\n            />\n          </Form>\n        </div>\n      )}\n    </Fragment>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport Relations from \"../Relations/Relations\";\nimport Entities from \"../Entities/Entities\";\nimport Entity from \"../Entity/Entity\";\nimport styles from \"./SideColumn.module.scss\";\n\n/**\n * Component Side with:\n * Completions\n * Entities\n * Relations\n */\nexport default observer(({ store }) => {\n  const completion = store.completionStore.selected;\n  const node = completion.highlightedNode;\n\n  return (\n    <Card title=\"Entity\" className={styles.card}>\n      {node && <Entity store={store} completion={completion} />}\n\n      {!completion.highlightedNode && <p>Nothing selected</p>}\n\n      <Entities store={store} regionStore={completion.regionStore} />\n\n      <Relations store={store} item={completion} />\n    </Card>\n  );\n});\n","import { types, getType, getParent } from \"mobx-state-tree\";\nimport Registry from \"./Registry\";\n\nfunction unionArray(arr) {\n  return types.maybeNull(types.array(oneOf(arr)));\n}\n\nfunction oneOf(arr) {\n  return types.union({\n    dispatcher: sn => {\n      if (arr.find(val => sn.type === val)) {\n        return Registry.getModelByTag(sn.type);\n      } else {\n        throw Error(\"Not expecting tag: \" + sn.type);\n      }\n    },\n  });\n}\n\nfunction allModelsTypes() {\n  const args = [\n    {\n      dispatcher: sn => {\n        if (Registry.tags.find(val => sn.type === val)) {\n          return Registry.getModelByTag(sn.type);\n        } else {\n          throw Error(\"Not expecting tag: \" + sn.type);\n        }\n      },\n    },\n    Registry.modelsArr(),\n  ];\n\n  const results = [].concat.apply([], args);\n\n  return types.union.apply(null, results);\n}\n\nfunction isType(node, types) {\n  const nt = getType(node);\n  for (let t of types) if (nt === t) return true;\n\n  return false;\n}\n\nfunction getParentOfTypeString(node, str) {\n  // same as getParentOfType but checks models .name instead of type\n  let parent = getParent(node);\n\n  if (!Array.isArray(str)) str = [str];\n\n  while (parent) {\n    const name = getType(parent).name;\n\n    if (str.find(c => c === name)) return parent;\n\n    parent = getParent(parent);\n  }\n\n  return null;\n}\n\nexport default { unionArray, allModelsTypes, oneOf, isType, getParentOfTypeString };\n","import React from \"react\";\nimport { types, getEnv, flow, getParentOfType } from \"mobx-state-tree\";\nimport { observer, Provider } from \"mobx-react\";\n\nimport Tree from \"../../core/Tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\n\n/**\n * View element. It's analogous to div element in html and can be used to visual configure display of blocks\n * @example\n * <View style=\"display: flex;\">\n *  <View style=\"flex: 50%\">\n *   <Header value=\"Facts:\"></Header>\n *   <Text name=\"text\" value=\"$fact\"></Text>\n *  </View>\n *  <View style=\"flex: 50%; margin-left: 1em\">\n *   <Header value=\"Enter your question:\"></Header>\n *   <TextArea name=\"question\" ></TextArea>\n *  </View>\n * </View>\n * @name View\n * @param {block|inline} display\n * @param {hexColor} backgroundColor background color\n * @param {style} style css style string\n */\nconst TagAttrs = types.model({\n  display: types.optional(types.string, \"block\"),\n  backgroundcolor: types.optional(types.string, \"\"),\n  margin: types.optional(types.string, \"\"),\n});\n\nconst Model = types.model({\n  id: types.identifier,\n  type: \"view\",\n  style: types.maybeNull(types.string),\n  children: Types.unionArray([\n    \"view\",\n    \"header\",\n    \"labels\",\n    \"textarea\",\n    \"choices\",\n    \"rating\",\n    \"ranker\",\n    \"rectangle\",\n    \"polygon\",\n    \"rectanglelabels\",\n    \"polygonlabels\",\n    \"text\",\n    \"audio\",\n    \"image\",\n    \"hypertext\",\n    \"audioplus\",\n    \"list\",\n    \"dialog\",\n  ]),\n});\n\nconst ViewModel = types.compose(\n  \"ViewModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = observer(({ item }) => {\n  let style = {};\n\n  if (item.display === \"inline\") {\n    style = { display: \"inline-block\", marginRight: \"15px\" };\n  }\n\n  if (item.style) {\n    style = Tree.cssConverter(item.style);\n  }\n\n  return <div style={style}>{Tree.renderChildren(item)}</div>;\n});\n\nRegistry.addTag(\"view\", ViewModel, HtxView);\n\nexport { HtxView, ViewModel };\n","/**\n * Convert JavaScript string in dot notation into an object reference\n * @param {Object} obj\n * @param {*} is\n * @param {*} value\n */\nfunction _index(obj, is, value) {\n  if (typeof is === \"string\") return _index(obj, is.split(\".\"), value);\n  else if (is.length === 1 && value !== undefined) return (obj[is[0]] = value);\n  else if (is.length === 0) return obj;\n  else return _index(obj[is[0]], is.slice(1), value);\n}\n\n/**\n *\n * @param {*} variable\n * @param {*} obj\n */\nfunction variableNotation(variable, obj) {\n  if (variable.charAt(0) === \"$\") {\n    const n = variable.substring(1);\n    return _index(obj, n);\n  } else {\n    return variable;\n  }\n}\n\n/**\n * A small templating engine for processing HTML with given data.\n *\n * @see TemplateEngine via MIT Licensed https://github.com/krasimir/absurd/\n *\n * @param {string} html\n * @param {Object} options\n * @returns {*}\n */\nfunction runTemplate(html, options) {\n  if (!options) options = {};\n\n  var re = /[$](.+)/g,\n    reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,\n    code = \"with(obj) { var r=[];\\n\",\n    cursor = 0,\n    result,\n    match;\n\n  var add = function(line, js) {\n    js\n      ? (code += line.match(reExp) ? line + \"\\n\" : \"r.push(\" + line + \");\\n\")\n      : (code += line !== \"\" ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : \"\");\n    return add;\n  };\n\n  while ((match = re.exec(html))) {\n    add(html.slice(cursor, match.index))(match[1], true);\n    cursor = match.index + match[0].length;\n  }\n\n  if (!html) return \"\";\n\n  add(html.substr(cursor, html.length - cursor));\n  code = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, \" \");\n\n  try {\n    result = new Function(\"obj\", code).apply(options, [options]);\n  } catch (err) {\n    console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n  }\n\n  return result;\n}\n\nexport { variableNotation, runTemplate, _index };\n","import { types } from \"mobx-state-tree\";\n\nimport { runTemplate } from \"../../core/Template\";\n\nconst ProcessAttrsMixin = types.model().actions(self => ({\n  updateValue(store) {\n    self._value = runTemplate(self.value, store.task.dataObj) || \"\";\n  },\n}));\n\nexport default ProcessAttrsMixin;\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport { Table, Header } from \"semantic-ui-react\";\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Table tag, show object keys and values in a table\n * @example\n * <Table name=\"text-1\" value=\"$text\"></Table>\n * @name Table\n * @param {string} value\n */\nconst Model = types.model({\n  type: \"table\",\n  size: types.optional(types.string, \"h4\"),\n  value: types.maybeNull(types.string),\n  _value: types.optional(types.string, \"\"),\n});\n\nconst TableModel = types.compose(\n  \"TableModel\",\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxTable = inject(\"store\")(\n  observer(({ store, item }) => {\n    let value = item._value;\n    if (!value) {\n      if (store.task) value = store.task.dataObj;\n    }\n\n    return (\n      <div style={{ marginTop: \"1em\" }}>\n        <Table basic=\"very\" celled collapsing>\n          <Table.Body>\n            {Object.keys(value).map(k => {\n              let v = value[k];\n              if (typeof v === \"object\") v = JSON.stringify(v);\n\n              return (\n                <Table.Row>\n                  <Table.Cell>\n                    <Header as=\"h4\">\n                      <Header.Subheader>{k}</Header.Subheader>\n                    </Header>\n                  </Table.Cell>\n                  <Table.Cell>{v}</Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"table\", TableModel, HtxTable);\n\nexport { HtxTable, TableModel };\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { Typography } from \"antd\";\n\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Header tag, show header\n * @example\n * <Header name=\"text-1\" value=\"$text\"></Header>\n * @name Header\n * @param {string} size Size of header\n * @param {string} value Text of header\n * @param {boolean} underline Underline of header\n */\nconst Model = types.model({\n  type: \"header\",\n  size: types.optional(types.number, 4),\n  value: types.optional(types.string, \"\"),\n  underline: types.optional(types.boolean, false),\n});\n\nconst HeaderModel = types.compose(\n  \"HeaderModel\",\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxHeader = observer(({ item }) => {\n  return (\n    <Typography.Title underline={item.underline} level={item.size} style={{ margin: \"10px 0\" }}>\n      {item.value}\n    </Typography.Title>\n  );\n});\n\nRegistry.addTag(\"header\", HeaderModel, HtxHeader);\n\nexport { HtxHeader, HeaderModel };\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport { runTemplate } from \"../../core/Template\";\n\n/**\n * HyperText element. Render html inside\n * @example\n * <View>\n *  <HyperText value=\"<p>Hey</p>\"></HyperText>\n * <View>\n * @param {string} name\n * @param {string} value\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nfunction HyperTextActions(self) {\n  return {\n    fromStateJSON(obj) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  };\n}\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"HyperText\",\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => HyperTextActions(self));\n\nconst HyperTextModel = types.compose(\n  \"HyperTextModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxHyperTextView = inject(\"store\")(\n  observer(({ store, item }) => {\n    if (!store.task) return null;\n\n    return <div dangerouslySetInnerHTML={{ __html: runTemplate(item.value, store.task.dataObj) }} />;\n  }),\n);\n\nRegistry.addTag(\"hypertext\", HyperTextModel, HtxHyperTextView);\n\nexport { HtxHyperTextView, HyperTextModel };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Tag } from \"antd\";\n\nimport styles from \"./Dialog.module.scss\";\n\nexport default class DialogView extends React.Component {\n  render() {\n    let selectedStyle = `${styles.block}`;\n    let hint;\n    let bgColor;\n    let date;\n\n    if (this.props.hint) {\n      hint = <Tag color=\"blue\">{this.props.hint}</Tag>;\n    }\n\n    if (this.props.bg) {\n      bgColor = this.props.bg;\n    }\n\n    if (this.props.selected) {\n      selectedStyle = `${selectedStyle} ${styles.block_selected}`;\n      hint = (\n        <div>\n          <Tag color=\"magenta\">Selected Message</Tag>\n        </div>\n      );\n\n      if (this.props.hint) {\n        hint = (\n          <div className={styles.tag}>\n            <Tag color=\"magenta\">{this.props.hint}</Tag>\n          </div>\n        );\n      }\n    }\n\n    if (this.props.date) {\n      date = <span className={styles.date}>{this.props.date}</span>;\n    }\n\n    return (\n      <div className={selectedStyle} style={{ background: bgColor, width: \"max-content\", maxWidth: \"100%\" }}>\n        <span className={styles.name}>{this.props.name}:&nbsp;</span>\n        <p className={styles.text}>{this.props.text}</p>\n        {date}\n        {hint}\n      </div>\n    );\n  }\n}\n\nDialogView.propTypes = {\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  selected: PropTypes.bool,\n  date: PropTypes.string,\n  hint: PropTypes.string,\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { Divider, Empty } from \"antd\";\n\nimport { guidGenerator } from \"../../utils/unique\";\nimport Registry from \"../../core/Registry\";\nimport DialogView from \"../../components/Dialog/Dialog\";\nimport { stringToColor, convertToRGBA } from \"../../utils/colors\";\n\n/**\n * Dialog tag renders a dialog\n * @example\n * <View>\n *  <Dialog name=\"dialog\" value=\"$dialog\"></Dialog>\n * <View>\n * @param {string} name name of the element\n * @param {object} value value of the element\n */\nconst Replica = types.model({\n  name: types.string,\n  text: types.string,\n  selected: types.optional(types.boolean, false),\n  date: types.optional(types.string, \"\"),\n  hint: types.optional(types.string, \"\"),\n});\n\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nfunction DialogActions(self) {\n  return {\n    fromStateJSON(obj) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  };\n}\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"Dialog\",\n    data: types.map(Replica),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => DialogActions(self));\n\nconst DialogModel = types.compose(\n  \"DialogModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxDialogView = inject(\"store\")(\n  observer(({ store, item }) => {\n    if (!store.task || !store.task.dataObj) {\n      return <Empty />;\n    }\n\n    let result = [];\n    let name = item.value;\n\n    if (name.charAt(0) === \"$\") {\n      name = name.substr(1);\n    }\n\n    store.task.dataObj[name].forEach((item, ind) => {\n      let bgColor;\n\n      if (item.name) {\n        bgColor = convertToRGBA(stringToColor(item.name), 0.1);\n      }\n\n      result.push(\n        <DialogView\n          key={ind}\n          name={item.name}\n          hint={item.hint}\n          text={item.text}\n          selected={item.selected}\n          date={item.date}\n          id={item.id}\n          bg={bgColor}\n        />,\n      );\n    });\n\n    return (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            maxHeight: \"500px\",\n            overflowY: \"scroll\",\n            paddingRight: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          {result}\n        </div>\n        <Divider dashed={true} />\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"dialog\", DialogModel, HtxDialogView);\n\nexport { DialogModel, HtxDialogView };\n","import React from \"react\";\n\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Audio tag plays a simple audio file\n * @example\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n * </View>\n * @example\n * <!-- Audio classification -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n *   <Choices name=\"ch\" toName=\"audio\">\n *     <Choice value=\"Positive\"></Choice>\n *     <Choice value=\"Negative\"></Choice>\n *   </Choices>\n * </View>\n * @example\n * <!-- Audio transcription -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n *   <TextArea name=\"ta\" toName=\"audio\"></TextArea>\n * </View>\n * @name Audio\n * @param {string} name of the element\n * @param {string} value of the element\n * @param {string} hotkey hotkey used to play/pause audio\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"audio\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  }));\n\nconst AudioModel = types.compose(\n  \"AudioModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  // [NOTE] we can't let audio element load empty item._value\n  // because it's not updating it's parent automatically\n  // https://github.com/facebook/react/issues/9447\n  if (!item._value) return null;\n\n  return (\n    <div>\n      <audio controls style={{ width: \"100%\" }}>\n        <source src={item._value} type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n});\n\nconst HtxAudio = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audio\", AudioModel, HtxAudio);\n\nexport { AudioModel, HtxAudio };\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions.min.js\";\nimport TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js\";\nimport CursorPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.cursor\";\nimport { Slider, InputNumber, Row, Col } from \"antd\";\n\nimport styles from \"./Waveform.module.scss\";\n\n/**\n * Use formatTimeCallback to style the notch labels as you wish, such\n * as with more detail as the number of pixels per second increases.\n *\n * Here we format as M:SS.frac, with M suppressed for times < 1 minute,\n * and frac having 0, 1, or 2 digits as the zoom increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override timeInterval, primaryLabelInterval and/or\n * secondaryLabelInterval so they all work together.\n *\n * @param: seconds\n * @param: pxPerSec\n */\nfunction formatTimeCallback(seconds, pxPerSec) {\n  seconds = Number(seconds);\n  var minutes = Math.floor(seconds / 60);\n  seconds = seconds % 60;\n\n  // fill up seconds with zeroes\n  var secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n\n  if (minutes > 0) {\n    if (seconds < 10) {\n      secondsStr = \"0\" + secondsStr;\n    }\n    return `${minutes}:${secondsStr}`;\n  }\n  return secondsStr;\n}\n\n/**\n * Use timeInterval to set the period between notches, in seconds,\n * adding notches as the number of pixels per second increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param: pxPerSec\n */\nfunction timeInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 0.01;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 0.025;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 0.1;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 0.25;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches that get labels in the primary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction primaryLabelInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 4;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 4;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches to get labels in the secondary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Secondary labels are drawn after primary labels, so if\n * you want to have labels every 10 seconds and another color labels\n * every 60 seconds, the 60 second labels should be the secondaries.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction secondaryLabelInterval(pxPerSec) {\n  // draw one every 10s as an example\n  return Math.floor(10 / timeInterval(pxPerSec));\n}\n\nexport default class Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      src: this.props.src,\n      pos: 0,\n      colors: {\n        waveColor: \"#97A0AF\",\n        progressColor: \"#52c41a\",\n      },\n      zoom: this.props.zoom,\n      speed: this.props.speed,\n      volume: this.props.volume,\n    };\n  }\n\n  /**\n   * Handle to change zoom of wave\n   */\n  onChangeZoom = value => {\n    this.setState({\n      ...this.state,\n      zoom: value,\n    });\n\n    this.wavesurfer.zoom(value);\n  };\n\n  onChangeVolume = value => {\n    this.setState({\n      ...this.state,\n      volume: value,\n    });\n\n    this.wavesurfer.setVolume(value);\n  };\n\n  /**\n   * Handle to change speed of wave\n   */\n  onChangeSpeed = value => {\n    this.setState({\n      ...this.state,\n      speed: value,\n    });\n\n    this.wavesurfer.setPlaybackRate(value);\n  };\n\n  componentDidMount() {\n    this.$el = ReactDOM.findDOMNode(this);\n\n    this.$waveform = this.$el.querySelector(\"#wave\");\n\n    this.regions = RegionsPlugin.create({\n      dragSelection: {\n        slop: 5, // slop\n      },\n    });\n\n    this.wavesurfer = WaveSurfer.create({\n      container: this.$waveform,\n      waveColor: this.state.colors.waveColor,\n      backend: \"MediaElement\",\n      progressColor: this.state.colors.progressColor,\n      plugins: [\n        this.regions,\n        TimelinePlugin.create({\n          container: \"#timeline\", // the element in which to place the timeline, or a CSS selector to find it\n          formatTimeCallback: formatTimeCallback, // custom time format callback. (Function which receives number of seconds and returns formatted string)\n          timeInterval: timeInterval, // number of intervals that records consists of. Usually it is equal to the duration in minutes. (Integer or function which receives pxPerSec value and returns value)\n          primaryLabelInterval: primaryLabelInterval, // number of primary time labels. (Integer or function which receives pxPerSec value and reurns value)\n          secondaryLabelInterval: secondaryLabelInterval, // number of secondary time labels (Time labels between primary labels, integer or function which receives pxPerSec value and reurns value).\n          primaryColor: \"blue\", // the color of the modulo-ten notch lines (e.g. 10sec, 20sec). The default is '#000'.\n          secondaryColor: \"blue\", // the color of the non-modulo-ten notch lines. The default is '#c0c0c0'.\n          primaryFontColor: \"#000\", // the color of the non-modulo-ten time labels (e.g. 10sec, 20sec). The default is '#000'.\n          secondaryFontColor: \"#000\",\n        }),\n        CursorPlugin.create({\n          wrapper: this.$waveform,\n          showTime: true,\n          opacity: 1,\n        }),\n      ],\n    });\n\n    /**\n     * Load data\n     */\n    this.wavesurfer.load(this.props.src);\n\n    /**\n     * Speed of waveform\n     */\n    this.wavesurfer.setPlaybackRate(this.state.speed);\n\n    const self = this;\n\n    /**\n     * Mouse enter on region\n     */\n    this.wavesurfer.on(\"region-mouseenter\", reg => {\n      reg._region.onMouseOver();\n    });\n\n    /**\n     * Mouse leave on region\n     */\n    this.wavesurfer.on(\"region-mouseleave\", reg => {\n      reg._region.onMouseLeave();\n    });\n\n    /**\n     * Add region to wave\n     */\n    this.wavesurfer.on(\"region-created\", reg => {\n      const region = self.props.addRegion(reg);\n      reg._region = region;\n      reg.color = region.selectedregionbg;\n\n      reg.on(\"click\", () => region.onClick(self.wavesurfer));\n      reg.on(\"update-end\", () => region.onUpdateEnd(self.wavesurfer));\n\n      reg.on(\"dblclick\", e => {\n        window.setTimeout(function() {\n          reg.play();\n        }, 0);\n      });\n\n      reg.on(\"out\", () => {});\n    });\n\n    /**\n     * Handler of slider\n     */\n    const slider = document.querySelector(\"#slider\");\n\n    if (slider) {\n      slider.oninput = function() {\n        self.wavesurfer.zoom(Number(this.value));\n      };\n    }\n\n    this.wavesurfer.on(\"ready\", () => {\n      self.props.onCreate(this.wavesurfer);\n    });\n\n    /**\n     * Pause trigger of audio\n     */\n    this.wavesurfer.on(\"pause\", self.props.handlePlay);\n\n    /**\n     * Play trigger of audio\n     */\n    this.wavesurfer.on(\"play\", self.props.handlePlay);\n\n    /**\n     *\n     */\n    this.props.onLoad(this.wavesurfer);\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"wave\" className={styles.wave} />\n\n        <div id=\"timeline\" />\n\n        <Row className={styles.menu}>\n          <Col span={24}>\n            <Col span={12}>\n              Speed:{\" \"}\n              <InputNumber\n                min={0.5}\n                max={3}\n                value={this.state.speed}\n                onChange={value => {\n                  this.onChangeSpeed(value);\n                }}\n              />\n            </Col>\n            <Col span={24}>\n              <Slider\n                min={0.5}\n                max={3}\n                step={0.1}\n                value={typeof this.state.speed === \"number\" ? this.state.speed : 1}\n                onChange={range => {\n                  this.onChangeSpeed(range);\n                }}\n              />\n            </Col>\n          </Col>\n          <Col span={24}>\n            <Col span={12}>\n              Volume:{\" \"}\n              <InputNumber\n                min={0}\n                max={1}\n                value={this.state.volume}\n                step={0.1}\n                onChange={value => {\n                  this.onChangeVolume(value);\n                }}\n              />\n            </Col>\n            <Col span={24}>\n              <Slider\n                min={0}\n                max={1}\n                step={0.1}\n                value={typeof this.state.volume === \"number\" ? this.state.volume : 1}\n                onChange={value => {\n                  this.onChangeVolume(value);\n                }}\n              />\n            </Col>\n          </Col>\n          {this.props.haszoom === \"true\" && (\n            <Col span={24}>\n              <Col span={12}>\n                Zoom:{\" \"}\n                <InputNumber\n                  min={20}\n                  max={500}\n                  value={this.state.zoom}\n                  onChange={value => {\n                    this.onChangeZoom(value);\n                  }}\n                />\n              </Col>\n              <Col span={24}>\n                <Slider\n                  min={20}\n                  step={10}\n                  max={500}\n                  value={typeof this.state.zoom === \"number\" ? this.state.zoom : 0}\n                  onChange={value => {\n                    this.onChangeZoom(value);\n                  }}\n                />\n              </Col>\n            </Col>\n          )}\n        </Row>\n      </div>\n    );\n  }\n}\n","import { types } from \"mobx-state-tree\";\n\nconst RegionsMixin = types\n  .model({\n    selected: types.optional(types.boolean, false),\n    highlighted: types.optional(types.boolean, false),\n  })\n  .actions(self => ({\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n    },\n\n    unselectRegion() {\n      const completion = self.completion;\n      if (completion.relationMode) {\n        completion.stopRelationMode();\n      }\n\n      self.selected = false;\n      self.completion.setHighlightedNode(null);\n    },\n\n    onClickRegion() {\n      const completion = self.completion;\n\n      if (completion.relationMode) {\n        completion.addRelation(self);\n        completion.stopRelationMode();\n        completion.regionStore.unselectAll();\n      } else {\n        if (self.selected) {\n          self.unselectRegion();\n        } else {\n          completion.regionStore.unselectAll();\n          self.selectRegion();\n        }\n      }\n    },\n\n    deleteRegion() {\n      self.unselectRegion();\n\n      self.completion.relationStore.deleteNodeRelation(self);\n\n      self.completion.regionStore.deleteRegion(self);\n\n      self.completion.deleteRegion(self);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n    },\n\n    toggleHightlight() {\n      self.setHighlight(!self.highlighted);\n    },\n  }));\n\nexport default RegionsMixin;\n","import { types } from \"mobx-state-tree\";\n\n/**\n * Normalization\n * For normalize many labels to one value\n */\nconst NormalizationMixin = types\n  .model({\n    normInput: types.maybeNull(types.string),\n    normalization: types.maybeNull(types.string),\n  })\n  .actions(self => ({\n    /**\n     * Set normalization\n     * @param {*} val\n     */\n    setNormalization(val) {\n      self.normalization = val;\n    },\n\n    /**\n     * Delete normalization\n     */\n    deleteNormalization() {\n      self.setNormalization(\"\");\n    },\n\n    setNormInput(val) {\n      self.normInput = val;\n    },\n  }));\n\nexport default NormalizationMixin;\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { Tag } from \"antd\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Utils from \"../../utils\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\nimport Hint from \"../../components/Hint/Hint\";\n\n/**\n * Label tag represents a single label\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\"></Label>\n *     <Label alias=\"P\" value=\"Product\"></Label>\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\"></Text>\n * </View>\n * @name Label\n * @param {string} value A value of the label\n * @param {boolean} selected If this label should be preselected\n * @param {string} alias Label alias\n * @param {string} hotkey Hotkey\n * @param {boolean} showalias Show alias inside label text\n * @param {string} aliasstyle Alias CSS style default=opacity: 0.6\n * @param {string} size Size of text in the label\n * @param {string} background The background color of active label\n * @param {string} selectedColor Color of text in an active label\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  showalias: types.optional(types.string, \"false\"),\n  aliasstyle: types.optional(types.string, \"opacity: 0.6\"),\n  size: types.optional(types.string, \"medium\"),\n  background: types.optional(types.string, \"#36B37E\"),\n  selectedcolor: types.optional(types.string, \"white\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"label\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .actions(self => ({\n    toggleSelected() {\n      const sel = self.selected;\n\n      const labels = Types.getParentOfTypeString(self, [\"LabelsModel\", \"RectangleLabelsModel\", \"PolygonLabelsModel\"]);\n      labels.shouldBeUnselected && labels.unselectAll();\n\n      if (labels.shouldBeUnselected && sel === true) {\n      } else {\n        self.selected = !self.selected;\n      }\n    },\n\n    markSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst LabelModel = types.compose(\n  \"LabelModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxLabelView = inject(\"store\")(\n  observer(({ item, store }) => {\n    const bg = {\n      backgroundColor: item.selected ? item.background : \"#e8e8e8\",\n      color: item.selected ? item.selectedcolor : \"#333333\",\n      cursor: \"pointer\",\n      margin: \"5px\",\n    };\n\n    return (\n      <Tag\n        onClick={ev => {\n          item.toggleSelected();\n          return false;\n        }}\n        style={bg}\n        size={item.size}\n      >\n        {item._value}\n        {item.showalias === \"true\" && item.alias && (\n          <span style={Utils.styleToProp(item.aliasstyle)}>&nbsp;{item.alias}</span>\n        )}\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n      </Tag>\n    );\n  }),\n);\n\nRegistry.addTag(\"label\", LabelModel, HtxLabelView);\n\nexport { HtxLabelView, LabelModel };\n","import { types } from \"mobx-state-tree\";\n\nconst SelectedModelMixin = types\n  .model()\n  .views(self => ({\n    get selectedLabels() {\n      return self.children.filter(c => c.selected === true);\n    },\n\n    get isSelected() {\n      return self.selectedLabels.length > 0;\n    },\n  }))\n  .actions(self => ({\n    findLabel(value) {\n      return self.children.find(c => c.alias === value || c.value === value);\n    },\n\n    unselectAll() {\n      self.children.map(c => c.markSelected(false));\n    },\n\n    getSelectedNames() {\n      return self.selectedLabels.map(c => (c.alias ? c.alias : c.value));\n    },\n\n    getSelectedString(joinstr) {\n      joinstr = joinstr || \" \";\n      return self.getSelectedNames().join(joinstr);\n    },\n  }));\n\nexport default SelectedModelMixin;\n","import { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { types } from \"mobx-state-tree\";\n\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\n\nimport { LabelModel } from \"./Label\"; // eslint-disable-line no-unused-vars\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\n/**\n * Labels tag, create a group of labels\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\"></Label>\n *     <Label alias=\"P\" value=\"Product\"></Label>\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\"></Text>\n * </View>\n * @name Labels\n * @param {string} name name of the element\n * @param {string} toName name of the element that you want to label\n * @param {single|multiple=} [choice=single] configure if you can select just one or multiple labels\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  choice: types.optional(types.enumeration([\"single\", \"multiple\"]), \"single\"),\n\n  // TODO make enum\n  selectionstyle: types.maybeNull(types.optional(types.string, \"basic\", \"border\", \"bottom\")),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"labels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\";\n    },\n  }))\n  .actions(self => ({\n    getSelectedColor() {\n      // return first selected label color\n      const sel = self.children.find(c => c.selected === true);\n      return sel && sel.background;\n    },\n\n    toStateJSON() {\n      const names = self.getSelectedNames();\n\n      if (names && names.length) {\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: self.name,\n          type: self.type,\n          value: {\n            labels: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.labels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.labels.forEach(l => {\n        const label = self.findLabel(l);\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst LabelsModel = types.compose(\n  \"LabelsModel\",\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\n\nconst HtxLabels = observer(({ item }) => {\n  return (\n    <div\n      style={{\n        marginTop: \"1em\",\n        marginBottom: \"1em\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        flexFlow: \"wrap\",\n      }}\n    >\n      \n      {Tree.renderChildren(item)}\n    </div>\n  );\n});\n\nRegistry.addTag(\"labels\", LabelsModel, HtxLabels);\n\nexport { HtxLabels, LabelsModel };\n","import React, { Component } from \"react\";\nimport { Rating } from \"semantic-ui-react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\n\n/**\n * Rating tag\n * @example\n * <View>\n *   <Text name=\"txt\" value=\"$text\"></Text>\n *   <Rating name=\"rating\" toName=\"txt\" maxRating=\"10\"></Rating>\n * </View>\n * @name Rating\n * @param {string} name of the element\n * @param {string} toName name of the element that you want to label\n * @param {integer=} [maxRating=5] maxmium rating value\n * @param {string=} [size=large] one of: mini tiny small large huge massive\n * @param {string=} [icon=star] one of: star heart\n * @param {string=} hotkey hokey\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  maxrating: types.optional(types.string, \"5\"),\n  icon: types.optional(types.string, \"star\"),\n  size: types.optional(types.string, \"large\"),\n\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rating\",\n    rating: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get isSelected() {\n      return self.rating > 0;\n    },\n  }))\n  .actions(self => ({\n    getSelectedString() {\n      return self.rating + \" star\";\n    },\n\n    getSelectedNames() {\n      return self.rating;\n    },\n\n    unselectAll() {\n      self.rating = 0;\n    },\n\n    handleRate(e, { rating, maxrating }) {\n      self.rating = rating;\n    },\n\n    increaseValue() {\n      if (self.rating >= self.maxrating) {\n        self.rating = 0;\n      } else {\n        if (self.rating > 0) {\n          self.rating = self.rating + 1;\n        } else {\n          self.rating = 1;\n        }\n      }\n    },\n\n    onHotKey() {\n      return self.increaseValue();\n    },\n\n    toStateJSON() {\n      if (self.rating) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            rating: self.rating,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      if (obj.id) self.pid = obj.id;\n\n      self.rating = obj.value.rating;\n    },\n  }));\n\nconst RatingModel = types.compose(\n  \"RatingModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxRating = inject(\"store\")(\n  observer(({ item, store }) => {\n    return (\n      <div>\n        <Rating\n          icon=\"star\"\n          size={item.size}\n          defaultRating={0}\n          rating={item.rating}\n          maxRating={item.maxrating}\n          onRate={item.handleRate}\n          clearable\n        />\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n          <sup style={{ fontSize: \"9px\" }}>[{item.hotkey}]</sup>\n        )}\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"rating\", RatingModel, HtxRating);\n\nexport { HtxRating, RatingModel };\n","import { types, getParentOfType, destroy, getRoot } from \"mobx-state-tree\";\n\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\n\nimport { AudioPlusModel } from \"./AudioPlus\";\nimport Utils from \"../../utils\";\n\nconst Model = types\n  .model(\"AudioRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    start: types.number,\n    end: types.number,\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel))),\n    selectedregionbg: types.optional(types.string, \"rgba(0, 0, 0, 0.5)\"),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, AudioPlusModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    /**\n     * When you try to send completion\n     */\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.pid,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"region\",\n          value: {\n            start: self.start,\n            end: self.end,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n\n    /**\n     * Select audio region\n     */\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self._ws_region.update({ color: Utils.Colors.rgbaChangeAlpha(self.selectedregionbg, 0.8) });\n    },\n\n    /**\n     * Unselect audio region\n     */\n    unselectRegion() {\n      self.selected = false;\n      self.completion.setHighlightedNode(null);\n      if (self._ws_region.update) {\n        self._ws_region.update({ color: self.selectedregionbg });\n      }\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n\n      if (val) {\n        self._ws_region.update({ color: Utils.Colors.rgbaChangeAlpha(self.selectedregionbg, 0.8) });\n        self._ws_region.element.style.border = \"2px solid red\";\n      } else {\n        self._ws_region.update({ color: self.selectedregionbg });\n        self._ws_region.element.style.border = \"none\";\n      }\n    },\n\n    setNormalization(val) {\n      // console.log(val)\n    },\n\n    beforeDestroy() {\n      if (self._ws_region) self._ws_region.remove();\n    },\n\n    onClick(wavesurfer) {\n      if (!self.completion.relationMode) {\n        // Object.values(wavesurfer.regions.list).forEach(r => {\n        //   // r.update({ color: self.selectedregionbg });\n        // });\n\n        self._ws_region.update({ color: Utils.Colors.rgbaChangeAlpha(self.selectedregionbg, 0.8) });\n      }\n\n      self.onClickRegion();\n    },\n\n    onMouseOver() {\n      if (self.completion.relationMode) {\n        self.setHighlight(true);\n        self._ws_region.element.style.cursor = \"crosshair\";\n      }\n    },\n\n    onMouseLeave() {\n      if (self.completion.relationMode) {\n        self.setHighlight(false);\n        self._ws_region.element.style.cursor = \"move\";\n      }\n    },\n\n    onUpdateEnd(wavesurfer) {\n      self.start = self._ws_region.start;\n      self.end = self._ws_region.end;\n    },\n  }));\n\nconst AudioRegionModel = types.compose(\n  \"AudioRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nexport { AudioRegionModel };\n","import React, { Fragment } from \"react\";\n\nimport { types, getRoot, getType } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Icon, Slider, Row, Col } from \"antd\";\n\nimport { cloneNode } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\n// import { AudioEditorMode } from './AudioEditor';\nimport Waveform from \"../../components/Waveform/Waveform\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\nimport Utils from \"../../utils\";\n\nimport { AudioRegionModel } from \"./AudioRegion\";\nimport styles from \"./AudioPlus/AudioPlus.module.scss\";\n\n/**\n * AudioPlus tag plays audio and shows its wave\n * @example\n * <View>\n *  <Labels name=\"lbl-1\" toName=\"audio-1\"><Label value=\"Hello\"></Label><Label value=\"World\"></Label></Labels>\n *  <Rating name=\"rate-1\" toName=\"audio-1\"></Rating>\n *  <AudioPlus name=\"audio-1\" value=\"$audio\"></AudioPlus>\n * </View>\n * @name AudioPlus\n * @param {string} name of the element\n * @param {string} value of the element\n * @param {boolean} hasZoom speficy if audio has zoom functionality\n * @param {string} regionBG region color\n * @param {string} selectedRegionBG selected region background\n * @param {number} volume from 0 to 1\n * @param {number} speed from 0.5 to 3\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  haszoom: types.optional(types.string, \"true\"),\n  volume: types.optional(types.number, 1),\n  speed: types.optional(types.number, 1),\n});\n\nconst Model = types\n  .model(\"AudioPlusModel\", {\n    id: types.identifier,\n    type: \"audio\",\n    _value: types.optional(types.string, \"\"),\n    playing: types.optional(types.boolean, false),\n    regions: types.array(AudioRegionModel),\n    rangeValue: types.optional(types.number, 20),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states\n        ? states.filter(s => s.isSelected && (getType(s).name === \"LabelsModel\" || getType(s).name === \"RatingModel\"))\n        : null;\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      return self.regions.map(r => r.toStateJSON());\n    },\n\n    /**\n     * Find region of audio\n     */\n    findRegion(start, end) {\n      let findedRegion = self.regions.find(r => r.start === start && r.end === end);\n      return findedRegion;\n    },\n\n      fromStateJSON(obj, fromModel) {\n\t  console.log('fromStateJSON');\n      let r;\n\n      const tree = {\n        pid: obj.id,\n        start: obj.value.start,\n        end: obj.value.end,\n        normalization: obj.normalization,\n      };\n\n      if (obj.value.labels) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      const region = self.findRegion(obj.value.start, obj.value.end);\n      const m = restoreNewsnapshot(fromModel);\n\n      m.fromStateJSON(obj);\n\n      if (!region) {\n          tree.states = [m];\n\n\t  //self._ws.addRegion(tree);\n\t  \n        r = self.addRegion(tree);\n      } else {\n        region.states.push(m);\n      }\n\n\t  if (self._ws) {\n\t      \t  self._ws.addRegion({\n\t\t      start: r.start,\n\t\t      end: r.end\n\t\t  });\n\t      \n\t  }\n\t  \n      return r;\n    },\n\n    setRangeValue(val) {\n      self.rangeValue = val;\n    },\n\n    setPlaybackRate(val) {\n      self.playBackRate = val;\n    },\n\n    addRegion(ws_region) {\n      const states = self.activeStates();\n\n      const clonedStates = states\n        ? states.map(s => {\n            return cloneNode(s);\n          })\n        : null;\n\n      const find_r = self.findRegion(ws_region.start, ws_region.end);\n\n      if (self.findRegion(ws_region.start, ws_region.end)) {\n        find_r._ws_region = ws_region;\n        return find_r;\n      }\n\n      /**\n       * TODO\n       * New function for sum some RGBA colors\n       */\n      // let sumRGBA = [];\n\n      // states[0].getSelectedNames().map(region => {\n      //   sumRGBA.push(states[0].findLabel(region).background)\n      // })\n\n      const bgColor =\n        states && states[0] ? Utils.Colors.convertToRGBA(states[0].getSelectedColor(), 0.3) : self.selectedregionbg;\n\n      const r = AudioRegionModel.create({\n        id: ws_region.id ? ws_region.id : guidGenerator(),\n        pid: ws_region.pid ? ws_region.pid : guidGenerator(),\n        start: ws_region.start,\n        end: ws_region.end,\n        regionbg: self.regionbg,\n        selectedregionbg: bgColor,\n        states: clonedStates,\n      });\n\n      r._ws_region = ws_region;\n\n      // self._ws.addRegion(ws_region);\n\t\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      states && states.forEach(s => s.unselectAll());\n\n      return r;\n    },\n\n    /**\n     * Play and stop\n     */\n    handlePlay() {\n      self.playing = !self.playing;\n    },\n\n      onLoad(ws) {\n\t  console.log('onLoad');\n      self._ws = ws;\n\n      //self.regions.forEach(obj => {\n      //  self._ws.addRegion({\n      //    start: obj.start,\n      //    end: obj.end,\n      //  });\n      //});\n    },\n\n    wsCreated(ws) {\n      self._ws = ws;\n    },\n  }));\n\nconst AudioPlusModel = types.compose(\n  \"AudioPlusModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  if (!item._value) return null;\n\n  return (\n    <div>\n      <Waveform\n        src={item._value}\n        selectRegion={item.selectRegion}\n        handlePlay={item.handlePlay}\n        onCreate={item.wsCreated}\n        addRegion={item.addRegion}\n        onLoad={item.onLoad}\n        speed={item.speed}\n        haszoom={item.haszoom}\n        zoom={item.rangeValue}\n        volume={item.volume}\n      />\n\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", marginTop: \"1em\" }}>\n        <Button\n          type=\"primary\"\n          className={styles.play}\n          onClick={ev => {\n            item._ws.playPause();\n          }}\n        >\n          {item.playing && (\n            <Fragment>\n              <Icon type=\"pause-circle\" /> Pause\n            </Fragment>\n          )}\n          {!item.playing && (\n            <Fragment>\n              <Icon type=\"play-circle\" /> Play\n            </Fragment>\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n});\n\nconst HtxAudioPlus = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audioplus\", AudioPlusModel, HtxAudioPlus);\n\nexport { AudioRegionModel, AudioPlusModel, HtxAudioPlus };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { isHtx, cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { RectRegionModel } from \"../object/RectRegion\";\n\n/**\n * Rectangle tag\n * Rectangle is used to add rectangle (BBox) to an image\n * @example\n * <View>\n *   <Rectangle name=\"rect-1\" toName=\"img-1\"></Rectangle>\n *   <Image name=\"img-1\" value=\"$img\"></Image>\n * </View>\n * @name Rectangle\n * @param {string} name name of the element\n * @param {string} toname name of the image to label\n * @param {float=} [opacity=0.6] opacity of rectangle\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of the stroke\n * @param {boolean=} [canRotate=true] show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.maybeNull(types.string),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n\n  canrotate: types.optional(types.string, \"true\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"rectangle\",\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj) {\n      // const rect = self._createRect();\n      // rect.setPosition(obj.value.x, obj.value.y, obj.value.width, obj.value.height, obj.value.rotation);\n      // return rect;\n    },\n  }));\n\nconst RectangleModel = types.compose(\n  \"RectangleModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"rectangle\", RectangleModel, HtxView);\n\nexport { HtxView, RectangleModel };\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\n\nimport { types } from \"mobx-state-tree\";\n\nimport Types from \"../../core/Types\";\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { RectangleModel } from \"./Rectangle\";\n\n/**\n * RectangleLabels tag creates labeled rectangles\n * @example\n * <View>\n *   <RectangleLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\"></Label>\n *     <Label value=\"Animal\"></Label>\n *   </RectangleLabels>\n *   <Image name=\"image\" value=\"$image\"></Image>\n * </View>\n * @name RectangleLabels\n * @param {string} name name of the element\n * @param {string} toname name of the image to label\n * @param {float=} [opacity=0.6] opacity of rectangle\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {boolean=} [canRotate=true] show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model(\"RectangleLabelsModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rectanglelabels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.rectanglelabels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.rectanglelabels.forEach(l => {\n        const label = self.findLabel(l);\n\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst Composition = types.compose(\n  LabelsModel,\n  RectangleModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\nconst RectangleLabelsModel = types.compose(\n  \"RectangleLabelsModel\",\n  Composition,\n);\n\nconst HtxRectangleLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"rectanglelabels\", RectangleLabelsModel, HtxRectangleLabels);\n\nexport { HtxRectangleLabels, RectangleLabelsModel };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RectangleLabelsModel } from \"../control/RectangleLabels\";\n\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"rectangleregion\",\n\n    x: types.number,\n    y: types.number,\n    width: types.number,\n    height: types.number,\n\n    scaleX: types.optional(types.number, 1),\n    scaleY: types.optional(types.number, 1),\n\n    rotation: types.optional(types.number, 0),\n\n    opacity: types.number,\n    strokewidth: types.number,\n\n    fillcolor: types.maybeNull(types.string),\n    strokecolor: types.string,\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel, RectangleLabelsModel))),\n\n    // fromName: types.maybeNull(types.string),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n\n    sw: types.maybeNull(types.number),\n    sh: types.maybeNull(types.number),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"px\"),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    unselectRegion() {\n      self.selected = false;\n      self.parent.setSelected(undefined);\n      self.completion.setHighlightedNode(null);\n    },\n\n    coordsInside(x, y) {\n      // check if x and y are inside the rectangle\n      const rx = self.x;\n      const ry = self.y;\n      const rw = self.width * (self.scaleX || 1);\n      const rh = self.height * (self.scaleY || 1);\n\n      if (x > rx && x < rx + rw && y > ry && y < ry + rh) return true;\n\n      return false;\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n    },\n\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.rotation = rotation;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      self.wp = wp;\n      self.hp = hp;\n\n      self.sw = sw;\n      self.sh = sh;\n\n      if (self.coordstype == \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.width = (sw * self.width) / 100;\n        self.height = (sh * self.height) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    toStateJSON() {\n      const parent = self.parent;\n      const from = parent.states()[0];\n\n      const buildTree = obj => {\n        const tree = {\n          id: self.id,\n          from_name: from.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"rectangle\",\n          value: {\n            x: (self.x * 100) / self.parent.stageWidth,\n            y: (self.y * 100) / self.parent.stageHeight,\n            width: (self.width * (self.scaleX || 1) * 100) / self.parent.stageWidth, //  * (self.scaleX || 1)\n            height: (self.height * (self.scaleY || 1) * 100) / self.parent.stageHeight,\n            rotation: self.rotation,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst RectRegionModel = types.compose(\n  \"RectRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxRectangleView = ({ store, item }) => {\n  const self = this;\n  const { name, wwidth, wheight, onChangedPosition } = item;\n\n  const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n  const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n  const x = item.x;\n  const y = item.y;\n  const w = item.width;\n  const h = item.height;\n\n  const props = {};\n\n  props[\"opacity\"] = item.opacity;\n\n  if (item.fillcolor) {\n    props[\"fill\"] = item.fillcolor;\n  }\n\n  props[\"stroke\"] = item.strokecolor;\n  props[\"strokeWidth\"] = item.strokewidth;\n  props[\"strokeScaleEnabled\"] = false;\n  props[\"shadowBlur\"] = 0;\n\n  if (item.highlighted) {\n    props[\"stroke\"] = \"#ff0000\";\n  }\n\n  return (\n    <Fragment>\n      <Rect\n        x={x}\n        y={y}\n        width={w}\n        height={h}\n        scaleX={item.scaleX}\n        scaleY={item.scaleY}\n        name={item.id}\n        onTransformEnd={e => {\n          const t = e.target;\n\n          const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n          const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        onDragEnd={e => {\n          const t = e.target;\n\n          const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n          const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        dragBoundFunc={function(pos) {\n          let { x, y } = pos;\n\n          if (x < 0) x = 0;\n          if (y < 0) y = 0;\n\n          return {\n            x: x,\n            y: y,\n          };\n        }}\n        onMouseOver={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent._stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable\n      />\n    </Fragment>\n  );\n};\n\nconst HtxRectangle = inject(\"store\")(observer(HtxRectangleView));\n\nRegistry.addTag(\"rectangleregion\", RectRegionModel, HtxRectangle);\n\nexport { RectRegionModel, HtxRectangle };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot, getParent } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer, Line, Circle } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst PolygonPoint = types\n  .model({\n    init_x: types.optional(types.number, 0),\n    init_y: types.optional(types.number, 0),\n\n    x: types.number,\n    y: types.number,\n\n    style: types.string,\n    size: types.string,\n    // isMouseOverStartPoint: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get parent() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      self.init_x = self.x;\n      self.init_y = self.y;\n    },\n\n    movePoint(x, y) {\n      self.x = self.init_x + x;\n      self.y = self.init_y + y;\n    },\n\n    _movePoint(x, y) {\n      self.init_x = x;\n      self.init_y = y;\n\n      self.x = x;\n      self.y = y;\n    },\n\n    handleMouseOverStartPoint(ev) {\n      const stage = self.parent.parent._stageRef;\n      stage.container().style.cursor = \"crosshair\";\n\n      if (self.parent.closed || self.parent.points.length < 3) return;\n\n      const t = ev.target;\n\n      t.setX(t.x() - t.width() / 2);\n      t.setY(t.y() - t.height() / 2);\n\n      const scaleMap = {\n        small: 3,\n        medium: 2,\n        large: 2,\n      };\n\n      const scale = scaleMap[self.size];\n\n      t.scale({ x: scale, y: scale });\n\n      self.parent.setMouseOverStartPoint(true);\n    },\n\n    handleMouseOutStartPoint(ev) {\n      const t = ev.target;\n\n      const stage = self.parent.parent._stageRef;\n      stage.container().style.cursor = \"default\";\n\n      t.setX(t.x() + t.width() / 2);\n      t.setY(t.y() + t.height() / 2);\n      t.scale({ x: 1, y: 1 });\n\n      self.parent.setMouseOverStartPoint(false);\n    },\n  }));\n\nconst PolygonPointView = observer(({ item, index }) => {\n  const sizes = {\n    small: 4,\n    medium: 8,\n    large: 12,\n  };\n\n  const stroke = {\n    small: 1,\n    medium: 2,\n    large: 3,\n  };\n\n  const w = sizes[item.size];\n\n  const startPointAttr =\n    index === 0\n      ? {\n          hitStrokeWidth: 12,\n          onMouseOver: item.handleMouseOverStartPoint,\n          onMouseOut: item.handleMouseOutStartPoint,\n        }\n      : null;\n\n  const isOver = item.parent.mouseOverStartPoint;\n\n  const dragOpts = {\n    onDragStart: e => {\n      //handleDragStartPoint\n    },\n\n    onDragMove: e => {\n      item._movePoint(e.target.attrs.x, e.target.attrs.y);\n\n      /* const points = this.state.points; */\n      /* const index = e.target.index - 1; */\n      /* console.log(event.target); */\n      /* const pos = [event.target.attrs.x, event.target.attrs.y]; */\n      /* console.log(\"move\", event); */\n      /* console.log(pos); */\n      /* this.setState({ */\n      /*     points: [...points.slice(0, index), pos, ...points.slice(index + 1)] */\n      /* }); */\n    },\n\n    onDragEnd: e => {\n      // handleDragEndPoint\n    },\n\n    onMouseOver: e => {\n      const stage = item.parent.parent._stageRef;\n      stage.container().style.cursor = \"crosshair\";\n    },\n\n    onMouseOut: e => {\n      const stage = item.parent.parent._stageRef;\n      stage.container().style.cursor = \"default\";\n    },\n  };\n\n  if (item.style == \"circle\") {\n    return (\n      <Circle\n        key={index}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        radius={w}\n        fill=\"white\"\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable\n      />\n    );\n  } else {\n    return (\n      <Rect\n        key={index}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        width={w}\n        height={w}\n        fill=\"white\"\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        dragOnTop={false}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable\n      />\n    );\n  }\n  // <Rect width={w}\n  //       height={w}\n  //       x={item.x - w/2}\n  //       y={item.y - w/2}\n  //       fill=\"black\"\n\n  //       onClick={(ev) => {\n  //           item.parent.closePoly();\n\n  //           ev.cancelBubble = true;\n  //           ev.evt.stopPropagation();\n  //       }}\n\n  //       dragBoundFunc={function(pos) {\n  //           let { x, y } = pos;\n  //           if (x < 0) x = 0;\n  //           if (y < 0) y = 0;\n\n  //           // /* const r = wwidth - this.getAttr('width'); */\n  //           // /* const b = wheight - this.getAttr('height'); */\n\n  //           item._movePoint(x, y);\n  //           // if (x > r) x = r;\n  //           // if (y > b) y = b;\n  //           // item.redrawParent();\n\n  //         return {\n  //             x: x,\n  //             y: y,\n  //         };\n\n  //       }}\n\n  //  draggable\n  // />\n});\n\nexport { PolygonPoint, PolygonPointView };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { isHtx, cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { PolygonRegionModel } from \"../object/PolygonRegion\";\n\n/**\n * Polygon tag\n * Polygon is used to add polygons to an image\n * @example\n * <View>\n *   <Polygon name=\"rect-1\" toName=\"img-1\" value=\"Add Rectangle\"></Polygon>\n *   <Image name=\"img-1\" value=\"$img\"></Image>\n * </View>\n * @name Polygon\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {number=} [opacity=0.6] opacity of polygon\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {small|medium|large=} [pointSize=medium] size of polygon handle points\n * @param {rectangle|circle=} [pointStyle=rectangle] style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.maybeNull(types.string),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n\n  pointsize: types.optional(types.string, \"medium\"),\n  pointstyle: types.optional(types.string, \"rectangle\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"polygon\",\n\n    // regions: types.array(RectRegionModel),\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states ? states.filter(c => c.isSelected === true) : null;\n    },\n  }))\n  .actions(self => ({}));\n\nconst PolygonModel = types.compose(\n  \"PolygonModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = inject(\"store\")(\n  observer(({ store, item }) => {\n    return null;\n  }),\n);\n\nRegistry.addTag(\"polygon\", PolygonModel, HtxView);\n\nexport { HtxView, PolygonModel };\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\n\nimport { types } from \"mobx-state-tree\";\n\nimport Types from \"../../core/Types\";\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { PolygonModel } from \"./Polygon\";\n\n/**\n * PolygonLabels tag, create labeled polygons\n * @example\n * <View>\n *   <Image name=\"image\" value=\"$image\"></Image>\n *   <PolygonLabels name=\"lables\" toName=\"image\">\n *     <Label value=\"Car\"></Label>\n *     <Label value=\"Sign\"></Label>\n *   </PolygonLabels>\n * </View>\n * @name PolygonLabels\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {number=} [opacity=0.6] opacity of polygon\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {small|medium|large=} [pointSize=medium] size of polygon handle points\n * @param {rectangle|circle=} [pointStyle=rectangle] style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model(\"PolygonLabelsModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"polygonlabels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.polygonlabels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.polygonlabels.forEach(l => {\n        const label = self.findLabel(l);\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst Composition = types.compose(\n  LabelsModel,\n  PolygonModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\nconst PolygonLabelsModel = types.compose(\n  \"PolygonLabelsModel\",\n  Composition,\n);\n\nconst HtxPolygonLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"polygonlabels\", PolygonLabelsModel, HtxPolygonLabels);\n\nexport { HtxPolygonLabels, PolygonLabelsModel };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot, getParent } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer, Group, Line } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport { PolygonPoint, PolygonPointView } from \"./PolygonPoint\";\n\nimport { PolygonLabelsModel } from \"../control/PolygonLabels\";\n\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"polygonregion\",\n\n    opacity: types.number,\n    fillcolor: types.maybeNull(types.string),\n\n    strokewidth: types.number,\n    strokecolor: types.string,\n\n    pointsize: types.string,\n    pointstyle: types.string,\n\n    closed: types.optional(types.boolean, false),\n\n    points: types.array(PolygonPoint, []),\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel, PolygonLabelsModel))),\n\n    mouseOverStartPoint: types.optional(types.boolean, false),\n\n    fromName: types.maybeNull(types.string),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get isCW() {},\n\n    linePoints() {\n      const p = self.points.map(p => [p[\"x\"], p[\"y\"]]);\n\n      const flatten = arr => {\n        return arr.reduce(function(flat, toFlatten) {\n          return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n        }, []);\n      };\n\n      return flatten(p);\n    },\n  }))\n  .actions(self => ({\n    setMouseOverStartPoint(val) {\n      self.mouseOverStartPoint = val;\n    },\n\n    findPolyOutline() {\n      const { points } = self;\n      const left = points.reduce((acc, loc) => (acc.x < loc.x ? acc : loc));\n      const right = points.reduce((acc, loc) => (acc.x > loc.x ? acc : loc));\n\n      const top = points.reduce((acc, loc) => (acc.y < loc.y ? acc : loc));\n      const bottom = points.reduce((acc, loc) => (acc.y > loc.y ? acc : loc));\n\n      return {\n        x: left.x,\n        y: top.y,\n        width: right.x - left.x,\n        height: bottom.y - top.y,\n      };\n    },\n\n    coordsInside(x, y) {\n      const inside = false;\n      const vs = self.points;\n\n      for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0],\n          yi = vs[i][1];\n        var xj = vs[j][0],\n          yj = vs[j][1];\n\n        var intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n        if (intersect) inside = !inside;\n      }\n\n      return inside;\n    },\n\n    addPoint(x, y) {\n      if (self.closed) return;\n\n      if (self.mouseOverStartPoint) {\n        self.closePoly();\n        return;\n      }\n      // if (self.canClose(x, y)) {\n      //     self.closePoly();\n      //     return;\n      // }\n\n      self._addPoint(x, y);\n    },\n\n    insertPoint(insertIdx, x, y) {\n      const p = { x: x, y: y, size: self.pointsize, style: self.pointstyle };\n      self.points.splice(insertIdx, 0, p);\n    },\n\n    _addPoint(x, y) {\n      self.points.push({ x: x, y: y, size: self.pointsize, style: self.pointstyle });\n    },\n\n    closePoly() {\n      self.closed = true;\n      self.selectRegion();\n    },\n\n    canClose(x, y) {\n      if (self.points.length < 2) return false;\n\n      const p1 = self.points[0];\n      const p2 = { x: x, y: y };\n\n      var r = 50;\n      var dist_points = (p1[\"x\"] - p2[\"x\"]) * (p1[\"x\"] - p2[\"x\"]) + (p1[\"y\"] - p2[\"y\"]) * (p2[\"y\"] - p2[\"y\"]);\n\n      if (dist_points < r) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    unselectRegion() {\n      self.selected = false;\n      self.parent.setSelected(undefined);\n      self.completion.setHighlightedNode(null);\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n    },\n\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.rotation = rotation;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp) {\n      self.wp = wp;\n      self.hp = hp;\n    },\n\n    toStateJSON() {\n      // console.log(self.parent.naturalWidth);\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = self.parent;\n\n      const perc_w = (stageWidth * 100) / naturalWidth;\n      const perc_h = (stageHeight * 100) / naturalHeight;\n\n      const perc_points = self.points.map(p => {\n        const orig_w = (p.x * 100) / perc_w;\n        const res_w = (orig_w * 100) / naturalWidth;\n\n        const orig_h = (p.y * 100) / perc_h;\n        const res_h = (orig_h * 100) / naturalHeight;\n\n        return [res_w, res_h];\n      });\n\n      // 1024 - 100\n      // 750 - x\n\n      // x = (750 * 100) / 1024\n      // x = 75\n\n      // 300 - 75\n      // y - 100\n\n      // y = (100 * 300) / 75\n      // y = 500\n\n      // 1024 - 100\n      // 500 - z\n\n      // z = (y * 100) / 1024\n\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.id,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"polygon\",\n          value: {\n            points: perc_points,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst PolygonRegionModel = types.compose(\n  \"PolygonRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nfunction getAnchorPoint({ flattenedPoints, a, b }) {\n  const [x1, y1, x2, y2] = flattenedPoints;\n  const y =\n    ((x2 - x1) * (x2 * y1 - x1 * y2) + (x2 - x1) * (y2 - y1) * a + (y2 - y1) * (y2 - y1) * b) /\n    ((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n  const x =\n    a -\n    ((y2 - y1) * (x2 * y1 - x1 * y2 + a * (y2 - y1) - b * (x2 - x1))) / ((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n  return [x, y];\n}\n\nfunction getFlattenedPoints(points) {\n  const p = points.map(p => [p[\"x\"], p[\"y\"]]);\n  return p.reduce(function(flattenedPoints, point) {\n    return flattenedPoints.concat(point);\n  }, []);\n}\n\nconst HtxPolygonView = ({ store, item }) => {\n  const self = this;\n  const { name, wwidth, wheight, onChangedPosition } = item;\n\n  let opacity = 0.5;\n\n  const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n  const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n  const x = item.x;\n  const y = item.y;\n  const w = item.width;\n  const h = item.height;\n\n  const props = {};\n\n  props[\"opacity\"] = item.opacity;\n\n  if (item.fillcolor) {\n    props[\"fill\"] = item.fillcolor;\n  }\n\n  props[\"stroke\"] = item.strokecolor;\n  props[\"strokeWidth\"] = item.strokewidth;\n\n  if (item.highlighted) {\n    props[\"stroke\"] = \"red\";\n  }\n\n  return (\n    <Fragment>\n      {item.mouseOverStartPoint}\n\n      <Line\n        points={item.linePoints()}\n        fill={item.fill}\n        opacity={item.opacity}\n        closed={item.closed}\n        redraw={item.update}\n        stroke={item.stroke}\n        strokeWidth={parseInt(item.strokewidth)}\n        onDragStart={e => {\n          item.completion.setDragMode(true);\n        }}\n        dragBoundFunc={function(pos) {\n          let { x, y } = pos;\n          /* if (x < 0) x = 0; */\n          /* if (y < 0) y = 0; */\n\n          const r = item.parent.stageWidth - this.getAttr(\"width\");\n          const b = item.parent.stageHeight - this.getAttr(\"height\");\n\n          /* const r = wwidth - this.getAttr('width'); */\n          /* const b = wheight - this.getAttr('height'); */\n\n          if (x > r) x = r;\n          if (y > b) y = b;\n\n          item.points.forEach(p => {\n            p.movePoint(x, y);\n          });\n\n          return {\n            x: 0,\n            y: 0,\n          };\n        }}\n        onDragEnd={e => {\n          item.completion.setDragMode(false);\n\n          if (!item.closed) item.closePoly();\n\n          item.parent.setActivePolygon(null);\n\n          item.points.forEach(p => {\n            p.afterCreate();\n          });\n        }}\n        onMouseOver={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent._stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          e.cancelBubble = true;\n\n          if (!item.closed) return;\n\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable\n      />\n\n      {!item.closed && item.points.map((p, index) => <PolygonPointView item={p} index={index} />)}\n      {item.closed && item.selected && item.points.map((p, index) => <PolygonPointView item={p} index={index} />)}\n    </Fragment>\n  );\n};\n\nconst HtxPolygon = inject(\"store\")(observer(HtxPolygonView));\n\nRegistry.addTag(\"polygonregion\", PolygonRegionModel, HtxPolygon);\n\nexport { PolygonRegionModel, HtxPolygon };\n","import React, { Component } from \"react\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getType, getParentOfType, destroy, getRoot } from \"mobx-state-tree\";\n\nimport { Stage, Layer, Rect, Text, Transformer } from \"react-konva\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, cloneNode, restoreNewsnapshot } from \"../../core/Helpers\";\nimport Tree from \"../../core/Tree\";\n\n// import { ImageEditorModel } from './ImageEditor';\nimport { RectRegionModel } from \"./RectRegion\";\nimport { PolygonRegionModel } from \"./PolygonRegion\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Image tag shows an image on the page\n * @example\n * <View>\n *   <Image value=\"$url\"></Image>\n * </View>\n * @example\n * <View>\n *   <Image value=\"https://imgflip.com/s/meme/Leonardo-Dicaprio-Cheers.jpg\" width=\"100%\" maxWidth=\"750px\"></Image>\n * </View>\n * @name Image\n * @param {string} name name of the element\n * @param {string} value value\n * @param {string=} [width=100%] image width\n * @param {string=} [maxWidth=750px] image maximum width\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  resize: types.maybeNull(types.string),\n  width: types.optional(types.string, \"100%\"),\n  maxwidth: types.optional(types.string, \"750px\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"image\",\n    _value: types.optional(types.string, \"\"),\n    stageWidth: types.optional(types.integer, 1),\n    stageHeight: types.optional(types.integer, 1),\n    naturalWidth: types.optional(types.integer, 1),\n    naturalHeight: types.optional(types.integer, 1),\n    selectedShape: types.safeReference(types.union(RectRegionModel, PolygonRegionModel)),\n    activePolygon: types.maybeNull(types.safeReference(PolygonRegionModel)),\n    shapes: types.array(types.union(RectRegionModel, PolygonRegionModel), []),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    controlButton() {\n      const names = self.completion.toNames.get(self.name);\n      return names[0];\n    },\n\n    controlButtonType() {\n      const name = self.controlButton();\n      return getType(name).name;\n    },\n\n    // get editor() {\n    //     try {\n    //         return getParentOfType(self, ImageEditorModel);\n    //     } catch (err) {\n    //         return null;\n    //     }\n    // },\n\n    // get isInsideEditor() {\n    //     return (self.editor !== null);\n    // }\n  }))\n  .actions(self => ({\n    setActivePolygon(poly) {\n      self.activePolygon = poly;\n    },\n\n    updateIE(ev) {\n      const { width, height, naturalWidth, naturalHeight } = ev.target;\n\n      if (self.hasStates) {\n        self.naturalWidth = naturalWidth;\n        self.naturalHeight = naturalHeight;\n        self.stageWidth = width;\n        self.stageHeight = height;\n\n        // const IE = getParentOfType(self, ImageEditorModel);\n        // IE.updateStageSize(width, height);\n        self.shapes.forEach(s => s.updateImageSize(width / naturalWidth, height / naturalHeight, width, height));\n      }\n    },\n\n    _setStageRef(ref) {\n      self._stageRef = ref;\n    },\n\n    _deleteSelectedShape() {\n      if (self.selectedShape) destroy(self.selectedShape);\n    },\n\n    setSelected(shape) {\n      self.selectedShape = shape;\n    },\n\n    _addShape(shape) {\n      self.shapes.push(shape);\n      self.completion.addRegion(shape);\n      self.setSelected(shape.id);\n      shape.selectRegion();\n    },\n\n    onImageClick(ev) {\n      // console.log(self.controlButton());\n      if (self.controlButtonType() === \"RectangleModel\") {\n        self._addRect(ev);\n      } else if (self.controlButtonType() === \"PolygonModel\") {\n        self._addPoly(ev);\n      } else if (self.controlButtonType() === \"PolygonLabelsModel\") {\n        if (self.activePolygon && !self.activePolygon.closed) {\n          self._addPoly(ev);\n        } else {\n          const states = self.completion.toNames.get(self.name);\n          const activeStates = states ? states.filter(c => c.isSelected == true) : null;\n          const clonedStates = activeStates ? activeStates.map(s => cloneNode(s)) : null;\n\n          if (clonedStates.length === 0) return;\n\n          self._addPoly(ev, clonedStates);\n\n          activeStates && activeStates.forEach(s => s.unselectAll());\n        }\n      } else if (self.controlButtonType() === \"RectangleLabelsModel\") {\n        const states = self.completion.toNames.get(self.name);\n        const activeStates = states ? states.filter(c => c.isSelected === true) : null;\n        const clonedStates = activeStates ? activeStates.map(s => cloneNode(s)) : null;\n\n        // don't allow to add RectangleLabel when there is no label selected\n        if (clonedStates.length === 0) return;\n\n        self._addRect(ev, clonedStates);\n\n        activeStates && activeStates.forEach(s => s.unselectAll());\n      }\n    },\n\n    _addRect(ev, states) {\n      // const _states = self.activeStates();\n      // const states = (_states) ? _states.map(s => cloneNode(s)) : null;\n      // const states = null;\n\n      // const image = self.completion.names.get(self.toname);\n\n      const iw = 200;\n      const ih = 200;\n\n      // console.log(states.toJSON());\n\n      // based on image width and height we can place rect somewhere\n      // in the center\n      const sw = 100;\n      const sh = 100;\n      // const name = guidGenerator();\n\n      let stroke = self.controlButton().rectstrokecolor;\n      // let stroke = self.editor.rectstrokecolor;\n      // const states = self.states;\n      // TODO you may need to filter this states, check Text.js\n      if (states && states.length) {\n        // console.log(states[0].toJSON());\n        // console.log(states);\n        stroke = states[0].getSelectedColor();\n      }\n\n      const wp = self.stageWidth / self.naturalWidth;\n      const hp = self.stageHeight / self.naturalHeight;\n\n      const wx = ev.evt.offsetX;\n      const wy = ev.evt.offsetY;\n\n      self.__addRect(Math.floor(wx - sw / 2), Math.floor(wy - sh / 2), sw, sh, stroke, states);\n    },\n\n    __addRect(x, y, sw, sh, stroke, states, coordstype) {\n      const c = self.controlButton();\n      const rect = RectRegionModel.create({\n        id: guidGenerator(),\n\n        x: x,\n        y: y,\n\n        width: sw,\n        height: sh,\n\n        opacity: parseFloat(c.opacity),\n        fillcolor: c.fillcolor,\n\n        strokewidth: parseInt(c.strokewidth),\n        strokecolor: stroke,\n\n        states: states,\n\n        coordstype: coordstype,\n      });\n\n      self._addShape(rect);\n    },\n\n    _addPoly(ev, states) {\n      let poly;\n      const w = 10;\n\n      if (self.activePolygon && self.activePolygon.closed) {\n        self.setActivePolygon(null);\n        return;\n      }\n\n      if (self.completion.dragMode === false) {\n        if (self.activePolygon) {\n          poly = self.activePolygon;\n        } else {\n          const c = self.controlButton();\n          poly = PolygonRegionModel.create({\n            id: guidGenerator(),\n            x: ev.evt.offsetX - w / 2,\n            y: ev.evt.offsetY - w / 2,\n            width: w,\n            height: w,\n\n            opacity: parseFloat(c.opacity),\n            fillcolor: c.fillcolor,\n\n            strokewidth: parseInt(c.strokewidth),\n            strokecolor: c.strokecolor,\n\n            pointsize: c.pointsize,\n            pointstyle: c.pointstyle,\n\n            states: states,\n          });\n\n          self.setActivePolygon(poly);\n\n          self.shapes.push(poly);\n          self.completion.addRegion(poly);\n\n          // self._addShape(poly);\n        }\n\n        poly.addPoint(ev.evt.offsetX - w / 2, ev.evt.offsetY - w / 2);\n\n        const stage = self._stageRef;\n        stage.container().style.cursor = \"default\";\n      }\n    },\n\n    toStateJSON() {\n      return self.shapes.map(r => r.toStateJSON());\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const params = [\"choices\", \"shape\", \"rectanglelabels\"];\n\n      params.forEach(item => {\n        if (!item in obj.value) {\n          throw new Error(\"Not valid param\");\n        }\n      });\n\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.rectanglelabels) {\n        const states = restoreNewsnapshot(fromModel);\n\n        states.fromStateJSON(obj);\n\n        self.__addRect(\n          obj.value.x,\n          obj.value.y,\n          obj.value.width,\n          obj.value.height,\n          states.getSelectedColor(),\n          [states],\n          \"perc\",\n        );\n      }\n\n      if (obj.value.shape) {\n        let modifySnap;\n        let shapeModel;\n\n        if (obj.from_name !== obj.to_name) {\n          modifySnap = restoreNewsnapshot(fromModel);\n          shapeModel = modifySnap.fromStateJSON(obj);\n          self.shapes.push(shapeModel);\n        }\n      }\n    },\n  }));\n\nconst ImageModel = types.compose(\n  \"ImageModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nclass TransformerComponent extends React.Component {\n  componentDidMount() {\n    this.checkNode();\n  }\n\n  componentDidUpdate() {\n    this.checkNode();\n  }\n\n  checkNode() {\n    // here we need to manually attach or detach Transformer node\n    const stage = this.transformer.getStage();\n    const { selectedShapeName } = this.props;\n\n    if (!selectedShapeName) {\n      this.transformer.detach();\n      this.transformer.getLayer().batchDraw();\n      return;\n    }\n\n    const selectedNode = stage.findOne(\".\" + selectedShapeName.id);\n    // do nothing if selected node is already attached\n    if (selectedNode === this.transformer.node()) {\n      return;\n    }\n\n    if (selectedNode) {\n      // attach to another node\n      this.transformer.attachTo(selectedNode);\n    } else {\n      // remove transformer\n      this.transformer.detach();\n    }\n    this.transformer.getLayer().batchDraw();\n  }\n\n  render() {\n    return (\n      <Transformer\n        resizeEnabled={true}\n        rotateEnabled={this.props.rotateEnabled}\n        anchorSize={8}\n        // borderEnabled={false}\n        // borderDash={[]}\n        // anchorCornerRadius={5}\n        // enabledAnchors={['top-left', 'top-right', 'bottom-left', 'bottom-right']}\n        ref={node => {\n          this.transformer = node;\n        }}\n      />\n    );\n  }\n}\n\nclass HtxImageView extends Component {\n  handleDblClick = ev => {\n    // const item = this.props.item;\n    // const poly = item.activePolygon;\n    // if (poly)\n    //     poly.closePoly();\n    // item.setActivePolygon(null);\n  };\n\n  handleOnClick = ev => {\n    const { item } = this.props;\n\n    // TODO this is a hack, for some reason stopPropagation is not\n    // working. And when you try to select a Rectangle the event\n    // propagates to Image as well. Which calls this function even\n    // if you click inside Rectangle. Current workaround is to\n    // check if our click lands inside the Rectangle/Polygon or\n    // not :-/\n    // const { offsetX, offsetY } = ev.evt;\n    // const shape = item.shapes.find(sh => sh.coordsInside(offsetX, offsetY));\n\n    // if (shape)\n    //     return;\n\n    return item.onImageClick(ev);\n  };\n\n  handleStageMouseDown = e => {\n    if (e.target === e.target.getStage()) {\n      return;\n    }\n\n    // clicked on transformer - do nothing\n    const clickedOnTransformer = e.target.getParent().className === \"Transformer\";\n    if (clickedOnTransformer) {\n      return;\n    }\n  };\n\n  render() {\n    // const width = 750;\n    const { item, store } = this.props;\n\n    // TODO fix me\n    if (!store.task) return null;\n\n    const divStyle = {};\n    const style = {\n      width: item.width,\n      maxWidth: item.maxwidth,\n    };\n\n    if (item.resize) {\n      style[\"transform\"] = \"scale(\" + item.resize + \", \" + item.resize + \")\";\n    }\n\n    if (item.hasStates) {\n      divStyle[\"position\"] = \"absolute\";\n      // const rotateEnabled = (item.editor.rectcanrotate == \"true\") ? true : false;\n      const rotateEnabled = item.controlButton().canrotate === \"true\" ? true : false;\n\n      return (\n        <div style={{ marginBottom: \"1em\", marginTop: \"1em\" }}>\n          <div style={divStyle}>\n            <img style={style} src={item._value} onLoad={item.updateIE} />\n          </div>\n          <Stage\n            ref={ref => {\n              item._setStageRef(ref);\n            }}\n            width={item.stageWidth}\n            height={item.stageHeight}\n            onDblClick={this.handleDblClick}\n            onClick={this.handleOnClick}\n            onMouseDown={this.handleStageMouseDown}\n          >\n            <Layer>\n              {item.shapes.map(s => {\n                return Tree.renderItem(s);\n              })}\n              <TransformerComponent rotateEnabled={rotateEnabled} selectedShapeName={this.props.item.selectedShape} />\n            </Layer>\n          </Stage>\n        </div>\n      );\n    } else {\n      divStyle[\"marginTop\"] = \"1em\";\n      return (\n        <div style={divStyle}>\n          <img style={style} src={item._value} onLoad={item.updateIE} />\n        </div>\n      );\n    }\n  }\n}\n\nconst HtxImage = inject(\"store\")(observer(HtxImageView));\n\nRegistry.addTag(\"image\", ImageModel, HtxImage);\n\nexport { ImageModel, HtxImage };\n","/**\n * Class for text data with 4 params:\n * start -> int: the index of the character where the range start.\n * end -> int: the index of the character where the range stop.\n * text -> string: the highlighted text.\n * data -> object: extra data (the props of the highlight component)\n */\nexport default class Range {\n  constructor(start, end, text, data = {}) {\n    this.start = start;\n    this.end = end;\n    this.text = text;\n    this.data = data;\n  }\n}\n","import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nexport default class TextNode extends Component {\n  render() {\n    return (\n      <span\n        data-position={this.props.position}\n        overlap={this.props.overlap}\n        key={this.props.keyNode ? this.props.keyNode : null}\n        style={this.props.style}\n      >\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nTextNode.propTypes = {\n  position: PropTypes.number,\n  overlap: PropTypes.string,\n  key: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Utils from \"../../utils\";\nimport TextNode from \"../TextNode/TextNode\";\n\nconst HtxTextNodeView = ({ store, range, id, highlightStyle, style, charIndex, children, overlap }) => {\n  const getStyle = range => (range ? highlightStyle : style);\n  const getRangeKey = () => `${id}-${range.start}-${charIndex}`;\n  const getNormalKey = () => `${id}-${charIndex}`;\n  const getKey = range => (range ? getRangeKey() : getNormalKey());\n\n  let wrapper = (\n    <span data-position={charIndex} key={getKey(range)} style={getStyle(range)}>\n      {children}\n    </span>\n  );\n\n  if (overlap && overlap.length) {\n    let bg;\n\n    if (range.states) {\n      range.states.map(i => {\n        bg = Utils.Colors.convertToRGBA(i.getSelectedColor(), 0.3);\n      });\n    }\n\n    store.completionStore.selected.regionStore.regions.map(i => {\n      if (i.selected) {\n        overlap.map(overlapItem => {\n          if (overlapItem === i.id) {\n            bg = \"#ff4d4f\";\n          }\n        });\n      }\n\n      if (i.highlighted && overlap.includes(i.id)) {\n        bg = \"#ff4d4f\";\n      }\n    });\n\n    wrapper = overlap.reduceRight((value, key) => {\n      return (\n        <TextNode\n          style={{ background: bg, padding: \"2px 0\" }}\n          position={charIndex}\n          overlap={key}\n          keyNode={getKey(range)}\n        >\n          {value}\n        </TextNode>\n      );\n    }, children);\n  }\n\n  return wrapper;\n};\n\nconst HtxTextNode = inject(\"store\")(observer(HtxTextNodeView));\nexport { HtxTextNode };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { HtxTextNode } from \"./Node\";\n\n/**\n * Node for URL\n * @param {*} props\n */\nconst UrlNode = props => {\n  const style = { wordWrap: \"break-word\" };\n\n  return (\n    <HtxTextNode\n      id={props.id}\n      highlightStyle={Object.assign({}, style, props.highlightStyle)}\n      charIndex={props.charIndex}\n      range={props.range}\n      overlap={props.overlap}\n      style={style}\n    >\n      <a data-position={props.charIndex + props.url.length} href={props.url} target=\"blank\">\n        {props.url}\n      </a>\n    </HtxTextNode>\n  );\n};\n\nUrlNode.propTypes = {\n  highlightStyle: PropTypes.object,\n  id: PropTypes.string,\n  charIndex: PropTypes.number,\n  range: PropTypes.object,\n  url: PropTypes.string,\n};\n\nexport default UrlNode;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport { HtxTextNode } from \"./Node\";\n\n/**\n * Node for Emoji\n * @param {*} props\n */\nconst EmojiNode = props => {\n  return (\n    <HtxTextNode\n      id={props.id}\n      highlightStyle={props.highlightStyle}\n      charIndex={props.charIndex}\n      range={props.range}\n      overlap={props.overlap}\n    >\n      {`${props.text[props.charIndex]}${props.text[props.charIndex + 1]}`}\n    </HtxTextNode>\n  );\n};\n\nEmojiNode.propTypes = {\n  id: PropTypes.string.isRequired,\n  highlightStyle: PropTypes.object,\n  charIndex: PropTypes.number.isRequired,\n  range: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  overlap: PropTypes.array,\n  text: PropTypes.string.isRequired,\n};\n\nexport default EmojiNode;\n","import emojiRegex from \"emoji-regex\";\nimport React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport Utils from \"../../utils\";\nimport Range from \"./Range\";\nimport { HtxTextNode } from \"./Node\";\nimport UrlNode from \"./UrlNode\";\nimport EmojiNode from \"./EmojiNode\";\nimport styles from \"./TextHighlight.module.scss\";\n\nclass TextHighlight extends Component {\n  constructor() {\n    super();\n\n    this.dismissMouseUp = 0;\n  }\n\n  /**\n   * Return first ok element\n   */\n  getRange(charIndex) {\n    if (this.props.ranges && this.props.ranges.length) {\n      return this.props.ranges.find(range => charIndex >= range.start && charIndex <= range.end);\n    }\n  }\n\n  /**\n   * Function when the user mouse is over an highlighted text\n   */\n  onMouseOverHighlightedWord(range, visible) {\n    if (visible && this.props.onMouseOverHighlightedWord) {\n      this.props.onMouseOverHighlightedWord(range);\n    }\n  }\n\n  getLetterNode(charIndex, range) {\n    /**\n     * Current symbol\n     */\n    const char = this.props.text[charIndex];\n\n    let nl;\n\n    /**\n     * Line break\n     */\n    if (char && char.charCodeAt()) {\n      nl = char.charCodeAt(0) === 10;\n    }\n\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <HtxTextNode\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        charIndex={charIndex}\n        key={`${this.props.id}-${charIndex}`}\n        highlightStyle={this.props.highlightStyle}\n        // style={{padding: \"2px 0\", background: \"linear-gradient(180deg, #fdcd3b 60%, #ffed4b 60%, red 9%)\"}}\n      >\n        {nl ? <br /> : char}\n      </HtxTextNode>\n    );\n  }\n\n  getEmojiNode(charIndex, range) {\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <EmojiNode\n        text={this.props.text}\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        key={`${this.props.id}-emoji-${charIndex}`}\n        charIndex={charIndex}\n        highlightStyle={this.props.highlightStyle}\n      />\n    );\n  }\n\n  getUrlNode(charIndex, range, url) {\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <UrlNode\n        url={url}\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        key={`${this.props.id}-url-${charIndex}`}\n        charIndex={charIndex}\n        highlightStyle={this.props.highlightStyle}\n      />\n    );\n  }\n\n  mouseEvent() {\n    if (!this.props.enabled) {\n      return false;\n    }\n\n    let text = \"\";\n\n    if (window.getSelection) {\n      /**\n       * Get highlited text\n       * Tip: with helper elements (hints)\n       */\n      // text = window.getSelection().toString();\n\n      if (window.getSelection().type === \"None\") return;\n\n      /**\n       * Create clone range\n       */\n      let cloneCont = window\n        .getSelection()\n        .getRangeAt(0)\n        .cloneRange();\n\n      /**\n       * The Range.cloneContents() returns a DocumentFragment copying the objects of type Node included in the Range.\n       */\n      let selectionContents = cloneCont.cloneContents();\n      /**\n       * Create virtual div with text\n       */\n      let virtualDiv = document.createElement(\"div\");\n\n      virtualDiv.appendChild(selectionContents);\n\n      let elementsWithSup = virtualDiv.getElementsByTagName(\"sup\");\n\n      if (elementsWithSup.length > 0) {\n        for (let i = 0; i < elementsWithSup.length; i++) {\n          elementsWithSup[i].innerText = \"\";\n        }\n        text = virtualDiv.innerText;\n      } else {\n        text = virtualDiv.innerText;\n      }\n    } else if (document.selection && document.selection.type !== \"Control\") {\n      text = document.selection.createRange().text;\n    }\n\n    if (!text || !text.length) return false;\n\n    const range = window.getSelection().getRangeAt(0);\n\n    /**\n     * Check for hint\n     */\n    if (range.startContainer.parentNode.dataset.hint || range.endContainer.parentNode.dataset.hint) return;\n\n    /**\n     * Start position of selected item\n     */\n    const startContainerPosition = parseInt(range.startContainer.parentNode.dataset.position);\n    /**\n     * End position of selected item\n     */\n    const endContainerPosition = parseInt(range.endContainer.parentNode.dataset.position);\n\n    let startHL = startContainerPosition < endContainerPosition ? startContainerPosition : endContainerPosition;\n    let endHL = startContainerPosition < endContainerPosition ? endContainerPosition : startContainerPosition;\n\n    const rangeObj = new Range(startHL, endHL, text, {\n      ...this.props,\n      ranges: undefined,\n    });\n\n    this.props.onTextHighlighted(rangeObj);\n  }\n\n  /**\n   *\n   * @param {*} event\n   */\n  onMouseUp(event) {\n    this.mouseEvent.bind(this)();\n\n  }\n\n  onMouseDown(event) {\n    // console.log(event)\n  }\n\n  onMouseEnter(event) {\n    // console.log(event)\n  }\n\n  /**\n   * Double click on text\n   * @param {*} event\n   */\n  onDoubleClick(event) {\n    // WARN\n    // event.stopPropagation();\n    // this.doucleckicked = true;\n    // this.mouseEvent.bind(this)();\n  }\n\n  /**\n   * @param {object} letterGroup All marked sections of text\n   * @param {object} range Range of marked section\n   * @param {number} textCharIndex The last number of selection\n   * @param {function} onMouseOverHighlightedWord\n   */\n  rangeRenderer(letterGroup, range, textCharIndex, onMouseOverHighlightedWord) {\n    if (this.props.rangeRenderer) {\n      return this.props.rangeRenderer(letterGroup, range, textCharIndex, onMouseOverHighlightedWord);\n    }\n\n    return letterGroup;\n  }\n\n  getNode(i, range, text, url, isEmoji) {\n    if (url.length) {\n      return this.getUrlNode(i, range, url);\n    } else if (isEmoji) {\n      return this.getEmojiNode(i, range);\n    }\n\n    return this.getLetterNode(i, range);\n  }\n\n  getRanges() {\n    /**\n     * Text with nodes\n     */\n    const newText = [];\n\n    let lastRange;\n\n    /**\n     * For all the characters on the text\n     */\n    for (let textCharIndex = 0; textCharIndex < this.props.text.length; textCharIndex++) {\n      /**\n       * Get range text\n       */\n      const range = this.getRange(textCharIndex);\n\n      /**\n       * Check characters for URL\n       */\n      const url = Utils.Checkers.getUrl(textCharIndex, this.props.text);\n\n      /**\n       * Check characters for emoji\n       */\n      const isEmoji = emojiRegex().test(this.props.text[textCharIndex] + this.props.text[textCharIndex + 1]);\n\n      /**\n       * Get the current character node\n       */\n      const node = this.getNode(textCharIndex, range, this.props.text, url, isEmoji);\n\n      /**\n       * If the next node is an url one, we fast forward to the end of it\n       */\n      if (url.length) {\n        textCharIndex += url.length - 1;\n      } else if (isEmoji) {\n        /**\n         * Because an emoji is composed of 2 chars\n         */\n        textCharIndex++;\n      }\n\n      if (!range) {\n        newText.push(node);\n        continue;\n      }\n\n      /**\n       * If the char is in range\n       */\n      lastRange = range;\n\n      // console.log(this.props.text[lastRange.start], this.props.text[lastRange.end])\n\n      /**\n       * We put the first range node on the array\n       */\n      const letterGroup = [node];\n\n      /**\n       * For all the characters in the highlighted range\n       */\n      let rangeCharIndex = textCharIndex + 1;\n\n      // if (rangeCharIndex >= parseInt(range.start) && rangeCharIndex <= parseInt(range.end)) {\n      //   console.log(this.props.text[parseInt(range.end)])\n      // }\n      // console.log(textCharIndex, range.start, range.end)\n\n      for (; rangeCharIndex < parseInt(range.end) + 1; rangeCharIndex++) {\n        /**\n         * Emoji handler\n         */\n        const isEmoji = emojiRegex().test(`${this.props.text[rangeCharIndex]}${this.props.text[rangeCharIndex + 1]}`);\n\n        if (isEmoji) {\n          letterGroup.push(this.getEmojiNode(rangeCharIndex, range));\n          // Because an emoji is composed of 2 chars\n          rangeCharIndex++;\n        } else {\n          letterGroup.push(this.getLetterNode(rangeCharIndex, range));\n        }\n\n        textCharIndex = rangeCharIndex;\n      }\n\n      newText.push(this.rangeRenderer(letterGroup, range, textCharIndex, this.onMouseOverHighlightedWord.bind(this)));\n    }\n\n    if (lastRange) {\n      // Callback function\n      this.onMouseOverHighlightedWord(lastRange, true);\n    }\n\n    return newText;\n  }\n\n  render() {\n    const newText = this.getRanges();\n\n    return (\n      <div\n        className={styles.block}\n        style={this.props.style}\n        onMouseUp={this.onMouseUp.bind(this)}\n        onMouseDown={this.onMouseDown.bind(this)}\n        onMouseEnter={this.onMouseEnter.bind(this)}\n        onDoubleClick={this.onDoubleClick.bind(this)}\n      >\n        {newText}\n      </div>\n    );\n  }\n}\n\nexport default observer(TextHighlight);\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { TextModel } from \"./Text\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport Hint from \"../../components/Hint/Hint\";\nimport Utils from \"../../utils\";\n\nimport styles from \"./TextRegion/TextRegion.module.scss\";\n\nconst Model = types\n  .model(\"TextRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"textrange\",\n    start: types.integer,\n    end: types.integer,\n    text: types.string,\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel))),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    highlightStates() {},\n\n    /**\n     *\n     */\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.pid,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"region\",\n          // text: parent.text,\n          value: {\n            start: self.start,\n            end: self.end,\n            text: self.text,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst TextRegionModel = types.compose(\n  \"TextRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\n/**\n * Region state hint\n * @param {*} props\n */\nconst RegionState = props => {\n  const localState = props.state;\n\n  /**\n   * Get name of label\n   */\n  const selectedString = localState.getSelectedString();\n  const selectedColor = Utils.Colors.convertToRGBA(localState.getSelectedColor(), 0.3);\n  let style = {\n    background: selectedColor,\n  };\n\n  if (props.style) style = { ...style, outline: props.style.outline };\n\n  return (\n    <Hint className={styles.state} style={style}>\n      <span data-hint={true}>&nbsp;[{selectedString}]</span>\n    </Hint>\n  );\n};\n\nconst HtxTextRegionView = ({ store, item, letterGroup, range, textCharIndex, onMouseOverHighlightedWord }) => {\n  /**\n   * Get color of label\n   */\n  let labelColor = \"rgba(0, 0, 255, 0.1)\";\n\n  if (range.states) {\n    labelColor = range.states.map(s => {\n      return s.getSelectedColor();\n    });\n  }\n\n  /**\n   * TODO\n   * Update function to all formats\n   */\n  if (labelColor.length !== 0) {\n    labelColor = Utils.Colors.convertToRGBA(labelColor[0], 0.3);\n  }\n\n  let markStyle = {\n    padding: \"2px 0px\",\n    position: \"relative\",\n    borderRadius: \"2px\",\n    cursor: store.completionStore.selected.relationMode ? \"crosshair\" : \"pointer\",\n  };\n\n  let regionStates = [];\n\n  if ((range.states && range.states.length) > 0) {\n    range.states.map(state => {\n      regionStates.push(\n        <RegionState\n          key={range.id}\n          state={state}\n          bg={labelColor}\n          hover={store.completionStore.selected.relationMode ? true : false}\n          selected={range.selected}\n          style={range.highlighted ? { outline: \"2px solid red\" } : null}\n        />,\n      );\n    });\n  }\n\n  /**\n   * Without label\n   */\n  if (!regionStates.length) {\n    markStyle = {\n      ...markStyle,\n      background: \"rgba(0, 0, 255, 0.1)\",\n    };\n  }\n\n  return (\n    <span\n      style={markStyle}\n      onClick={range.onClickRegion}\n      onMouseOver={() => {\n        if (store.completionStore.selected.relationMode) {\n          range.setHighlight(true);\n        }\n      }}\n      onMouseOut={() => {\n        if (store.completionStore.selected.relationMode) {\n          range.setHighlight(false);\n        }\n      }}\n    >\n      {letterGroup}\n      {regionStates}\n    </span>\n  );\n};\n\nconst HtxTextRegion = inject(\"store\")(observer(HtxTextRegionView));\n\nRegistry.addTag(\"textrange\", TextRegionModel, HtxTextRegion);\n\nexport { TextRegionModel, HtxTextRegion };\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getType, getRoot } from \"mobx-state-tree\";\n\nimport { cloneNode } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport TextHighlight from \"../../components/TextHighlight/TextHighlight\";\nimport { runTemplate } from \"../../core/Template\";\nimport { TextRegionModel, HtxTextRegion } from \"./TextRegion\";\n\n/**\n * Text tag shows a text that can be labeled\n * @example\n * <Text name=\"text-1\" value=\"$text\"></Text>\n * @name Text\n * @param {string} name of the element\n * @param {string} value of the element\n * @param {boolean} selelectWithoutLabel controls if text can be selected without any labels selected\n */\nconst TagAttrs = types.model(\"TextModel\", {\n  name: types.maybeNull(types.string),\n  // text: types.maybeNull(types.optional(types.string, \"Please set \\\"value\\\" attribute of Text\")),\n  value: types.maybeNull(types.string),\n  selelectwithoutlabel: types.optional(types.string, \"false\"),\n\n  hidden: types.optional(types.enumeration([\"true\", \"false\"]), \"false\"),\n  /**\n   * If we allow selecting parts of words of we select whole word only\n   */\n  adjustselection: types.optional(types.string, \"true\"),\n  selectionenabled: types.optional(types.string, \"true\"),\n});\n\nconst Model = types\n  .model(\"TextModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"text\",\n    regions: types.array(TextRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states\n        ? states.filter(s => s.isSelected && (getType(s).name === \"LabelsModel\" || getType(s).name === \"RatingModel\"))\n        : null;\n    },\n  }))\n  .actions(self => ({\n    remove() {\n      // if (self.generated) {\n      //     const m = Registry.getModelByTag('textarea');\n      //     const ta = getParentOfType(self, m);\n      //     ta.deleteText(self);\n      // }\n    },\n\n    findRegion(start, end) {\n      const immutableRange = self.regions.find(r => r.start === start && r.end === end);\n      return immutableRange;\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj);\n    },\n\n    _addRegion(params) {\n      const r = TextRegionModel.create(params);\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(range) {\n      const states = self.activeStates();\n      const clonedStates = states\n        ? states.map(s => {\n            return cloneNode(s);\n          })\n        : null;\n\n      /**\n       * Selelect without label\n       * Default: false\n       */\n      if (self.selelectwithoutlabel === \"false\" && !clonedStates.length) return null;\n\n      const r = self._addRegion({\n        start: range.start,\n        end: range.end,\n        text: range.text,\n        states: clonedStates, // tl.cloneActiveStates()\n      });\n\n      states &&\n        states.forEach(s => {\n          return s.unselectAll();\n        });\n\n      return r;\n    },\n\n    /**\n     * Return JSON\n     */\n    toStateJSON() {\n      const objectsToReturn = self.regions.map(r => r.toStateJSON());\n      return objectsToReturn;\n    },\n\n    /**\n     *\n     * @param {*} obj\n     * @param {*} fromModel\n     */\n    fromStateJSON(obj, fromModel) {\n      let r;\n\n      const tree = {\n        pid: obj.id,\n        start: obj.value.start,\n        end: obj.value.end,\n        text: obj.value.text,\n        normalization: obj.normalization,\n      };\n\n      if (fromModel.type === \"choices\") {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n        return;\n      }\n\n      if (obj.from_name === obj.to_name) {\n        r = self._addRegion(tree);\n      } else {\n        const region = self.findRegion(obj.value.start, obj.value.end);\n        const m = restoreNewsnapshot(fromModel);\n\n        // update state\n        m.fromStateJSON(obj);\n\n        if (!region) {\n          tree.states = [m];\n          r = self._addRegion(tree);\n        } else {\n          region.states.push(m);\n        }\n      }\n\n      return r;\n    },\n  }));\n\nconst TextModel = types.compose(\n  \"TextModel\",\n  TagAttrs,\n  Model,\n);\n\nclass HtxTextView extends Component {\n  renderRegion(letterGroup, range, textCharIndex, onMouseOverHighlightedWord) {\n    return (\n      <HtxTextRegion\n        key={range.id}\n        store={this.props.store}\n        item={this.props.item}\n        letterGroup={letterGroup}\n        range={range}\n        selected={range.selected}\n        textCharIndex={textCharIndex}\n        onMouseOverHighlightedWord={onMouseOverHighlightedWord}\n      />\n    );\n  }\n\n  render() {\n    const self = this;\n\n    const { item } = this.props;\n    const style = {};\n    if (item.hidden === \"true\") style[\"display\"] = \"none\";\n\n    return (\n      <div style={style}>\n        <TextHighlight\n          id={item.id}\n          key={item.id}\n          text={item._value}\n          enabled={item.selectionenabled === \"true\" ? true : false}\n          ranges={item.regions}\n          adjustSelection={item.adjustselection}\n          rangeRenderer={self.renderRegion.bind(this)}\n          onTextHighlighted={range => {\n            item.addRegion(range);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst HtxText = inject(\"store\")(observer(HtxTextView));\n\nRegistry.addTag(\"text\", TextModel, HtxText);\n\nexport { TextModel, HtxText };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType } from \"mobx-state-tree\";\nimport { Checkbox, Form } from \"semantic-ui-react\";\n\nimport { ChoicesModel } from \"./Choices\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\n\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\nimport Hint from \"../../components/Hint/Hint\";\nimport ChoiceComponent from '../../components/Choice/Choice';\n\n/**\n * Choice tag represents a single choice\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single\">\n *     <Choice alias=\"M\" value=\"Male\"></Choice>\n *     <Choice alias=\"F\" value=\"Female\"></Choice>\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\"></Text>\n * </View>\n * @name Choice\n * @param {string} value label value\n * @param {boolean=} selected If this label should be preselected\n * @param {string=} alias label alias\n * @param {string=} hotkey hokey\n */\nconst TagAttrs = types.model({\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  style: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"choice\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get isCheckbox() {\n      const choice = getParentOfType(self, ChoicesModel).choice;\n      return choice === \"multiple\" || choice === \"single\";\n    },\n\n    get name() {\n      return getParentOfType(self, ChoicesModel).name;\n    },\n  }))\n  .actions(self => ({\n    toggleSelected() {\n      const choice = getParentOfType(self, ChoicesModel);\n\n      choice.shouldBeUnselected && choice.unselectAll();\n\n      self.markSelected(!self.selected);\n    },\n\n    markSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst ChoiceModel = types.compose(\n  \"ChoiceModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxChoice = inject(\"store\")(\n  observer(({ item, store }) => {\n    let style = {};\n\n    if (item.style) style = Tree.cssConverter(item.style);\n\n    if (item.isCheckbox) {\n      const cStyle = Object.assign({ marginRight: \"1em\", display: \"flex\", alignItems: \"center\" }, style);\n\n      return (\n        <div style={cStyle}>\n          <Checkbox\n            name={item._value}\n            label={item._value}\n            onChange={ev => {\n              item.toggleSelected();\n            }}\n            checked={item.selected}\n          />\n          {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n        </div>\n      );\n    } else {\n      const label = (\n        <label>\n          {item._value}\n          {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n        </label>\n      );\n\n      return (\n        <div style={style}>\n          <Form.Radio\n            label={label}\n            value={item._value}\n            style={{ display: \"inline-block\" }}\n            checked={item.selected}\n            onChange={ev => {\n              item.toggleSelected();\n            }}\n          />\n        </div>\n      );\n    }\n    // return (\n    //   <ChoiceComponent\n    //     name={item._value}\n    //     onChange={ev => {\n    //       item.toggleSelected();\n    //     }}\n    //     hint={store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && `${item.hotkey}`}\n    //     value={item._value}\n    //     checked={item.selected}\n    //   >\n    //     {item._value}\n    //   </ChoiceComponent>\n    // );\n  }),\n);\n\nRegistry.addTag(\"choice\", ChoiceModel, HtxChoice);\n\nexport { HtxChoice, ChoiceModel };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Radio } from \"antd\";\n\nimport Hint from \"../Hint/Hint\";\n\n/**\n * Choice Component\n */\nexport default class ChoiceComponent extends React.Component {\n  render() {\n    let hint;\n\n    if (this.props.hint) {\n      hint = <Hint>[{this.props.hint}]</Hint>;\n    }\n\n    return (\n      <Radio\n        value={this.props.value}\n        onChange={this.props.onChange}\n        checked={this.props.checked}\n        defaultChecked={this.props.checked}\n      >\n        {this.props.children}\n        {hint}\n      </Radio>\n    );\n  }\n}\n\nChoiceComponent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  value: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  hint: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { Component } from \"react\";\n\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\n\nimport { ChoiceModel } from \"./Choice\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { Form } from \"semantic-ui-react\";\n\n/**\n * Choices tag, create a group of choices, radio, or checkboxes. Shall\n * be used for a single or multi-class classification.\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single-radio\">\n *     <Choice alias=\"M\" value=\"Male\"></Choice>\n *     <Choice alias=\"F\" value=\"Female\"></Choice>\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\"></Text>\n * </View>\n * @name Choices\n * @param {string} name of the group\n * @param {string} toName name of the elements that you want to label\n * @param {single|single-radio|multiple=} [choice=single] single or multi-class\n * @param {boolean} showInline show items in the same visual line\n */\nconst TagAttrs = types.model({\n  name: types.string,\n  toname: types.maybeNull(types.string),\n  showinline: types.optional(types.string, \"false\"),\n  choice: types.optional(types.enumeration([\"single\", \"single-radio\", \"multiple\"]), \"single\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"choices\",\n    children: Types.unionArray([\"choice\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\" || self.choice === \"single-radio\";\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      const names = self.getSelectedNames();\n\n      if (names && names.length) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            choices: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.choices) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.choices.forEach(l => {\n        const choice = self.findLabel(l);\n        if (!choice) throw new Error(\"No label \" + l);\n\n        choice.markSelected(true);\n      });\n    },\n  }));\n\nconst ChoicesModel = types.compose(\n  \"ChoicesModel\",\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\n\nconst HtxChoices = observer(({ item }) => {\n  return (\n    <div style={{ marginTop: \"1em\" }}>\n      <Form>\n        {item.showinline === \"true\" ? (\n          <Form.Group inline>{Tree.renderChildren(item)}</Form.Group>\n        ) : (\n          <Form.Group grouped>{Tree.renderChildren(item)}</Form.Group>\n        )}\n      </Form>\n    </div>\n  );\n});\n\nRegistry.addTag(\"choices\", ChoicesModel, HtxChoices);\n\nexport { HtxChoices, ChoicesModel, TagAttrs };\n","import React, { createRef, Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Message, Icon, Popup, Button, Dropdown, Input } from \"semantic-ui-react\";\n\nimport Types from \"../../core/Types\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport { TextAreaModel } from \"../control/TextArea\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model(\"TextAreaRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"textarearegion\",\n\n    _value: types.string,\n    // states: types.array(types.union(LabelsModel, ChoicesModel)),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextAreaModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }));\n\nconst TextAreaRegionModel = types.compose(\n  \"TextAreaRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxTextAreaRegionView = ({ store, item }) => {\n  let markStyle = {\n    cursor: store.completionStore.selected.relationMode ? \"crosshair\" : \"pointer\",\n  };\n\n  if (item.selected) {\n    markStyle = {\n      ...markStyle,\n      border: \"1px solid red\",\n    };\n  } else if (item.highlighted) {\n    markStyle = {\n      ...markStyle,\n      border: \"2px solid red\",\n    };\n  }\n\n  return (\n    <Message\n      className=\"warning\"\n      style={markStyle}\n      onClick={item.onClickRegion}\n      onMouseOver={() => {\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(true);\n        }\n      }}\n      onMouseOut={() => {\n        /* range.setHighlight(false); */\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(false);\n        }\n      }}\n    >\n      <p>{item._value}</p>\n    </Message>\n  );\n};\n\nconst HtxTextAreaRegion = inject(\"store\")(observer(HtxTextAreaRegionView));\n\nRegistry.addTag(\"textarearegion\", TextAreaRegionModel, HtxTextAreaRegion);\n\nexport { TextAreaRegionModel, HtxTextAreaRegion };\n","import React, { Component } from \"react\";\n\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, destroy, getEnv, flow, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Form, Message } from \"semantic-ui-react\";\n\nimport { renderChildren } from \"../../core/Tree\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\nimport { HtxTextAreaRegion, TextAreaRegionModel } from \"../object/TextAreaRegion\";\n\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * TextArea tag shows the textarea for user input\n * @example\n * <View>\n *   <TextArea name=\"ta\"></TextArea>\n * </View>\n * @name TextArea\n * @param {string} name name of the element\n * @param {string} toName name of the element that you want to label if any\n * @param {string} value\n * @param {string=} label label text\n * @param {string=} placeholder placeholder text\n * @param {string=} maxSubmissions maximum number of submissions\n */\nconst TagAttrs = types.model({\n  allowSubmit: types.optional(types.string, \"true\"),\n  label: types.optional(types.string, \"\"),\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  placeholder: types.maybeNull(types.string),\n  maxsubmissions: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"textarea\",\n    regions: types.array(TextAreaRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get submissionsNum() {\n      return self.regions.length;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get showSubmit() {\n      if (self.maxsubmissions) {\n        const num = parseInt(self.maxsubmissions);\n        return self.submissionsNum < num;\n      } else {\n        return true;\n      }\n    },\n  }))\n  .actions(self => ({\n    setValue(value) {\n      self._value = value;\n    },\n\n    addText(text, pid) {\n      const r = TextAreaRegionModel.create({\n        pid: pid,\n        _value: text,\n      });\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    beforeSend() {\n      if (self._value && self._value.length) {\n        self.addText(self._value);\n      }\n    },\n\n    deleteText(text) {\n      destroy(text);\n    },\n\n    toStateJSON() {\n      const toname = self.toname || self.name;\n\n      return [\n        self.regions.map(r => {\n          return {\n            id: r.pid,\n            from_name: self.name,\n            to_name: toname,\n            type: self.type,\n            value: {\n              text: r._value,\n            },\n          };\n        }),\n      ];\n    },\n\n    fromStateJSON(obj, fromModel) {\n      return self.addText(obj.value.text, obj.id);\n    },\n  }));\n\nconst TextAreaModel = types.compose(\n  \"TextAreaModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxTextArea = observer(({ item }) => {\n  return (\n    <div>\n      {item.regions.length > 0 && (\n        <div style={{ marginTop: \"1em\", marginBottom: \"1em\" }}>\n          {item.regions.map(t => (\n            <HtxTextAreaRegion item={t} />\n          ))}\n        </div>\n      )}\n\n      {item.showSubmit && (\n        <Form\n          onSubmit={ev => {\n            if (item.allowSubmit === \"true\") {\n              item.addText(item._value);\n              item.setValue(\"\");\n            }\n\n            ev.preventDefault();\n            return false;\n          }}\n        >\n          <Form.Input\n            value={item._value}\n            className=\"is-search\"\n            label={item.label}\n            placeholder={item.placeholder}\n            onChange={ev => {\n              const { value } = ev.target;\n              item.setValue(value);\n            }}\n          />\n        </Form>\n      )}\n    </div>\n  );\n});\n\nRegistry.addTag(\"textarea\", TextAreaModel, HtxTextArea);\n\nexport { TextAreaModel, HtxTextArea };\n","import React from \"react\";\n\nimport Registry from \"../../core/Registry\";\nimport { types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { List } from \"semantic-ui-react\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { variableNotation } from \"../../core/Template\";\n\nconst ListItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * List element, used for ranking results. Great choice for recomendation systems.\n * @example\n * <View>\n *  <HyperText value=\"$markup\"></HyperText>\n *  <List name=\"ranker\" value=\"$replies\" elementValue=\"$text\" elementTag=\"Text\" ranked=\"true\" sortedHighlightColor=\"#fcfff5\"></List>\n * </View>\n * @name List\n * @param {string} elementValue lookup key for child object\n * @param {Text|Image|Audio} elementTag element used to render children\n * @param {string} value list value\n * @param {string} name of group\n * @param {string=} sortedHighlightColor color\n * @param {string=} axis axis used for drag-n-drop\n * @param {string=} lockAxis lock axis\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  // ranked: types.optional(types.string, \"true\"),\n  // sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"list\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(ListItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    addRegion(vals, idx) {\n      const reg = ListItemModel.create({\n        value: self.elementvalue,\n        idx: idx,\n        _value: variableNotation(self.elementvalue, vals[idx]),\n      });\n\n      self.regions.push(reg);\n    },\n\n    updateValue(store) {\n      const val = variableNotation(self.value, store.task.dataObj);\n\n      // in case we're in expert mode it will call updateValue\n      // on each new task loaded, therefore we need to remove\n      // previously loaded regions here\n      self.regions = [];\n      val.forEach((v, idx) => self.addRegion(val, idx));\n\n      val.forEach((v, idx) => {\n        v[\"_orig_idx\"] = idx;\n      });\n\n      self._value = val;\n      self.setUpdate();\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex === newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      const map = {};\n\n      self._value.forEach((v, idx) => {\n        map[self.regions[idx].idx] = 1 / (1 + idx);\n      });\n\n      const ranked = Object.keys(map)\n        .sort((a, b) => a - b)\n        .map(function(v) {\n          return map[v];\n        });\n\n      const selected = [];\n      for (let i = 0; i < Object.keys(map).length; i++) {\n        selected[self.regions[i].idx] = self.regions[i].selected ? 1 : 0;\n      }\n\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          weights: ranked,\n          selected: selected,\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const ranked = [];\n      const regions = [];\n      const item_weight = {};\n\n      obj.value.weights.forEach((v, idx) => {\n        if (item_weight[v]) {\n          item_weight[v].push(idx);\n        } else {\n          item_weight[v] = [idx];\n        }\n      });\n\n      Object.keys(item_weight)\n        .sort((a, b) => b - a)\n        .forEach(v => {\n          const idxes = item_weight[v];\n          idxes.forEach(idx => {\n            regions.push(self.regions[idx]);\n            ranked.push(self._value[idx]);\n          });\n        });\n\n      regions.forEach((r, idx) => r.setIdx(idx));\n\n      self._value = ranked;\n      self.regions = regions;\n\n      // self.regions = ranked;\n      self.setUpdate();\n    },\n  }));\n\nconst ListModel = types.compose(\n  \"ListModel\",\n  TagAttrs,\n  Model,\n);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} alt=\"image\" />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxListView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxList = inject(\"store\")(observer(HtxListView));\n\nRegistry.addTag(\"list\", ListModel, HtxList);\n\nexport { ListModel, HtxList };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Registry from \"../../core/Registry\";\nimport { types, getParentOfType, destroy, getRoot, getParent } from \"mobx-state-tree\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { List } from \"semantic-ui-react\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { runTemplate, variableNotation } from \"../../core/Template\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\nconst RankerItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * Ranker tag, used to ranking models\n * @example\n * <View>\n *   <Ranker name=\"ranker\" value=\"$items\"></Ranker>\n * </View>\n * @name Ranker\n * @param {string} name of group\n * @param {y|x=} [axis=y] axis direction\n * @param {string} sortedHighlightColor sorted color\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  // elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  ranked: types.optional(types.string, \"true\"),\n  sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"ranker\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(RankerItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    _addRegion(val, idx) {\n      const reg = RankerItemModel.create({\n        value: val,\n        idx: idx,\n        _value: val,\n      });\n\n      self.regions.push(reg);\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex == newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          // weights: ranked,\n          items: self.regions.map(r => r.value),\n          selected: self.regions.map(r => r.selected),\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      obj.value.items.forEach((v, idx) => {\n        self._addRegion(v, idx);\n      });\n\n      self.setUpdate();\n    },\n  }));\n\nconst RankerModel = types.compose(\n  \"RankerModel\",\n  TagAttrs,\n  Model,\n);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxRankerView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxRanker = inject(\"store\")(observer(HtxRankerView));\n\nRegistry.addTag(\"ranker\", RankerModel, HtxRanker);\n\nexport { RankerModel, HtxRanker };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport styles from \"./Segment.module.scss\";\n\n/**\n * Segment Component\n */\nexport default class Segment extends React.Component {\n  render() {\n    return <div className={styles.block}>{this.props.children}</div>;\n  }\n}\n\nSegment.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","/**\n * Libraries\n */\nimport React, { Component } from \"react\";\nimport parse5 from \"parse5\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getSnapshot } from \"mobx-state-tree\";\nimport { Result, Spin } from \"antd\";\n\n/**\n * Core\n */\nimport Registry from \"../../core/Registry\";\nimport Requests from \"../../core/Requests\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Tree from \"../../core/Tree\";\n\n/**\n * Components\n */\nimport Completions from \"../Completions/Completions\";\nimport Controls from \"../Controls/Controls\";\nimport Panel from \"../Panel/Panel\";\nimport Settings from \"../Settings/Settings\";\nimport Debug from \"../Debug\";\nimport SideColumn from \"../SideColumn/SideColumn\";\n\n/**\n * Visual\n */\nimport { ViewModel } from \"../../interfaces/visual/View\";\nimport { TableModel } from \"../../interfaces/visual/Table\";\nimport { HeaderModel } from \"../../interfaces/visual/Header\";\nimport { HyperTextModel } from \"../../interfaces/visual/HyperText\";\nimport { DialogModel } from \"../../interfaces/visual/Dialog\";\n\n/**\n * Object\n */\nimport { AudioModel } from \"../../interfaces/object/Audio\";\nimport { AudioPlusModel } from \"../../interfaces/object/AudioPlus\";\nimport { ImageModel } from \"../../interfaces/object/Image\";\nimport { TextModel } from \"../../interfaces/object/Text\";\n\n/**\n * Control\n */\nimport { RectangleModel } from \"../../interfaces/control/Rectangle\";\nimport { PolygonModel } from \"../../interfaces/control/Polygon\";\nimport { RectangleLabelsModel } from \"../../interfaces/control/RectangleLabels\";\nimport { PolygonLabelsModel } from \"../../interfaces/control/PolygonLabels\";\nimport { ChoicesModel } from \"../../interfaces/control/Choices\";\nimport { TextAreaModel } from \"../../interfaces/control/TextArea\";\nimport { RatingModel } from \"../../interfaces/control/Rating\";\nimport { ListModel } from \"../../interfaces/control/List\";\nimport { RankerModel } from \"../../interfaces/control/Ranker\";\n\n/**\n * Components\n */\nimport Segment from \"../Segment/Segment\";\n\n/**\n * Styles\n */\nimport styles from \"./App.module.scss\";\n\n/**\n * App\n */\nconst App = inject(\"store\")(\n  observer(\n    class App extends Component {\n      renderSuccess() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"Done!\" />;\n      }\n\n      renderNoCompletion() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"No more completions\" />;\n      }\n\n      renderNothingToLabel() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"No more data available for labeling\" />;\n      }\n\n      renderLoader() {\n        return <Result icon={<Spin size=\"large\" />} />;\n      }\n\n      render() {\n        const self = this;\n        const { store } = this.props;\n\n        if (store.isLoading) return this.renderLoader();\n\n        if (store.noTask) return this.renderNothingToLabel();\n\n        if (store.labeledSuccess) return this.renderSuccess();\n\n        if (!store.completionStore.currentCompletion) return this.renderNoCompletion();\n\n        const { root } = store.completionStore.currentCompletion;\n\n        return (\n          <div className={styles.editor}>\n            <Settings store={store} />\n            <Provider store={store}>\n              <div>\n                {store.hasInterface(\"panel\") && <Panel store={store} />}\n\n                {store.showingDescription && (\n                  <Segment>\n                    <div dangerouslySetInnerHTML={{ __html: store.description }} />\n                  </Segment>\n                )}\n\n                <div className={\"common-container\"}>\n                  <Segment>\n                    {Tree.renderItem(root)}\n                    {store.hasInterface(\"submit\") && <Controls />}\n                  </Segment>\n\n                  <div className={styles.menu}>\n                    {store.hasInterface(\"completions\") && <Completions store={store} />}\n\n                    {store.hasInterface(\"side-column\") && <SideColumn store={store} />}\n                  </div>\n                </div>\n              </div>\n            </Provider>\n          </div>\n        );\n      }\n    },\n  ),\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport Utilities from \"../utils\";\n\nconst TaskStore = types\n  .model(\"Task\", {\n    id: types.identifierNumber,\n    data: types.maybeNull(types.string),\n    project: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get app() {\n      return getParent(self);\n    },\n\n    /**\n     * Return JSON with task data\n     * @returns {object}\n     */\n    get dataObj() {\n      if (Utilities.Checkers.isStringJSON(self.data)) {\n        return JSON.parse(self.data);\n      } else {\n        return null;\n      }\n    },\n  }));\n\nexport default TaskStore;\n","import { types, resolvePath, getEnv, onSnapshot, getSnapshot, applySnapshot } from \"mobx-state-tree\";\nimport { IObservableArray } from \"mobx\";\n\nconst TimeTraveller = types\n  .model(\"TimeTraveller\", {\n    history: types.array(types.frozen()),\n    undoIdx: -1,\n    targetPath: \"\",\n\n    createdIdx: 1,\n\n    isFrozen: types.optional(types.boolean, false),\n    frozenIdx: -1,\n  })\n  .views(self => ({\n    get canUndo() {\n      // [TODO] since we initialize state a bit incorrectly we end up with 2 items in history\n      // before even any action takes place. To protect those items we keep them in history forever\n      return self.undoIdx > 1;\n    },\n    get canRedo() {\n      return self.undoIdx < self.history.length - 1;\n    },\n  }))\n  .actions(self => {\n    let targetStore;\n    let snapshotDisposer;\n    let skipNextUndoState = false;\n\n    return {\n      freeze() {\n        self.isFrozen = true;\n        skipNextUndoState = true;\n        self.frozenIdx = self.undoIdx;\n      },\n\n      addUndoState(ss) {\n        if (skipNextUndoState) {\n          // skip recording if this state was caused by undo / redo\n          skipNextUndoState = false;\n          return;\n        }\n        self.history.splice(self.undoIdx + 1);\n        self.history.push(ss);\n        self.undoIdx = self.history.length - 1;\n      },\n      afterCreate() {\n        targetStore = self.targetPath ? resolvePath(self, self.targetPath) : getEnv(self).targetStore;\n\n        if (!targetStore)\n          throw new Error(\n            \"Failed to find target store for TimeTraveller. Please provide `targetPath`  property, or a `targetStore` in the environment\",\n          );\n        // TODO: check if targetStore doesn't contain self\n        // if (contains(targetStore, self)) throw new Error(\"TimeTraveller shouldn't be recording itself. Please specify a sibling as taret, not some parent\")\n        // start listening to changes\n        snapshotDisposer = onSnapshot(targetStore, snapshot => this.addUndoState(snapshot));\n        // record an initial state if no known\n        if (self.history.length === 0) {\n          this.addUndoState(getSnapshot(targetStore));\n        }\n\n        self.createdIdx = self.undoIdx;\n      },\n      beforeDestroy() {\n        snapshotDisposer();\n      },\n      undo() {\n        if (self.isFrozen && self.frozenIdx <= self.undoIdx) return;\n\n        self.undoIdx--;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      redo() {\n        self.undoIdx++;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      set(idx) {\n        self.undoIdx = idx;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      reset() {\n        self.undoIdx = self.createdIdx;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n    };\n  });\n\nexport default TimeTraveller;\n","import keymaster from \"keymaster\";\n\nlet _hotkeys_map = {};\n\n/**\n * Add key\n * @param {*} key\n * @param {*} func\n */\nfunction addKey(key, func) {\n  if (_hotkeys_map[key]) return;\n\n  _hotkeys_map[key] = true;\n  keymaster(key, \"main\", func);\n}\n\n/**\n * Unbund all hotkeys\n */\nfunction unbindAll() {\n  for (let key of Object.keys(_hotkeys_map)) keymaster.unbind(key);\n\n  _hotkeys_map = {};\n}\n\n/**\n * Set scope of hotkeys\n * @param {*} scope\n */\nfunction setScope(scope) {\n  keymaster.setScope(scope);\n}\n\n/**\n * Create combination\n */\nfunction makeComb() {\n  let prefix = null;\n  let st = \"1234567890qwertasdfgzxcvbyuiophjklnm\";\n  let combs = st.split(\"\");\n\n  for (var i = 0; i <= combs.length; i++) {\n    let comb;\n    if (prefix) comb = prefix + \"+\" + combs[i];\n    else comb = combs[i];\n\n    if (!_hotkeys_map.hasOwnProperty(comb)) return comb;\n  }\n\n  return null;\n}\n\nexport default { addKey, unbindAll, makeComb, setScope };\n","import { types, getParent, getEnv, flow, destroy, getMembers } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\nimport Types from \"../core/Types\";\n\nimport { TextRegionModel } from \"../interfaces/object/TextRegion\";\nimport { RectRegionModel } from \"../interfaces/object/RectRegion\";\nimport { AudioRegionModel } from \"../interfaces/object/AudioRegion\";\nimport { TextAreaRegionModel } from \"../interfaces/object/TextAreaRegion\";\nimport { PolygonRegionModel } from \"../interfaces/object/PolygonRegion\";\n\nconst Relation = types\n  .model(\"Relation\", {\n    node1: types.reference(\n      types.union(TextRegionModel, RectRegionModel, AudioRegionModel, TextAreaRegionModel, PolygonRegionModel),\n    ),\n    node2: types.reference(\n      types.union(TextRegionModel, RectRegionModel, AudioRegionModel, TextAreaRegionModel, PolygonRegionModel),\n    ),\n  })\n  .actions(self => ({\n    toggleHighlight() {\n      if (self.node1 == self.node2) {\n        self.node1.toggleHightlight();\n      } else {\n        self.node1.toggleHightlight();\n        self.node2.toggleHightlight();\n      }\n    },\n  }));\n\nexport default types\n  .model(\"RelationStore\", {\n    relations: types.array(Relation),\n  })\n  .actions(self => ({\n    findRelations(node1, node2) {\n      if (!node2) {\n        return self.relations.filter(rl => {\n          return rl.node1.id == node1.id || rl.node2.id == node1.id;\n        });\n      }\n\n      return self.relations.filter(rl => {\n        return rl.node1.id == node1.id && rl.node2.id == node2.id;\n      });\n    },\n\n    nodesRelated(node1, node2) {\n      return self.findRelations(node1, node2).length > 0;\n    },\n\n    addRelation(node1, node2) {\n      if (self.nodesRelated(node1, node2)) return;\n\n      const rl = Relation.create({\n        node1: node1,\n        node2: node2,\n      });\n\n      // self.relations.unshift(rl);\n      self.relations.push(rl);\n\n      return rl;\n    },\n\n    deleteRelation(rl) {\n      destroy(rl);\n    },\n\n    deleteNodeRelation(node) {\n      // lookup $node and delete it's relation\n      const rl = self.findRelations(node);\n      rl.length && rl.forEach(self.deleteRelation);\n    },\n\n    serializeCompletion() {\n      return self.relations.map(r => {\n        return {\n          from_id: r.node1.pid,\n          to_id: r.node2.pid,\n          type: \"relation\",\n        };\n      });\n    },\n\n    deserializeRelation(node1, node2) {\n      self.addRelation(node1, node2);\n    },\n  }));\n","import { types, getParent, getEnv, flow, destroy, getMembers } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\nimport Types from \"../core/Types\";\n\nimport { TextRegionModel } from \"../interfaces/object/TextRegion\";\nimport { RectRegionModel } from \"../interfaces/object/RectRegion\";\nimport { AudioRegionModel } from \"../interfaces/object/AudioRegion\";\n\nconst Normalization = types\n  .model(\"Normalization\", {\n    node1: types.union(\n      types.reference(TextRegionModel),\n      types.reference(RectRegionModel),\n      types.reference(AudioRegionModel),\n    ),\n    node2: types.union(\n      types.reference(TextRegionModel),\n      types.reference(RectRegionModel),\n      types.reference(AudioRegionModel),\n    ),\n  })\n  .actions(self => ({\n    toggleHighlight() {\n      if (self.node1 == self.node2) {\n        self.node1.toggleHightlight();\n      } else {\n        self.node1.toggleHightlight();\n        self.node2.toggleHightlight();\n      }\n    },\n  }));\n\nexport default types\n  .model(\"NormalizationStore\", {\n    normalizations: types.array(Normalization),\n  })\n  .actions(self => ({\n    findNormalization(node1, node2) {\n      if (!node2) {\n        return self.normalizations.find(rl => {\n          return rl.node1.id == node1.id || rl.node2.id == node1.id;\n        });\n      }\n\n      return self.normalizations.find(rl => {\n        return rl.node1.id == node1.id && rl.node2.id == node2.id;\n      });\n    },\n\n    addNormalization(node1, node2) {\n      if (self.findNormalization(node1, node2)) return;\n\n      const rl = Normalization.create({\n        node1: node1,\n        node2: node2,\n      });\n\n      self.normalizations.unshift(rl);\n\n      return rl;\n    },\n\n    deleteNormalization(rl) {\n      destroy(rl);\n    },\n\n    deleteNodeNormalization(node) {\n      // lookup $node and delete it's normalization\n      const rl = self.findNormalization(node);\n\n      if (rl) self.deleteNormalization(rl);\n    },\n  }));\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport { TextRegionModel } from \"../interfaces/object/TextRegion\";\nimport { RectRegionModel } from \"../interfaces/object/RectRegion\";\nimport { PolygonRegionModel } from \"../interfaces/object/PolygonRegion\";\nimport { AudioRegionModel } from \"../interfaces/object/AudioRegion\";\nimport { TextAreaRegionModel } from \"../interfaces/object/TextAreaRegion\";\n\nexport default types\n  .model(\"RegionStore\", {\n    regions: types.array(\n      types.safeReference(\n        types.union(TextRegionModel, RectRegionModel, PolygonRegionModel, AudioRegionModel, TextAreaRegionModel),\n      ),\n    ),\n  })\n  .actions(self => ({\n    addRegion(region) {\n      self.regions.push(region);\n    },\n\n    findRegion(pid) {\n      return self.regions.find(r => r.pid === pid);\n    },\n\n    /**\n     * Delete region\n     * @param {obj} region\n     */\n    deleteRegion(region) {\n      const arr = self.regions;\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === region) {\n          arr.splice(i, 1);\n        }\n      }\n    },\n\n    unselectAll() {\n      self.regions.forEach(r => r.unselectRegion());\n      getParent(self).setHighlightedNode(null);\n    },\n\n    unhighlightAll() {\n      self.regions.forEach(r => r.setHighlight(false));\n    },\n  }));\n","import { types, getParent, getEnv, flow, destroy, detach, getMembers } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\nimport Types from \"../core/Types\";\n\nimport Registry from \"../core/Registry\";\nimport Tree from \"../core/Tree\";\nimport TimeTraveller from \"../core/TimeTraveller\";\nimport Hotkey from \"../core/Hotkey\";\n\nimport RelationStore from \"./RelationStore\";\nimport NormalizationStore from \"./NormalizationStore\";\nimport RegionStore from \"./RegionStore\";\nimport { RectangleModel } from \"../interfaces/control/Rectangle\";\n\nimport * as HtxObjectModel from \"../interfaces/object\";\n\nconst Completion = types\n  .model(\"Completion\", {\n    id: types.identifier,\n    pk: types.optional(types.integer, 1),\n    selected: types.optional(types.boolean, false),\n\n    createdDate: types.optional(types.string, new Date().toISOString()),\n    createdAgo: types.maybeNull(types.string),\n    createdBy: types.optional(types.string, \"Admin\"),\n\n    honeypot: types.optional(types.boolean, false),\n\n    root: Types.allModelsTypes(),\n    names: types.map(types.reference(Types.allModelsTypes())),\n    toNames: types.map(types.array(types.reference(Types.allModelsTypes()))),\n\n    history: types.optional(TimeTraveller, { targetPath: \"../root\" }),\n\n    dragMode: types.optional(types.boolean, false),\n\n    relationMode: types.optional(types.boolean, false),\n    relationStore: types.optional(RelationStore, {\n      relations: [],\n    }),\n\n    normalizationMode: types.optional(types.boolean, false),\n    normalizationStore: types.optional(NormalizationStore, {\n      normalizations: [],\n    }),\n\n    regionStore: types.optional(RegionStore, {\n      regions: [],\n    }),\n\n    highlightedNode: types.maybeNull(\n      types.union(\n        types.safeReference(HtxObjectModel.TextRegionModel),\n        types.safeReference(HtxObjectModel.RectRegionModel),\n        types.safeReference(HtxObjectModel.AudioRegionModel),\n        types.safeReference(HtxObjectModel.TextAreaRegionModel),\n        types.safeReference(HtxObjectModel.PolygonRegionModel),\n        types.safeReference(RectangleModel),\n      ),\n    ),\n  })\n  .views(self => ({\n    get store() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    reinitHistory() {\n      self.history = { targetPath: \"../root\" };\n    },\n    // send update to server\n    _updateServerState(state) {\n      let appStore = getParent(self, 3);\n      let url = \"/api/tasks/\" + appStore.task.id + \"/completions/\" + self.pk + \"/\";\n\n      getEnv(self).patch(url, JSON.stringify(state));\n    },\n\n    setHoneypot() {\n      self.honeypot = true;\n      self._updateServerState({ honeypot: self.honeypot });\n    },\n\n    setDragMode(val) {\n      self.dragMode = val;\n    },\n\n    setNormalizationMode(val) {\n      self.normalizationMode = val;\n    },\n\n    setHighlightedNode(node) {\n      self.highlightedNode = node;\n    },\n\n    startRelationMode(node1) {\n      self._relationObj = node1;\n      self.relationMode = true;\n    },\n\n    stopRelationMode() {\n      self._relationObj = null;\n      self.relationMode = false;\n\n      self.regionStore.unhighlightAll();\n    },\n\n    deleteAllRegions() {\n      self.regionStore.regions.forEach(r => r.deleteRegion());\n    },\n\n    addRegion(reg) {\n      self.regionStore.unselectAll();\n      self.regionStore.addRegion(reg);\n\n      if (self.relationMode) {\n        self.addRelation(reg);\n        self.stopRelationMode();\n      }\n    },\n\n    /**\n     * Add relation\n     * @param {*} reg\n     */\n    addRelation(reg) {\n      self.relationStore.addRelation(self._relationObj, reg);\n    },\n\n    addNormalization(normalization) {\n      self.normalizationStore.addNormalization();\n    },\n\n    /**\n     * Remove honeypot\n     */\n    removeHoneypot() {\n      self.honeypot = false;\n      self._updateServerState({ honeypot: self.honeypot });\n    },\n\n    traverseTree(cb) {\n      let visitNode;\n      visitNode = function(node) {\n        cb(node);\n\n        if (node.children) {\n          node.children.forEach(chld => visitNode(chld));\n        }\n      };\n\n      visitNode(self.root);\n    },\n\n    /**\n     *\n     */\n    beforeSend() {\n      self.traverseTree(node => {\n        if (node && node.beforeSend) {\n          node.beforeSend();\n        }\n      });\n\n      self.stopRelationMode();\n      self.regionStore.unselectAll();\n    },\n\n    /**\n     * Delete region\n     * @param {*} region\n     */\n    deleteRegion(region) {\n      destroy(region);\n    },\n\n    afterCreate() {\n      self.traverseTree(node => {\n        // create mapping from name to Model (by ref)\n        if (node && node.name && node.id) self.names.set(node.name, node.id);\n\n        if (node && node.toname && node.id) {\n          const val = self.toNames.get(node.toname);\n          if (val) {\n            val.push(node.id);\n          } else {\n            self.toNames.set(node.toname, [node.id]);\n          }\n        }\n      });\n\n      Hotkey.unbindAll();\n\n      // [TODO] we need to traverse this two times, fix\n      self.traverseTree(node => {\n        if (node && node.onHotKey && node.hotkey) Hotkey.addKey(node.hotkey, node.onHotKey);\n      });\n\n      self.traverseTree(node => {\n        if (node && node.onHotKey && !node.hotkey) {\n          const comb = Hotkey.makeComb();\n\n          if (!comb) return;\n\n          node.hotkey = comb;\n          Hotkey.addKey(node.hotkey, node.onHotKey);\n        }\n      });\n\n      Hotkey.setScope(\"main\");\n    },\n\n    serializeCompletion() {\n      const arr = [];\n\n      self.traverseTree(node => {\n        if (node.toStateJSON) {\n          const val = node.toStateJSON();\n\n          if (val) arr.push(val);\n        }\n      });\n\n      const relations = self.relationStore.serializeCompletion();\n      arr.push(relations);\n\n      const flatten = arr => {\n        return arr.reduce(function(flat, toFlatten) {\n          return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n        }, []);\n      };\n\n      return flatten(arr);\n    },\n\n    /**\n     * Deserialize completion of models\n     */\n    deserializeCompletion(json) {\n      json.forEach(obj => {\n        if (obj[\"type\"] !== \"relation\") {\n          const names = obj.to_name.split(\",\");\n          names.forEach(name => {\n            const toModel = self.names.get(name);\n            if (!toModel) throw new Error(\"No model found for \" + obj.to_name);\n\n            const fromModel = self.names.get(obj.from_name);\n            if (!fromModel) throw new Error(\"No model found for \" + obj.from_name);\n\n            toModel.fromStateJSON(obj, fromModel);\n          });\n        } else {\n          self.relationStore.deserializeRelation(\n            self.regionStore.findRegion(obj.from_id),\n            self.regionStore.findRegion(obj.to_id),\n          );\n        }\n      });\n    },\n  }));\n\nexport default types\n  .model(\"CompletionStore\", {\n    completions: types.array(Completion),\n    selected: types.maybeNull(types.reference(Completion)),\n  })\n  .views(self => ({\n    /**\n     * Get current completion\n     */\n    get currentCompletion() {\n      return self.selected && self.completions.find(c => c.id === self.selected.id);\n    },\n\n    /**\n     * Get parent\n     */\n    get store() {\n      return getParent(self);\n    },\n\n    /**\n     * Get only those that were saved\n     */\n    get savedCompletions() {\n      return self.completions.filter(c => !c.was_generated);\n    },\n  }))\n  .actions(self => {\n    function selectCompletion(id) {\n      self.completions.map(c => (c.selected = false));\n      const c = self.completions.find(c => c.id === id);\n\n      // if (self.selected && self.selected.id !== c.id) c.history.reset();\n\n      c.selected = true;\n      self.selected = c;\n    }\n\n    /**\n     * Adding new completion\n     * @param {object} node\n     * @param {string} type\n     */\n    function addCompletion(node, type) {\n      const c = Completion.create(node);\n\n      if (self.store.task && type == \"initial\")\n        c.traverseTree(node => node.updateValue && node.updateValue(self.store));\n\n      self.completions.push(c);\n\n      return c;\n    }\n\n    const _deleteCompletion = flow(function* _deleteCompletion(pk) {\n      try {\n        const json = yield getEnv(self).remove(\"/api/tasks/\" + self.store.task.id + \"/completions/\" + pk + \"/\");\n      } catch (err) {\n        console.error(\"Failed to skip task \", err);\n      }\n    });\n\n    function destroyCompletion(completion) {\n      destroy(completion);\n\n      self.selected = null;\n      if (self.completions.length > 0) self.selectCompletion(self.completions[0].id);\n    }\n\n    function deleteCompletion(completion) {\n      _deleteCompletion(completion.pk);\n      destroyCompletion(completion);\n    }\n\n    /**\n     *\n     * @param {*} c\n     */\n    function addSavedCompletion(c) {\n      const completionModel = Tree.treeToModel(self.store.config);\n      const modelClass = Registry.getModelByTag(completionModel.type);\n\n      let root = modelClass.create(completionModel);\n\n\tconsole.log(c);\n\t\n      const node = {\n        pk: c.id,\n        id: guidGenerator(),\n        createdAgo: c.created_ago,\n        createdBy: c.created_username,\n        honeypot: c.honeypot,\n        root: root,\n      };\n\n      const completion = self.addCompletion(node, \"list\");\n      return completion;\n    }\n\n    /**\n     * Initial Completion\n     * @returns {object}\n     */\n    function addInitialCompletion() {\n      const completionModel = Tree.treeToModel(self.store.config);\n      const modelClass = Registry.getModelByTag(completionModel.type);\n\n      let root = modelClass.create(completionModel);\n\n      const node = {\n        id: guidGenerator(),\n        root: root,\n      };\n\n      if (self.store.expert) {\n        const { expert } = self.store;\n        node[\"createdBy\"] = expert.firstName + \" \" + expert.lastName;\n      } else {\n        node[\"createdBy\"] = \"Admin\";\n      }\n\n      let completion = self.addCompletion(node, \"initial\");\n\n      return completion;\n    }\n\n    return {\n      selectCompletion,\n      addCompletion,\n      deleteCompletion,\n      destroyCompletion,\n      addInitialCompletion,\n      addSavedCompletion,\n    };\n  });\n","export const API_URL = {\n  MAIN: \"/api\",\n  TASKS: \"/tasks\",\n  COMPLETIONS: \"/completions\",\n  CANCEL: \"/cancel\",\n  PROJECTS: \"/projects\",\n  NEXT: \"/next\",\n  EXPERT_INSRUCTIONS: \"/expert_instruction\",\n};\n","import { types, getEnv, flow, getSnapshot } from \"mobx-state-tree\";\n\nimport Task from \"./TaskStore\";\nimport CompletionStore from \"./CompletionStore\";\nimport Hotkey from \"../core/Hotkey\";\nimport { API_URL } from \"../constants/Api\";\n\nconst UserStore = types.model(\"UserStore\", {\n  pk: types.integer,\n  firstName: types.string,\n  lastName: types.string,\n});\n\nconst SettingsModel = types\n  .model(\"SettingsModel\", {\n    enableHotkeys: types.optional(types.boolean, true),\n    enablePanelHotkeys: types.optional(types.boolean, true),\n    enableTooltips: types.optional(types.boolean, true),\n  })\n  .actions(self => ({\n    toggleHotkeys() {\n      self.enableHotkeys = !self.enableHotkeys;\n      if (self.enableHotkeys) {\n        Hotkey.setScope(\"main\");\n      } else {\n        Hotkey.setScope(\"none\");\n      }\n    },\n\n    togglePanelHotkeys() {\n      self.enablePanelHotkeys = !self.enablePanelHotkeys;\n    },\n\n    toggleTooltips() {\n      self.enableTooltips = !self.enableTooltips;\n    },\n  }));\n\nexport default types\n  .model(\"AppStore\", {\n    config: types.string,\n\n    task: types.maybeNull(Task),\n    taskID: types.maybeNull(types.number),\n\n    interfaces: types.array(types.string),\n\n    completionStore: types.optional(CompletionStore, {\n      completions: [],\n    }),\n\n    projectID: types.integer,\n\n    expert: UserStore,\n\n    debug: types.optional(types.boolean, true),\n\n    settings: types.optional(SettingsModel, {}),\n\n    showingSettings: types.optional(types.boolean, false),\n    showingDescription: types.optional(types.boolean, false),\n    description: types.maybeNull(types.string),\n\n    isLoading: types.optional(types.boolean, false),\n    noTask: types.optional(types.boolean, false),\n    labeledSuccess: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get fetch() {\n      return getEnv(self).fetch;\n    },\n    get alert() {\n      return getEnv(self).alert;\n    },\n    get post() {\n      return getEnv(self).post;\n    },\n  }))\n  .actions(self => {\n    function setDescription(text) {\n      self.description = text;\n    }\n\n    function toggleSettings() {\n      self.showingSettings = !self.showingSettings;\n    }\n\n    const openDescription = flow(function* openDescription() {\n      let url = `${API_URL.MAIN}${API_URL.PROJECTS}/${self.projectID}${API_URL.EXPERT_INSRUCTIONS}`;\n      const res = yield self.fetch(url);\n\n      if (res.status === 200) {\n        res.text().then(function(text) {\n          self.setDescription(text);\n        });\n      } else {\n        self.setDescription(\"No instructions for this task\");\n      }\n\n      self.showingDescription = true;\n    });\n\n    function closeDescription() {\n      self.showingDescription = false;\n    }\n\n    function markLoading(loading) {\n      self.isLoading = loading;\n    }\n\n    function hasInterface(name) {\n      return self.interfaces.find(i => name === i);\n    }\n\n    const afterCreate = function() {\n      //if (!self.task) {\n        self.loadTask();\n      //}\n\n      Hotkey.addKey(\"ctrl+enter\", self.sendTask);\n\n      if (self.hasInterface(\"submit:skip\")) Hotkey.addKey(\"ctrl+space\", self.skipTask);\n\n      Hotkey.addKey(\"ctrl+backspace\", function() {\n        const { selected } = self.completionStore;\n        selected.deleteAllRegions();\n      });\n\n      Hotkey.addKey(\"ctrl+z\", function() {\n        const { history } = self.completionStore.selected;\n        history && history.canUndo && history.undo();\n      });\n\n      Hotkey.addKey(\"escape\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.relationMode) {\n          c.stopRelationMode();\n        }\n      });\n\n      Hotkey.addKey(\"backspace\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.highlightedNode) {\n          c.highlightedNode.deleteRegion();\n        }\n      });\n    };\n\n    function loadTask() {\n      return self.taskID\n        ? _loadTask(`${API_URL.MAIN}${API_URL.TASKS}/${self.taskID}/`)\n        : _loadTask(`${API_URL.MAIN}${API_URL.PROJECTS}/${self.projectID}${API_URL.NEXT}`);\n    }\n\n    function addTask(json) {\n      self.task = Task.create(json);\n    }\n\n    function resetState() {\n      self.completionStore = CompletionStore.create({ completions: [] });\n      const c = self.completionStore.addInitialCompletion();\n\n      self.completionStore.selectCompletion(c.id);\n    }\n\n    function addGeneratedCompletion(data) {\n      if (\"completion_result\" in data && !self.hasInterface(\"predictions:hide\")) {\n        const c = self.completionStore.selected;\n        c.deserializeCompletion(data[\"completion_result\"]);\n        c.reinitHistory();\n      }\n    }\n\n      const _loadTask = flow(function*(url) {\n\t  console.log('_loadTask');\n      try {\n        const res = yield self.fetch(url);\n\n        if (res instanceof Response && res.status === 404) {\n          self.markLoading(false);\n          self.noTask = true;\n          return;\n        }\n\t  console.log('_loadTask');\n        res.json().then(function(r) {\n          r.data = JSON.stringify(r.data);\n\n          self.addTask(r);\n          self.markLoading(false);\n\n          if (self.hasInterface(\"completions\") && r.completions) {\n            self.completionStore.destroyCompletion(self.completionStore.selected);\n\n            for (var i = 0; i < r.completions.length; i++) {\n              const c = r.completions[i];\n\n              if (c.was_cancelled === true) continue;\n\n              const comp = self.completionStore.addSavedCompletion(c);\n              comp.traverseTree(node => node.updateValue && node.updateValue(self));\n              self.completionStore.selectCompletion(comp.id);\n\n              comp.deserializeCompletion(c.result);\n              comp.reinitHistory();\n            }\n          } else {\n            if (self.completionStore.selected)\n              self.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n\n            self.addGeneratedCompletion(r);\n          }\n        });\n      } catch (err) {\n        console.error(\"Failed to load next task \", err);\n      }\n    });\n\n    const skipTask = flow(function* skipTask() {\n      self.markLoading(true);\n\n      try {\n        const json = yield self.post(\n          `${API_URL.MAIN}${API_URL.TASKS}/${self.task.id}${API_URL.CANCEL}`,\n          JSON.stringify({ data: JSON.stringify({ error: \"cancelled\" }) }),\n        );\n\n        self.resetState();\n        return loadTask();\n      } catch (err) {\n        console.error(\"Failed to skip task \", err);\n      }\n    });\n\n    const sendTask = flow(function* sendTask() {\n      const c = self.completionStore.selected;\n\n      c.beforeSend();\n\n      const res = c.serializeCompletion();\n\n      if (self.hasInterface(\"submit:check-empty\") && res.length === 0) {\n        alert(\"You need to label at least something!\");\n        return;\n      }\n\n      self.markLoading(true);\n\n      try {\n        const state = getSnapshot(c);\n\n        const body = JSON.stringify({\n          state: JSON.stringify(state),\n          result: res,\n        });\n\n        yield self.post(`${API_URL.MAIN}${API_URL.TASKS}/${self.task.id}${API_URL.COMPLETIONS}/`, body);\n\n        if (hasInterface(\"submit:load\")) {\n          self.resetState();\n          return loadTask();\n        } else {\n          self.markLoading(false);\n          self.labeledSuccess = true;\n        }\n\n        delete state.history;\n      } catch (err) {\n        console.error(\"Failed to send task \", err);\n      }\n    });\n\n    /**\n     * Function to initilaze completion store\n     */\n    function initializeStore({ completions }) {\n      const { completionStore } = self;\n      let generatedCompletions = [];\n\t\n      if (completions && completions.length) {\n        for (var i = 0; i < completions.length; i++) {\n          const itemOfCompletion = completions[i];\n\n          /**\n           * If user skip task, we skip completion state\n           */\n          if (itemOfCompletion.was_cancelled === true) continue;\n\n          /**\n           * Add to array new completion\n           */\n          generatedCompletions.push(itemOfCompletion);\n        }\n      }\n\n      if (completionStore.completions.length === 0) {\n        const c = self.completionStore.addInitialCompletion();\n        self.completionStore.selectCompletion(c.id);\n\n        // if (generatedCompletions.length > 0) {\n        //  let data = generatedCompletions[0].result;\n\n        //  if (typeof generatedCompletions[0].result === \"string\") {\n        //    data = JSON.parse(generatedCompletions[0].result);\n        //  }\n\n        //  c.deserializeCompletion(data);\n\n        // c.reinitHistory();\n        //}\n      }\n    }\n\n    return {\n      afterCreate,\n      loadTask,\n      addTask,\n      hasInterface,\n      skipTask,\n      sendTask,\n      markLoading,\n      resetState,\n      openDescription,\n      closeDescription,\n      setDescription,\n      toggleSettings,\n      initializeStore,\n      addGeneratedCompletion,\n    };\n  });\n","function getData() {\n  /**\n   * TODO remove, this is here because MST either takes string or a fully features typed tree\n   */\n  // if (window.taskData) window.taskData.data = JSON.stringify(window.taskData.data);\n\n  if (window.taskData && window.taskData.data) {\n    window.taskData.data = JSON.stringify(window.taskData.data);\n  }\n\n  const data = {\n    projectID: window.projectID,\n    isLoading: false,\n    config: window.editorAppConfig,\n    task: window.taskData,\n    taskID: window.taskID,\n    expert: window.expertData,\n    debug: window.debugEditor,\n    interfaces: window.editorInterfaces ? window.editorInterfaces : [\"basic\", \"completions\"],\n  };\n\n  /**\n   * This is here to make project_render_editor to work because it expects static config\n   */\n  if (window.preRender) {\n    data[\"task\"] = window.taskData;\n  }\n\n  /**\n   * /tasks/$id/explore\n   */\n  if (window.explore) {\n    data[\"interfaces\"] = window.editorInterfaces ? window.editorInterfaces : [\"basic\", \"completions\"];\n  } else {\n    data[\"interfaces\"] = window.editorInterfaces\n      ? window.editorInterfaces\n      : [\"basic\", \"submit\", \"submit:skip\", \"submit:submit\"];\n  }\n\n  return data;\n}\n\nfunction rootElement() {\n  const el = document.createElement(\"div\");\n  var root = document.getElementById(\"root\");\n  root.innerHTML = \"\";\n  root.appendChild(el);\n\n  return el;\n}\n\n/**\n * Get current state of Label Studio\n */\nfunction getState() {\n  const completions = window.taskData && window.taskData.completions ? window.taskData.completions : null;\n\n  return {\n    completions: completions,\n  };\n}\n\nexport default { getData, getState, rootElement };\n","import config from \"./config.xml\";\nimport tasks from \"./tasks.json\";\nimport completion from \"./completions/0.json\";\n\nexport const Sentiment = { config, tasks, completion };\n","import config from \"./config.xml\";\nimport tasks from \"./tasks.json\";\nimport completion from \"./completions/0.json\";\n\nexport const AudioClassifiaction = { config, tasks, completion };\n","import config from \"./config.xml\";\nimport tasks from \"./tasks.json\";\nimport completion from \"./completions/0.json\";\n\nexport const AudioRegions = { config, tasks, completion };\n","import config from \"./config.xml\";\nimport tasks from \"./tasks.json\";\nimport completion from \"./completions/0.json\";\n\nexport const ChatbotAnalysis = { config, tasks, completion };\n","import config from \"./config.xml\";\nimport tasks from \"./tasks.json\";\nimport completion from \"./completions/0.json\";\n\nexport const ImageBbox = { config, tasks, completion };\n","import config from \"./config.xml\";\nimport tasks from \"./tasks.json\";\nimport completion from \"./completions/0.json\";\n\nexport const NamedEntity = { config, tasks, completion };\n","import config from \"./config.xml\";\nimport tasks from \"./tasks.json\";\nimport completion from \"./completions/0.json\";\n\nexport const References = { config, tasks, completion };\n","import { Sentiment } from \"../examples/sentiment_analysis\";\nimport { AudioClassifiaction } from \"../examples/audio_classification\";\nimport { AudioRegions } from \"../examples/audio_regions\";\nimport { ChatbotAnalysis } from \"../examples/chatbot_analysis\";\nimport { ImageBbox } from \"../examples/image_bbox\";\nimport { NamedEntity } from \"../examples/named_entity\";\nimport { References } from \"../examples/references\";\nimport { TranscribeAudio } from \"../examples/transcribe_audio\";\n\n/**\n * Choose data type\n */\nlet dataType = AudioRegions;\n\nfunction templateDynamicData() {\n  let settings = {\n    projectID: 1,\n    isLoading: false,\n    taskID: 1,\n    expert: {\n      pk: 1,\n      lastName: \"Jones\",\n      firstName: \"Oliver\",\n    },\n    debug: window.location.search.indexOf(\"debug=true\") !== -1,\n    interfaces: window.editorInterfaces\n      ? window.editorInterfaces\n      : [\"basic\", \"completions\", \"submit\", \"panel\", \"side-column\"],\n    task: {\n      data: JSON.stringify(dataType.tasks[0]),\n      project: 10,\n      id: 100,\n      completions: [],\n    },\n  };\n\n  if (dataType.completion) {\n    settings = {\n      ...settings,\n      task: {\n        ...settings.task,\n        completions: [\n          {\n            result: dataType.completion.completions[0].result,\n          },\n        ],\n      },\n    };\n  }\n\n  let reqXML = () =>\n    fetch(dataType.config)\n      .then(resp => resp.text())\n      .then(r => {\n        settings = {\n          ...settings,\n          config: r,\n        };\n\n        return settings;\n      });\n\n  return reqXML();\n}\n\nfunction getData() {\n  return templateDynamicData();\n}\n\n/**\n * Get completions for task\n */\nasync function getState() {\n  const resp = await getData();\n  const resultCompletions = resp.task.completions ? resp.task.completions : null;\n  return {\n    completions: resultCompletions,\n  };\n}\n\n/**\n * Function to return Root element\n */\nfunction rootElement() {\n  const el = document.createElement(\"div\");\n\n  let root = document.getElementById(\"root\");\n\n  root.innerHTML = \"\";\n  root.appendChild(el);\n\n  root.style.marginTop = \"10px\";\n  root.style.marginBottom = \"10px\";\n  root.style.marginLeft = \"10px\";\n  root.style.marginRight = \"10px\";\n\n  return el;\n}\n\nexport default { getState, getData, rootElement };\n","import config from \"./config.xml\";\nimport tasks from \"./tasks.json\";\nimport completion from \"./completions/0.json\";\n\nexport const TranscribeAudio = { config, tasks, completion };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./assets/styles/global.scss\";\n\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport AppStore from \"./stores/AppStore\";\nimport Requests from \"./core/Requests\";\n\nimport ProductionEnviroment from \"./env/production\";\nimport DevelopmentEnvironment from \"./env/development\";\n\nlet enviroment = DevelopmentEnvironment;\n\nif (process.env.NODE_ENV === \"production\") {\n  enviroment = ProductionEnviroment;\n\n  const app = AppStore.create(enviroment.getData(), {\n    fetch: Requests.fetcher,\n    patch: Requests.patch,\n    post: Requests.poster,\n    remove: Requests.remover,\n    alert: m => console.log(m), // Noop for demo: window.alert(m)\n  });\n\n  /**\n   * Initialize store\n   */\n  app.initializeStore(enviroment.getState());\n\n  window.Htx = app;\n\n  ReactDOM.render(\n    <Provider store={app}>\n      <App />\n    </Provider>,\n    enviroment.rootElement(),\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n} else {\n  enviroment = DevelopmentEnvironment;\n\n  enviroment.getData().then(resp => {\n    const app = AppStore.create(resp, {\n      fetch: Requests.fetcher,\n      patch: Requests.patch,\n      post: Requests.poster,\n      remove: Requests.remover,\n      alert: m => console.log(m), // Noop for demo: window.alert(m)\n    });\n\n    /**\n     * Initialize store\n     */\n    enviroment.getState().then(state => {\n      app.initializeStore(state);\n    });\n\n    window.Htx = app;\n\n    ReactDOM.render(\n      <Provider store={app}>\n        <App />\n      </Provider>,\n      enviroment.rootElement(),\n    );\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n  });\n}\n"],"sourceRoot":""}